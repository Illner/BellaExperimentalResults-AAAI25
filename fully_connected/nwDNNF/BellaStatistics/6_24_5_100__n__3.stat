Number: formula size {Formula representation}
1
15000210
Number: #variables {Formula representation}
1
1875180
Number: #clauses {Formula representation}
1
1875096
Timer (reduced): initialize [ns] {Formula representation}
1
1352715206
Timer: compute connected components [ns] {Formula representation}
31249
12807095662
22850
1072533330
409840.176070
Number: circuit size {Circuit}
1
5758557
Number: #nodes {Circuit}
1
5707720
Number: #edges {Circuit}
1
5758557
Number: #variables {Circuit}
1
1875180
Timer: copy subcircuit [ns] {Circuit}
0
0
0
0
0.000000
Counter: formula size (copy subcircuit) {Circuit}
0
0
0
0
0.000000
Counter: #variables (copy subcircuit) {Circuit}
0
0
0
0
0.000000
Counter: #clauses (copy subcircuit) {Circuit}
0
0
0
0
0.000000
Timer (reduced): initialize [ns] {Compiler}
1
1454716439
Timer (reduced): compile [ns] {Compiler}
1
1488048184978
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
0
Number: #decisions {Compiler}
1
15624
Counter: ratio of recomputed hypergraph cuts {Compiler}
15624
11422
0
1
0.731055
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
11422
624
0
1
0.054631
Counter: #connected components {Compiler}
31249
15624
0
1
0.499984
Counter: #monotone residual formulae / #residual formulae {Compiler}
31249
15625
0
1
0.500016
Counter: monotone residual formula size {Compiler}
15625
3750000
240
240
240.000000
Counter: #pure clauses / #clauses {Compiler}
31249
15625.000000
0.000000
1.000000
0.500016
Counter: pure residual formula size / residual formula size {Compiler}
31249
15625.000000
0.000000
1.000000
0.500016
Timer: assign literal [ns] {Compiler}
51012
1421343646330
1610
471803084469
27862927.278483
Timer: unassign literal [ns] {Compiler}
51012
2836055365
300
85213810
55595.847350
Timer: get decision variable [ns] {Decision heuristic}
15624
476567149
50
77657537
30502.249680
Counter: #preselected variables {Decision heuristic}
15624
21147261
1
1875180
1353.511329
Counter: #restricted variables / #preselected variables {Decision heuristic}
624
0.730313
0.000016
0.001953
0.001170
Timer (reduced): initialize [ns] {SAT solver}
1
395013530
Timer (reduced): initial simplification [ns] {SAT solver}
1
1200
Timer (reduced): initially implied literals [ns] {SAT solver}
1
790
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
31249
13851614685
13500
503381408
443265.854427
Timer: unit propagation [ns] {SAT solver}
31249
15424016
170
298190
493.584307
Counter: #implied literals {SAT solver}
31249
62496
0
5
1.999936
Counter: #implied literals / #variables {SAT solver}
31249
111.617389
0.000000
0.008264
0.003572
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
10798
14017010917
136859
6613595
1298111.772273
Counter: #implicit implied literals / #variables {SAT solver}
10798
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
10798
7.986264
0.000000
0.002747
0.000740
Timer: compute cut [ns] {Partitioning hypergraph}
625
54766214
76130
169919
87625.942400
Counter: cut size {Partitioning hypergraph}
625
5000
8
8
8.000000
Counter: cut size / #variables {Partitioning hypergraph}
625
1.592357
0.002548
0.002548
0.002548
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
10798
1864323221
43129
2043636
172654.493517
Counter: #vertices {Partitioning hypergraph}
10798
16875
0
27
1.562789
Counter: #vertices / #clauses {Partitioning hypergraph}
10798
5.565633
0.000000
0.008905
0.000515
Counter: #hyperedges {Partitioning hypergraph}
10798
6250
0
10
0.578811
Counter: #hyperedges / #variables {Partitioning hypergraph}
10798
1.990446
0.000000
0.003185
0.000184
Counter: hypergraph size {Partitioning hypergraph}
10798
37500
0
60
3.472865
Counter: hypergraph size / formula size {Partitioning hypergraph}
10798
3.106877
0.000000
0.004971
0.000288
Timer: create equivalence structure [ns] {Partitioning hypergraph}
10798
538626005
19060
416599
49882.015651
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
15624
0
0
0
0.000000
Number: #current entries {Cache - component caching}
1
15624
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
15624
12450397894
62220
242179391
796876.465310
Timer: search cache record structure [ns] {Cache - component caching}
15624
67026385
320
1058867
4289.963198
Timer: add cache record structure [ns] {Cache - component caching}
15624
74845895
440
2175495
4790.443868
Counter: #empty cache records / #cache records {Cache - component caching}
15624
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
15624
173871138
728
15000210
11128.465054
Counter: formula size (positive hit) {Cache - component caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - component caching}
15624
173871138
728
15000210
11128.465054
Counter: #variables (cache record structure) {Cache - component caching}
15624
33522780
364
1875180
2145.595238
Counter: #variables (positive hit) {Cache - component caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - component caching}
15624
33522780
364
1875180
2145.595238
Counter: #clauses (cache record structure) {Cache - component caching}
15624
31709112
244
1875096
2029.513057
Counter: #clauses (positive hit) {Cache - component caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - component caching}
15624
31709112
244
1875096
2029.513057
Counter: #removed clauses / #clauses {Cache - component caching}
15624
267.160196
0.000213
1.000000
0.017099
Counter: #identical mappings / #mappings {Cache - component caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
15624
2823185
40
6410
180.695405
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
15624
15624
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
