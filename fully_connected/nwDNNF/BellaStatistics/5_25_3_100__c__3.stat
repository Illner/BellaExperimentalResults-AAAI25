Number: formula size {Formula representation}
1
127650
Number: #variables {Formula representation}
1
18330
Number: #clauses {Formula representation}
1
18260
Timer (reduced): initialize [ns] {Formula representation}
1
14981320
Timer: compute connected components [ns] {Formula representation}
21
19656894
15240
5598394
936042.571429
Number: circuit size {Circuit}
1
57700
Number: #nodes {Circuit}
1
56582
Number: #edges {Circuit}
1
57700
Number: #variables {Circuit}
1
18330
Timer: copy subcircuit [ns] {Circuit}
8
9572835
98629
3988760
1196604.375000
Counter: formula size (copy subcircuit) {Circuit}
8
100200
690
36510
12525.000000
Counter: #variables (copy subcircuit) {Circuit}
8
18720
306
6174
2340.000000
Counter: #clauses (copy subcircuit) {Circuit}
8
18140
232
6103
2267.500000
Timer (reduced): initialize [ns] {Compiler}
1
11148118
Timer (reduced): compile [ns] {Compiler}
1
250197234
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
0
Number: #decisions {Compiler}
1
10
Counter: ratio of recomputed hypergraph cuts {Compiler}
18
7
0
1
0.388889
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
5
3
0
1
0.600000
Counter: #connected components {Compiler}
21
18
0
1
0.857143
Counter: #monotone residual formulae / #residual formulae {Compiler}
21
3
0
1
0.142857
Counter: monotone residual formula size {Compiler}
3
450
150
150
150.000000
Counter: #pure clauses / #clauses {Compiler}
21
3.000000
0.000000
1.000000
0.142857
Counter: pure residual formula size / residual formula size {Compiler}
21
3.000000
0.000000
1.000000
0.142857
Timer: assign literal [ns] {Compiler}
35
106102485
1470
51841261
3031499.571429
Timer: unassign literal [ns] {Compiler}
35
2235598
310
503105
63874.228571
Timer: get decision variable [ns] {Decision heuristic}
10
243606
60
124408
24360.600000
Counter: #preselected variables {Decision heuristic}
10
36790
1
18330
3679.000000
Counter: #restricted variables / #preselected variables {Decision heuristic}
3
0.003905
0.000818
0.001944
0.001302
Timer (reduced): initialize [ns] {SAT solver}
1
4053019
Timer (reduced): initial simplification [ns] {SAT solver}
1
4740
Timer (reduced): initially implied literals [ns] {SAT solver}
1
240
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
21
4521478
20220
790902
215308.476190
Timer: unit propagation [ns] {SAT solver}
21
11080
180
3140
527.619048
Counter: #implied literals {SAT solver}
21
35
0
3
1.666667
Counter: #implied literals / #variables {SAT solver}
21
0.053933
0.000000
0.013158
0.002568
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
2
3266487
1177338
2089149
1633243.500000
Counter: #implicit implied literals / #variables {SAT solver}
2
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
2
0.000241
0.000000
0.000241
0.000121
Timer: compute cut [ns] {Partitioning hypergraph}
2
3719473
1853402
1866071
1859736.500000
Counter: cut size {Partitioning hypergraph}
2
15
7
8
7.500000
Counter: cut size / #variables {Partitioning hypergraph}
2
0.005234
0.001929
0.003305
0.002617
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
2
7732693
2347956
5384737
3866346.500000
Counter: #vertices {Partitioning hypergraph}
2
60
30
30
30.000000
Counter: #vertices / #clauses {Partitioning hypergraph}
2
0.022025
0.007362
0.014663
0.011012
Counter: #hyperedges {Partitioning hypergraph}
2
19
9
10
9.500000
Counter: #hyperedges / #variables {Partitioning hypergraph}
2
0.006661
0.002411
0.004249
0.003330
Counter: hypergraph size {Partitioning hypergraph}
2
207
90
117
103.500000
Counter: hypergraph size / formula size {Partitioning hypergraph}
2
0.013654
0.004804
0.008850
0.006827
Timer: create equivalence structure [ns] {Partitioning hypergraph}
2
516034
177968
338066
258017.000000
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
18
8
0
1
0.444444
Number: #current entries {Cache - component caching}
1
10
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
18
84011508
149218
24559114
4667306.000000
Timer: search cache record structure [ns] {Cache - component caching}
18
102330
180
38620
5685.000000
Timer: add cache record structure [ns] {Cache - component caching}
10
40859
240
15040
4085.900000
Counter: #empty cache records / #cache records {Cache - component caching}
18
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
18
396490
458
127650
22027.222222
Counter: formula size (positive hit) {Cache - component caching}
8
100200
690
36510
12525.000000
Counter: formula size (negative hit) {Cache - component caching}
10
296290
458
127650
29629.000000
Counter: #variables (cache record structure) {Cache - component caching}
18
65015
229
18330
3611.944444
Counter: #variables (positive hit) {Cache - component caching}
8
18720
306
6174
2340.000000
Counter: #variables (negative hit) {Cache - component caching}
10
46295
229
18330
4629.500000
Counter: #clauses (cache record structure) {Cache - component caching}
18
63710
154
18260
3539.444444
Counter: #clauses (positive hit) {Cache - component caching}
8
18140
232
6103
2267.500000
Counter: #clauses (negative hit) {Cache - component caching}
10
45570
154
18260
4557.000000
Counter: #removed clauses / #clauses {Cache - component caching}
18
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
8
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
10
810
50
150
81.000000
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
10
10
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
