Number: formula size {Formula representation}
1
12908672
Number: #variables {Formula representation}
1
2151464
Number: #clauses {Formula representation}
1
2151720
Timer (reduced): initialize [ns] {Formula representation}
1
1421780493
Timer: compute connected components [ns] {Formula representation}
76831
26755800004
9900
1220439776
348242.246020
Number: circuit size {Circuit}
1
6777905
Number: #nodes {Circuit}
1
6650982
Number: #edges {Circuit}
1
6777905
Number: #variables {Circuit}
1
2151464
Timer: copy subcircuit [ns] {Circuit}
0
0
0
0
0.000000
Counter: formula size (copy subcircuit) {Circuit}
0
0
0
0
0.000000
Counter: #variables (copy subcircuit) {Circuit}
0
0
0
0
0.000000
Counter: #clauses (copy subcircuit) {Circuit}
0
0
0
0
0.000000
Timer (reduced): initialize [ns] {Compiler}
1
1463019966
Timer (reduced): compile [ns] {Compiler}
1
807037503518
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
0
Number: #decisions {Compiler}
1
38415
Counter: ratio of recomputed hypergraph cuts {Compiler}
38415
35857
0
1
0.933411
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
35857
1763
0
1
0.049168
Counter: #connected components {Compiler}
76831
38415
0
1
0.499993
Counter: #monotone residual formulae / #residual formulae {Compiler}
76831
38416
0
1
0.500007
Counter: monotone residual formula size {Compiler}
38416
4302592
112
112
112.000000
Counter: #pure clauses / #clauses {Compiler}
76831
38416.000000
0.000000
1.000000
0.500007
Counter: pure residual formula size / residual formula size {Compiler}
76831
38416.000000
0.000000
1.000000
0.500007
Timer: assign literal [ns] {Compiler}
118387
662123534407
890
163183626921
5592873.663553
Timer: unassign literal [ns] {Compiler}
118387
4359979040
270
109946737
36828.190933
Timer: get decision variable [ns] {Decision heuristic}
38415
898892470
50
64040541
23399.517636
Counter: #preselected variables {Decision heuristic}
38415
45343920
1
2151464
1180.370168
Counter: #restricted variables / #preselected variables {Decision heuristic}
1763
4.838359
0.000026
0.003759
0.002744
Timer (reduced): initialize [ns] {SAT solver}
1
427732526
Timer (reduced): initial simplification [ns] {SAT solver}
1
1970
Timer (reduced): initially implied literals [ns] {SAT solver}
1
1260
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
76831
24946964205
5760
556715420
324699.199607
Timer: unit propagation [ns] {SAT solver}
76831
45220289
170
352359
588.568273
Counter: #implied literals {SAT solver}
76831
312295
0
14
4.064700
Counter: #implied literals / #variables {SAT solver}
76831
585.902027
0.000000
0.017544
0.007626
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
34094
48671198521
62370
8979838
1427559.057928
Counter: #implicit implied literals / #variables {SAT solver}
34094
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
34094
16.984149
0.000000
0.005814
0.000498
Timer: compute cut [ns] {Partitioning hypergraph}
213
48718078
45610
482358
228723.370892
Counter: cut size {Partitioning hypergraph}
213
2799
3
15
13.140845
Counter: cut size / #variables {Partitioning hypergraph}
213
0.699366
0.002708
0.007463
0.003283
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
34094
4382269897
19569
5299601
128534.929812
Counter: #vertices {Partitioning hypergraph}
34094
16924
0
86
0.496392
Counter: #vertices / #clauses {Partitioning hypergraph}
34094
3.684376
0.000000
0.017798
0.000108
Counter: #hyperedges {Partitioning hypergraph}
34094
3988
0
20
0.116971
Counter: #hyperedges / #variables {Partitioning hypergraph}
34094
0.985821
0.000000
0.009950
0.000029
Counter: hypergraph size {Partitioning hypergraph}
34094
37001
0
188
1.085264
Counter: hypergraph size / formula size {Partitioning hypergraph}
34094
2.042351
0.000000
0.009849
0.000060
Timer: create equivalence structure [ns] {Partitioning hypergraph}
34094
1357528178
9650
812017
39817.216460
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
38415
0
0
0
0.000000
Number: #current entries {Cache - component caching}
1
38415
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
38415
19104779020
23800
177368938
497326.019003
Timer: search cache record structure [ns] {Cache - component caching}
38415
98568728
160
441269
2565.891657
Timer: add cache record structure [ns] {Cache - component caching}
38415
113129703
240
1088586
2944.935650
Counter: #empty cache records / #cache records {Cache - component caching}
38415
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
38415
292077650
344
12908672
7603.218795
Counter: formula size (positive hit) {Cache - component caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - component caching}
38415
292077650
344
12908672
7603.218795
Counter: #variables (cache record structure) {Cache - component caching}
38415
66770488
172
2151464
1738.135832
Counter: #variables (positive hit) {Cache - component caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - component caching}
38415
66770488
172
2151464
1738.135832
Counter: #clauses (cache record structure) {Cache - component caching}
38415
65917566
116
2151720
1715.932995
Counter: #clauses (positive hit) {Cache - component caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - component caching}
38415
65917566
116
2151720
1715.932995
Counter: #removed clauses / #clauses {Cache - component caching}
38415
2686.719895
0.002065
1.000000
0.069939
Counter: #identical mappings / #mappings {Cache - component caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
38415
5181303
30
48339
134.877079
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
38415
38415
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
