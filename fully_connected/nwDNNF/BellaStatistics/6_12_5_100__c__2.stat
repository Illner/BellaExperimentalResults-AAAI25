Number: formula size {Formula representation}
1
7500210
Number: #variables {Formula representation}
1
937620
Number: #clauses {Formula representation}
1
937596
Timer (reduced): initialize [ns] {Formula representation}
1
803596886
Timer: compute connected components [ns] {Formula representation}
49
2097237959
13090
646658618
42800774.673469
Number: circuit size {Circuit}
1
3007800
Number: #nodes {Circuit}
1
2914299
Number: #edges {Circuit}
1
3007800
Number: #variables {Circuit}
1
937620
Timer: copy subcircuit [ns] {Circuit}
20
1402341889
253708
319553706
70117094.450000
Counter: formula size (copy subcircuit) {Circuit}
20
6329700
935
1312675
316485.000000
Counter: #variables (copy subcircuit) {Circuit}
20
939000
370
187610
46950.000000
Counter: #clauses (copy subcircuit) {Circuit}
20
938160
316
187580
46908.000000
Timer (reduced): initialize [ns] {Compiler}
1
953623449
Timer (reduced): compile [ns] {Compiler}
1
345377219049
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
0
Number: #decisions {Compiler}
1
24
Counter: ratio of recomputed hypergraph cuts {Compiler}
44
30
0
1
0.681818
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
17
14
0
1
0.823529
Counter: #connected components {Compiler}
49
44
0
1
0.897959
Counter: #monotone residual formulae / #residual formulae {Compiler}
49
5
0
1
0.102041
Counter: monotone residual formula size {Compiler}
5
600
120
120
120.000000
Counter: #pure clauses / #clauses {Compiler}
49
5.000000
0.000000
1.000000
0.102041
Counter: pure residual formula size / residual formula size {Compiler}
49
5.000000
0.000000
1.000000
0.102041
Timer: assign literal [ns] {Compiler}
78
317774197536
1270
123067946584
4074028173.538462
Timer: unassign literal [ns] {Compiler}
78
263261435
330
62409271
3375146.602564
Timer: get decision variable [ns] {Decision heuristic}
24
146631833
60
59965839
6109659.708333
Counter: #preselected variables {Decision heuristic}
24
3270010
1
937620
136250.416667
Counter: #restricted variables / #preselected variables {Decision heuristic}
14
0.008345
0.000032
0.002300
0.000596
Timer (reduced): initialize [ns] {SAT solver}
1
268025434
Timer (reduced): initial simplification [ns] {SAT solver}
1
2100
Timer (reduced): initially implied literals [ns] {SAT solver}
1
1540
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
49
1311840996
18880
267179850
26772265.224490
Timer: unit propagation [ns] {SAT solver}
49
348787
230
215588
7118.102041
Counter: #implied literals {SAT solver}
49
96
0
5
1.959184
Counter: #implied literals / #variables {SAT solver}
49
0.088740
0.000000
0.016393
0.001811
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
4
11188370
1390691
3774097
2797092.500000
Counter: #implicit implied literals / #variables {SAT solver}
4
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
4
0.005435
0.000000
0.005435
0.001359
Timer: compute cut [ns] {Partitioning hypergraph}
2
6084173
2484995
3599178
3042086.500000
Counter: cut size {Partitioning hypergraph}
2
17
7
10
8.500000
Counter: cut size / #variables {Partitioning hypergraph}
2
0.006611
0.002181
0.004430
0.003305
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
3
6675898
30150
5719384
2225299.333333
Counter: #vertices {Partitioning hypergraph}
3
105
0
78
35.000000
Counter: #vertices / #clauses {Partitioning hypergraph}
3
0.034808
0.000000
0.017624
0.011603
Counter: #hyperedges {Partitioning hypergraph}
3
23
0
13
7.666667
Counter: #hyperedges / #variables {Partitioning hypergraph}
3
0.009164
0.000000
0.006329
0.003055
Counter: hypergraph size {Partitioning hypergraph}
3
298
0
238
99.333333
Counter: hypergraph size / formula size {Partitioning hypergraph}
3
0.020423
0.000000
0.010538
0.006808
Timer: create equivalence structure [ns] {Partitioning hypergraph}
3
660506
15230
520677
220168.666667
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
44
20
0
1
0.454545
Number: #current entries {Cache - component caching}
1
24
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
44
20813727830
136809
5940208191
473039268.863636
Timer: search cache record structure [ns] {Cache - component caching}
44
19293884
250
3616309
438497.363636
Timer: add cache record structure [ns] {Cache - component caching}
24
11719202
470
2945003
488300.083333
Counter: #empty cache records / #cache records {Cache - component caching}
44
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
44
31761612
368
7500210
721854.818182
Counter: formula size (positive hit) {Cache - component caching}
20
6329700
935
1312675
316485.000000
Counter: formula size (negative hit) {Cache - component caching}
24
25431912
368
7500210
1059663.000000
Counter: #variables (cache record structure) {Cache - component caching}
44
4222248
184
937620
95960.181818
Counter: #variables (positive hit) {Cache - component caching}
20
939000
370
187610
46950.000000
Counter: #variables (negative hit) {Cache - component caching}
24
3283248
184
937620
136802.000000
Counter: #clauses (cache record structure) {Cache - component caching}
44
4220388
124
937596
95917.909091
Counter: #clauses (positive hit) {Cache - component caching}
20
938160
316
187580
46908.000000
Counter: #clauses (negative hit) {Cache - component caching}
24
3282228
124
937596
136759.500000
Counter: #removed clauses / #clauses {Cache - component caching}
44
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
20
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
24
20170
60
4010
840.416667
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
24
24
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
