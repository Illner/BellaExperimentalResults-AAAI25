Number: formula size {Formula representation}
1
16515240
Number: #variables {Formula representation}
1
1835176
Number: #clauses {Formula representation}
1
1835085
Timer (reduced): initialize [ns] {Formula representation}
1
1575658295
Timer: compute connected components [ns] {Formula representation}
32767
11942911630
21749
941916623
364479.861751
Number: circuit size {Circuit}
1
5648165
Number: #nodes {Circuit}
1
5593297
Number: #edges {Circuit}
1
5648165
Number: #variables {Circuit}
1
1835176
Timer: copy subcircuit [ns] {Circuit}
0
0
0
0
0.000000
Counter: formula size (copy subcircuit) {Circuit}
0
0
0
0
0.000000
Counter: #variables (copy subcircuit) {Circuit}
0
0
0
0
0.000000
Counter: #clauses (copy subcircuit) {Circuit}
0
0
0
0
0.000000
Timer (reduced): initialize [ns] {Compiler}
1
1420282527
Timer (reduced): compile [ns] {Compiler}
1
2263833632420
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
0
Number: #decisions {Compiler}
1
16383
Counter: ratio of recomputed hypergraph cuts {Compiler}
16383
11816
0
1
0.721235
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
11816
767
0
1
0.064912
Counter: #connected components {Compiler}
32767
16383
0
1
0.499985
Counter: #monotone residual formulae / #residual formulae {Compiler}
32767
16384
0
1
0.500015
Counter: monotone residual formula size {Compiler}
16384
3670016
224
224
224.000000
Counter: #pure clauses / #clauses {Compiler}
32767
16384.000000
0.000000
1.000000
0.500015
Counter: pure residual formula size / residual formula size {Compiler}
32767
16384.000000
0.000000
1.000000
0.500015
Timer: assign literal [ns] {Compiler}
55104
2199756742625
1810
703654494717
39920091.874002
Timer: unassign literal [ns] {Compiler}
55104
2506231208
710
92093369
45481.838124
Timer: get decision variable [ns] {Decision heuristic}
16383
412366149
49
75258018
25170.368614
Counter: #preselected variables {Decision heuristic}
16383
19877827
1
1835176
1213.320332
Counter: #restricted variables / #preselected variables {Decision heuristic}
767
1.085691
0.000015
0.001996
0.001416
Timer (reduced): initialize [ns] {SAT solver}
1
481244516
Timer (reduced): initial simplification [ns] {SAT solver}
1
1080
Timer (reduced): initially implied literals [ns] {SAT solver}
1
770
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
32767
13962820599
15340
425675817
426124.472762
Timer: unit propagation [ns] {SAT solver}
32767
12972811
160
50300
395.910855
Counter: #implied literals {SAT solver}
32767
60318
0
4
1.840815
Counter: #implied literals / #variables {SAT solver}
32767
130.391976
0.000000
0.008850
0.003979
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
11049
12344777861
152699
7388206
1117275.577971
Counter: #implicit implied literals / #variables {SAT solver}
11049
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
11049
12.936538
0.000000
0.002941
0.001171
Timer: compute cut [ns] {Partitioning hypergraph}
1024
68607577
51090
152539
66999.586914
Counter: cut size {Partitioning hypergraph}
1024
6400
6
7
6.250000
Counter: cut size / #variables {Partitioning hypergraph}
1024
2.882239
0.001884
0.003125
0.002815
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
11049
2017642645
43229
3143259
182608.620237
Counter: #vertices {Partitioning hypergraph}
11049
18432
0
18
1.668205
Counter: #vertices / #clauses {Partitioning hypergraph}
11049
8.897182
0.000000
0.009923
0.000805
Counter: #hyperedges {Partitioning hypergraph}
11049
8448
0
9
0.764594
Counter: #hyperedges / #variables {Partitioning hypergraph}
11049
3.820022
0.000000
0.004167
0.000346
Counter: hypergraph size {Partitioning hypergraph}
11049
45056
0
56
4.077835
Counter: hypergraph size / formula size {Partitioning hypergraph}
11049
5.054714
0.000000
0.005543
0.000457
Timer: create equivalence structure [ns] {Partitioning hypergraph}
11049
517500906
18510
435495
46836.899810
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
16383
0
0
0
0.000000
Number: #current entries {Cache - component caching}
1
16383
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
16383
13578669141
61439
357696175
828826.780260
Timer: search cache record structure [ns] {Cache - component caching}
16383
49730853
310
1040409
3035.515656
Timer: add cache record structure [ns] {Cache - component caching}
16383
65318416
380
1702873
3986.963071
Counter: #empty cache records / #cache records {Cache - component caching}
16383
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
16383
174066778
680
16515240
10624.841482
Counter: formula size (positive hit) {Cache - component caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - component caching}
16383
174066778
680
16515240
10624.841482
Counter: #variables (cache record structure) {Cache - component caching}
16383
30877708
340
1835176
1884.740768
Counter: #variables (positive hit) {Cache - component caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - component caching}
16383
30877708
340
1835176
1884.740768
Counter: #clauses (cache record structure) {Cache - component caching}
16383
29079289
228
1835085
1774.967283
Counter: #clauses (positive hit) {Cache - component caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - component caching}
16383
29079289
228
1835085
1774.967283
Counter: #removed clauses / #clauses {Cache - component caching}
16383
264.846187
0.000144
1.000000
0.016166
Counter: #identical mappings / #mappings {Cache - component caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
16383
1265283
40
1570
77.231459
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
16383
16383
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
