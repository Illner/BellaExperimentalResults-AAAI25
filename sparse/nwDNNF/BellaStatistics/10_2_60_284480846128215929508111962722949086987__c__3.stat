Number: formula size {Formula representation}
1
10320
Number: #variables {Formula representation}
1
1340
Number: #clauses {Formula representation}
1
1320
Timer (reduced): initialize [ns] {Formula representation}
1
2431285
Timer: compute connected components [ns] {Formula representation}
21
2234445
760
895572
106402.142857
Number: circuit size {Circuit}
1
26994
Number: #nodes {Circuit}
1
13043
Number: #edges {Circuit}
1
26994
Number: #variables {Circuit}
1
1340
Timer: copy subcircuit [ns] {Circuit}
9
3520410
9260
1667624
391156.666667
Counter: formula size (copy subcircuit) {Circuit}
9
11600
32
5128
1288.888889
Counter: #variables (copy subcircuit) {Circuit}
9
2138
16
760
237.555556
Counter: #clauses (copy subcircuit) {Circuit}
9
1988
12
740
220.888889
Timer (reduced): initialize [ns] {Compiler}
1
5336092
Timer (reduced): compile [ns] {Compiler}
1
20307927
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
0
Number: #decisions {Compiler}
1
10
Counter: ratio of recomputed hypergraph cuts {Compiler}
19
5
0
1
0.263158
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
3
0
0
0
0.000000
Counter: #connected components {Compiler}
21
19
0
1
0.904762
Counter: #monotone residual formulae / #residual formulae {Compiler}
21
2
0
1
0.095238
Counter: monotone residual formula size {Compiler}
2
16
8
8
8.000000
Counter: #pure clauses / #clauses {Compiler}
21
3.085714
0.000000
1.000000
0.146939
Counter: pure residual formula size / residual formula size {Compiler}
21
2.818061
0.000000
1.000000
0.134193
Timer: assign literal [ns] {Compiler}
40
1004603
460
369881
25115.075000
Timer: unassign literal [ns] {Compiler}
40
153240
190
28650
3831.000000
Timer: get decision variable [ns] {Decision heuristic}
10
1560
40
650
156.000000
Counter: #preselected variables {Decision heuristic}
10
39
1
8
3.900000
Counter: #restricted variables / #preselected variables {Decision heuristic}
0
0.000000
0.000000
0.000000
0.000000
Timer (reduced): initialize [ns] {SAT solver}
1
738442
Timer (reduced): initial simplification [ns] {SAT solver}
1
650
Timer (reduced): initially implied literals [ns] {SAT solver}
1
250
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
21
460111
930
141300
21910.047619
Timer: unit propagation [ns] {SAT solver}
21
6700
140
1000
319.047619
Counter: #implied literals {SAT solver}
21
40
0
2
1.904762
Counter: #implied literals / #variables {SAT solver}
21
0.644428
0.000000
0.200000
0.030687
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
5
1396104
7511
1337693
279220.800000
Counter: #implicit implied literals / #variables {SAT solver}
5
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
5
0.219419
0.007463
0.062500
0.043884
Timer: compute cut [ns] {Partitioning hypergraph}
1
1389113
1389113
1389113
1389113.000000
Counter: cut size {Partitioning hypergraph}
1
8
8
8
8.000000
Counter: cut size / #variables {Partitioning hypergraph}
1
0.005970
0.005970
0.005970
0.005970
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
3
2544366
3250
2529686
848122.000000
Counter: #vertices {Partitioning hypergraph}
3
10
0
10
3.333333
Counter: #vertices / #clauses {Partitioning hypergraph}
3
0.007576
0.000000
0.007576
0.002525
Counter: #hyperedges {Partitioning hypergraph}
3
10
0
10
3.333333
Counter: #hyperedges / #variables {Partitioning hypergraph}
3
0.007463
0.000000
0.007463
0.002488
Counter: hypergraph size {Partitioning hypergraph}
3
60
0
60
20.000000
Counter: hypergraph size / formula size {Partitioning hypergraph}
3
0.005814
0.000000
0.005814
0.001938
Timer: create equivalence structure [ns] {Partitioning hypergraph}
3
107560
1520
101750
35853.333333
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
19
9
0
1
0.473684
Number: #current entries {Cache - component caching}
1
10
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
19
6441733
9660
1990615
339038.578947
Timer: search cache record structure [ns] {Cache - component caching}
19
12650
120
4380
665.789474
Timer: add cache record structure [ns] {Cache - component caching}
10
7170
150
1900
717.000000
Counter: #empty cache records / #cache records {Cache - component caching}
19
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
19
33520
32
10320
1764.210526
Counter: formula size (positive hit) {Cache - component caching}
9
11600
32
5128
1288.888889
Counter: formula size (negative hit) {Cache - component caching}
10
21920
32
10320
2192.000000
Counter: #variables (cache record structure) {Cache - component caching}
19
5616
16
1340
295.578947
Counter: #variables (positive hit) {Cache - component caching}
9
2138
16
760
237.555556
Counter: #variables (negative hit) {Cache - component caching}
10
3478
16
1340
347.800000
Counter: #clauses (cache record structure) {Cache - component caching}
19
5296
12
1320
278.736842
Counter: #clauses (positive hit) {Cache - component caching}
9
1988
12
740
220.888889
Counter: #clauses (negative hit) {Cache - component caching}
10
3308
12
1320
330.800000
Counter: #removed clauses / #clauses {Cache - component caching}
19
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
9
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
10
600
30
140
60.000000
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
10
10
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
