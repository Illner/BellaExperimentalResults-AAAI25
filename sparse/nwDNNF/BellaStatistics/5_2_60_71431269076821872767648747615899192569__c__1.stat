Number: formula size {Formula representation}
1
440
Number: #variables {Formula representation}
1
110
Number: #clauses {Formula representation}
1
100
Timer (reduced): initialize [ns] {Formula representation}
1
69310
Timer: compute connected components [ns] {Formula representation}
9
153341
490
52510
17037.888889
Number: circuit size {Circuit}
1
534
Number: #nodes {Circuit}
1
467
Number: #edges {Circuit}
1
534
Number: #variables {Circuit}
1
110
Timer: copy subcircuit [ns] {Circuit}
5
89070
4680
53150
17814.000000
Counter: formula size (copy subcircuit) {Circuit}
5
336
20
192
67.200000
Counter: #variables (copy subcircuit) {Circuit}
5
132
10
66
26.400000
Counter: #clauses (copy subcircuit) {Circuit}
5
108
8
56
21.600000
Timer (reduced): initialize [ns] {Compiler}
1
1991524
Timer (reduced): compile [ns] {Compiler}
1
1546523
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
4
Number: #decisions {Compiler}
1
4
Counter: ratio of recomputed hypergraph cuts {Compiler}
9
7
0
1
0.777778
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
3
0
0
0
0.000000
Counter: #connected components {Compiler}
9
9
0
2
1.000000
Counter: #monotone residual formulae / #residual formulae {Compiler}
9
2
0
1
0.222222
Counter: monotone residual formula size {Compiler}
2
8
4
4
4.000000
Counter: #pure clauses / #clauses {Compiler}
9
2.857143
0.000000
1.000000
0.317460
Counter: pure residual formula size / residual formula size {Compiler}
9
2.750000
0.000000
1.000000
0.305556
Timer: assign literal [ns] {Compiler}
16
34180
460
8130
2136.250000
Timer: unassign literal [ns] {Compiler}
16
12110
250
2060
756.875000
Timer: get decision variable [ns] {Decision heuristic}
4
750
50
500
187.500000
Counter: #preselected variables {Decision heuristic}
4
6
1
2
1.500000
Counter: #restricted variables / #preselected variables {Decision heuristic}
0
0.000000
0.000000
0.000000
0.000000
Timer (reduced): initialize [ns] {SAT solver}
1
52160
Timer (reduced): initial simplification [ns] {SAT solver}
1
330
Timer (reduced): initially implied literals [ns] {SAT solver}
1
170
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
9
39270
800
10850
4363.333333
Timer: unit propagation [ns] {SAT solver}
9
4480
150
2480
497.777778
Counter: #implied literals {SAT solver}
9
16
0
2
1.777778
Counter: #implied literals / #variables {SAT solver}
9
0.816228
0.000000
0.333333
0.090692
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
7
118590
4750
60370
16941.428571
Counter: #implicit implied literals / #variables {SAT solver}
7
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
7
0.556566
0.045455
0.100000
0.079509
Timer: compute cut [ns] {Partitioning hypergraph}
1
508701
508701
508701
508701.000000
Counter: cut size {Partitioning hypergraph}
1
2
2
2
2.000000
Counter: cut size / #variables {Partitioning hypergraph}
1
0.018182
0.018182
0.018182
0.018182
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
3
117100
2610
100950
39033.333333
Counter: #vertices {Partitioning hypergraph}
3
3
0
3
1.000000
Counter: #vertices / #clauses {Partitioning hypergraph}
3
0.030000
0.000000
0.030000
0.010000
Counter: #hyperedges {Partitioning hypergraph}
3
3
0
3
1.000000
Counter: #hyperedges / #variables {Partitioning hypergraph}
3
0.027273
0.000000
0.027273
0.009091
Counter: hypergraph size {Partitioning hypergraph}
3
7
0
7
2.333333
Counter: hypergraph size / formula size {Partitioning hypergraph}
3
0.015909
0.000000
0.015909
0.005303
Timer: create equivalence structure [ns] {Partitioning hypergraph}
3
18710
1330
13390
6236.666667
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
9
5
0
1
0.555556
Number: #current entries {Cache - component caching}
1
4
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
9
337111
6200
134001
37456.777778
Timer: search cache record structure [ns] {Cache - component caching}
9
2130
160
360
236.666667
Timer: add cache record structure [ns] {Cache - component caching}
4
3700
160
3180
925.000000
Counter: #empty cache records / #cache records {Cache - component caching}
9
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
9
1072
20
440
119.111111
Counter: formula size (positive hit) {Cache - component caching}
5
336
20
192
67.200000
Counter: formula size (negative hit) {Cache - component caching}
4
736
20
440
184.000000
Counter: #variables (cache record structure) {Cache - component caching}
9
354
10
110
39.333333
Counter: #variables (positive hit) {Cache - component caching}
5
132
10
66
26.400000
Counter: #variables (negative hit) {Cache - component caching}
4
222
10
110
55.500000
Counter: #clauses (cache record structure) {Cache - component caching}
9
300
8
100
33.333333
Counter: #clauses (positive hit) {Cache - component caching}
5
108
8
56
21.600000
Counter: #clauses (negative hit) {Cache - component caching}
4
192
8
100
48.000000
Counter: #removed clauses / #clauses {Cache - component caching}
9
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
5
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
4
300
40
110
75.000000
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
4
4
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
