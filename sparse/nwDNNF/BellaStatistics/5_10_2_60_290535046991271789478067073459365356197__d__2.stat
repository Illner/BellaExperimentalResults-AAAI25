Number: formula size {Formula representation}
1
880
Number: #variables {Formula representation}
1
200
Number: #clauses {Formula representation}
1
200
Timer (reduced): initialize [ns] {Formula representation}
1
169239
Timer: compute connected components [ns] {Formula representation}
11
100430
1900
19980
9130.000000
Number: circuit size {Circuit}
1
2866
Number: #nodes {Circuit}
1
1739
Number: #edges {Circuit}
1
2866
Number: #variables {Circuit}
1
200
Timer: copy subcircuit [ns] {Circuit}
23
446159
1040
248939
19398.217391
Counter: formula size (copy subcircuit) {Circuit}
23
1312
8
536
57.043478
Counter: #variables (copy subcircuit) {Circuit}
23
418
4
140
18.173913
Counter: #clauses (copy subcircuit) {Circuit}
23
418
4
140
18.173913
Timer (reduced): initialize [ns] {Compiler}
1
4215716
Timer (reduced): compile [ns] {Compiler}
1
11090072
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
2
Number: #splits {Compiler}
1
24
Number: #decisions {Compiler}
1
6
Counter: ratio of recomputed hypergraph cuts {Compiler}
29
23
0
1
0.793103
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
3
1
0
1
0.333333
Counter: #connected components {Compiler}
11
29
1
5
2.636364
Counter: #monotone residual formulae / #residual formulae {Compiler}
11
0
0
0
0.000000
Counter: monotone residual formula size {Compiler}
0
0
0
0
0.000000
Counter: #pure clauses / #clauses {Compiler}
11
0.000000
0.000000
0.000000
0.000000
Counter: pure residual formula size / residual formula size {Compiler}
11
0.000000
0.000000
0.000000
0.000000
Timer: assign literal [ns] {Compiler}
24
51850
250
11590
2160.416667
Timer: unassign literal [ns] {Compiler}
24
21470
170
3490
894.583333
Timer: get decision variable [ns] {Decision heuristic}
6
1510
50
990
251.666667
Counter: #preselected variables {Decision heuristic}
6
15
1
4
2.500000
Counter: #restricted variables / #preselected variables {Decision heuristic}
0
0.000000
0.000000
0.000000
0.000000
Timer (reduced): initialize [ns] {SAT solver}
1
139960
Timer (reduced): initial simplification [ns] {SAT solver}
1
250
Timer (reduced): initially implied literals [ns] {SAT solver}
1
160
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
13
154560
360
60350
11889.230769
Timer: unit propagation [ns] {SAT solver}
13
7180
120
4800
552.307692
Counter: #implied literals {SAT solver}
13
24
0
2
1.846154
Counter: #implied literals / #variables {SAT solver}
13
1.995430
0.000000
1.000000
0.153495
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
3
145620
17120
110170
48540.000000
Counter: #implicit implied literals / #variables {SAT solver}
3
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
3
0.427941
0.075000
0.176471
0.142647
Timer: compute cut [ns] {Partitioning hypergraph}
2
8699461
1503165
7196296
4349730.500000
Counter: cut size {Partitioning hypergraph}
2
5
1
4
2.500000
Counter: cut size / #variables {Partitioning hypergraph}
2
0.049412
0.020000
0.029412
0.024706
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
2
330278
32819
297459
165139.000000
Counter: #vertices {Partitioning hypergraph}
2
192
22
170
96.000000
Counter: #vertices / #clauses {Partitioning hypergraph}
2
1.497059
0.647059
0.850000
0.748529
Counter: #hyperedges {Partitioning hypergraph}
2
21
6
15
10.500000
Counter: #hyperedges / #variables {Partitioning hypergraph}
2
0.251471
0.075000
0.176471
0.125735
Counter: hypergraph size {Partitioning hypergraph}
2
692
42
650
346.000000
Counter: hypergraph size / formula size {Partitioning hypergraph}
2
1.215909
0.477273
0.738636
0.607955
Timer: create equivalence structure [ns] {Partitioning hypergraph}
2
58090
7560
50530
29045.000000
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
29
23
0
1
0.793103
Number: #current entries {Cache - component caching}
1
6
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
29
940497
1730
241209
32430.931034
Timer: search cache record structure [ns] {Cache - component caching}
29
4230
50
690
145.862069
Timer: add cache record structure [ns] {Cache - component caching}
6
6250
140
5020
1041.666667
Counter: #empty cache records / #cache records {Cache - component caching}
29
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
29
3360
8
880
115.862069
Counter: formula size (positive hit) {Cache - component caching}
23
1312
8
536
57.043478
Counter: formula size (negative hit) {Cache - component caching}
6
2048
8
880
341.333333
Counter: #variables (cache record structure) {Cache - component caching}
29
964
4
200
33.241379
Counter: #variables (positive hit) {Cache - component caching}
23
418
4
140
18.173913
Counter: #variables (negative hit) {Cache - component caching}
6
546
4
200
91.000000
Counter: #clauses (cache record structure) {Cache - component caching}
29
964
4
200
33.241379
Counter: #clauses (positive hit) {Cache - component caching}
23
418
4
140
18.173913
Counter: #clauses (negative hit) {Cache - component caching}
6
546
4
200
91.000000
Counter: #removed clauses / #clauses {Cache - component caching}
29
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
23
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
6
510
30
200
85.000000
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
6
6
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
