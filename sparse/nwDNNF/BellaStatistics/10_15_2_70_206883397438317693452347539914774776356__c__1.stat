Number: formula size {Formula representation}
1
34640
Number: #variables {Formula representation}
1
3910
Number: #clauses {Formula representation}
1
3880
Timer (reduced): initialize [ns] {Formula representation}
1
4281395
Timer: compute connected components [ns] {Formula representation}
21
5890554
3620
1454881
280502.571429
Number: circuit size {Circuit}
1
46450
Number: #nodes {Circuit}
1
20487
Number: #edges {Circuit}
1
46450
Number: #variables {Circuit}
1
3910
Timer: copy subcircuit [ns] {Circuit}
9
5919127
17580
2677445
657680.777778
Counter: formula size (copy subcircuit) {Circuit}
9
40672
116
17992
4519.111111
Counter: #variables (copy subcircuit) {Circuit}
9
5986
58
2242
665.111111
Counter: #clauses (copy subcircuit) {Circuit}
9
5732
40
2212
636.888889
Timer (reduced): initialize [ns] {Compiler}
1
8741569
Timer (reduced): compile [ns] {Compiler}
1
56078875
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
0
Number: #decisions {Compiler}
1
10
Counter: ratio of recomputed hypergraph cuts {Compiler}
19
3
0
1
0.157895
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
2
0
0
0
0.000000
Counter: #connected components {Compiler}
21
19
0
1
0.904762
Counter: #monotone residual formulae / #residual formulae {Compiler}
21
2
0
1
0.095238
Counter: monotone residual formula size {Compiler}
2
72
36
36
36.000000
Counter: #pure clauses / #clauses {Compiler}
21
2.429851
0.000000
1.000000
0.115707
Counter: pure residual formula size / residual formula size {Compiler}
21
2.309155
0.000000
1.000000
0.109960
Timer: assign literal [ns] {Compiler}
40
8549409
720
3192112
213735.225000
Timer: unassign literal [ns] {Compiler}
40
452757
290
87509
11318.925000
Timer: get decision variable [ns] {Decision heuristic}
10
2230
70
890
223.000000
Counter: #preselected variables {Decision heuristic}
10
46
1
9
4.600000
Counter: #restricted variables / #preselected variables {Decision heuristic}
0
0.000000
0.000000
0.000000
0.000000
Timer (reduced): initialize [ns] {SAT solver}
1
1339842
Timer (reduced): initial simplification [ns] {SAT solver}
1
500
Timer (reduced): initially implied literals [ns] {SAT solver}
1
240
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
21
1088033
4310
215769
51811.095238
Timer: unit propagation [ns] {SAT solver}
21
10060
160
3130
479.047619
Counter: #implied literals {SAT solver}
21
40
0
2
1.904762
Counter: #implied literals / #variables {SAT solver}
21
0.218814
0.000000
0.052632
0.010420
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
3
2254898
29670
2191838
751632.666667
Counter: #implicit implied literals / #variables {SAT solver}
3
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
3
0.037040
0.002558
0.017241
0.012347
Timer: compute cut [ns] {Partitioning hypergraph}
1
1425882
1425882
1425882
1425882.000000
Counter: cut size {Partitioning hypergraph}
1
9
9
9
9.000000
Counter: cut size / #variables {Partitioning hypergraph}
1
0.002302
0.002302
0.002302
0.002302
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
2
8426201
10420
8415781
4213100.500000
Counter: #vertices {Partitioning hypergraph}
2
13
0
13
6.500000
Counter: #vertices / #clauses {Partitioning hypergraph}
2
0.003351
0.000000
0.003351
0.001675
Counter: #hyperedges {Partitioning hypergraph}
2
10
0
10
5.000000
Counter: #hyperedges / #variables {Partitioning hypergraph}
2
0.002558
0.000000
0.002558
0.001279
Counter: hypergraph size {Partitioning hypergraph}
2
91
0
91
45.500000
Counter: hypergraph size / formula size {Partitioning hypergraph}
2
0.002627
0.000000
0.002627
0.001314
Timer: create equivalence structure [ns] {Partitioning hypergraph}
2
316928
5820
311108
158464.000000
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
19
9
0
1
0.473684
Number: #current entries {Cache - component caching}
1
10
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
19
19451979
37490
5169870
1023788.368421
Timer: search cache record structure [ns] {Cache - component caching}
19
37620
130
14460
1980.000000
Timer: add cache record structure [ns] {Cache - component caching}
10
14760
290
4890
1476.000000
Counter: #empty cache records / #cache records {Cache - component caching}
19
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
19
115984
116
34640
6104.421053
Counter: formula size (positive hit) {Cache - component caching}
9
40672
116
17992
4519.111111
Counter: formula size (negative hit) {Cache - component caching}
10
75312
116
34640
7531.200000
Counter: #variables (cache record structure) {Cache - component caching}
19
15882
58
3910
835.894737
Counter: #variables (positive hit) {Cache - component caching}
9
5986
58
2242
665.111111
Counter: #variables (negative hit) {Cache - component caching}
10
9896
58
3910
989.600000
Counter: #clauses (cache record structure) {Cache - component caching}
19
15344
40
3880
807.578947
Counter: #clauses (positive hit) {Cache - component caching}
9
5732
40
2212
636.888889
Counter: #clauses (negative hit) {Cache - component caching}
10
9612
40
3880
961.200000
Counter: #removed clauses / #clauses {Cache - component caching}
19
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
9
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
10
650
30
140
65.000000
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
10
10
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
