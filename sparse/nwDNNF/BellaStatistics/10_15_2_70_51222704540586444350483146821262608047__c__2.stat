Number: formula size {Formula representation}
1
34640
Number: #variables {Formula representation}
1
3910
Number: #clauses {Formula representation}
1
3880
Timer (reduced): initialize [ns] {Formula representation}
1
3905659
Timer: compute connected components [ns] {Formula representation}
21
5082334
2290
1420415
242015.904762
Number: circuit size {Circuit}
1
42226
Number: #nodes {Circuit}
1
20615
Number: #edges {Circuit}
1
42226
Number: #variables {Circuit}
1
3910
Timer: copy subcircuit [ns] {Circuit}
9
5694470
13650
2694642
632718.888889
Counter: formula size (copy subcircuit) {Circuit}
9
34916
80
16712
3879.555556
Counter: #variables (copy subcircuit) {Circuit}
9
5292
40
2114
588.000000
Counter: #clauses (copy subcircuit) {Circuit}
9
5048
28
2084
560.888889
Timer (reduced): initialize [ns] {Compiler}
1
8394480
Timer (reduced): compile [ns] {Compiler}
1
52408972
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
0
Number: #decisions {Compiler}
1
10
Counter: ratio of recomputed hypergraph cuts {Compiler}
19
3
0
1
0.157895
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
2
0
0
0
0.000000
Counter: #connected components {Compiler}
21
19
0
1
0.904762
Counter: #monotone residual formulae / #residual formulae {Compiler}
21
2
0
1
0.095238
Counter: monotone residual formula size {Compiler}
2
48
24
24
24.000000
Counter: #pure clauses / #clauses {Compiler}
21
2.748538
0.000000
1.000000
0.130883
Counter: pure residual formula size / residual formula size {Compiler}
21
2.542857
0.000000
1.000000
0.121088
Timer: assign literal [ns] {Compiler}
40
8205172
600
3444194
205129.300000
Timer: unassign literal [ns] {Compiler}
40
437476
230
87590
10936.900000
Timer: get decision variable [ns] {Decision heuristic}
10
2270
60
1060
227.000000
Counter: #preselected variables {Decision heuristic}
10
46
1
9
4.600000
Counter: #restricted variables / #preselected variables {Decision heuristic}
0
0.000000
0.000000
0.000000
0.000000
Timer (reduced): initialize [ns] {SAT solver}
1
1305167
Timer (reduced): initial simplification [ns] {SAT solver}
1
540
Timer (reduced): initially implied literals [ns] {SAT solver}
1
250
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
21
1045471
1910
202428
49784.333333
Timer: unit propagation [ns] {SAT solver}
21
7550
150
790
359.523810
Counter: #implied literals {SAT solver}
21
40
0
2
1.904762
Counter: #implied literals / #variables {SAT solver}
21
0.285844
0.000000
0.076923
0.013612
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
3
2082237
16800
2046888
694079.000000
Counter: #implicit implied literals / #variables {SAT solver}
3
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
3
0.052558
0.002558
0.025000
0.017519
Timer: compute cut [ns] {Partitioning hypergraph}
1
1535134
1535134
1535134
1535134.000000
Counter: cut size {Partitioning hypergraph}
1
9
9
9
9.000000
Counter: cut size / #variables {Partitioning hypergraph}
1
0.002302
0.002302
0.002302
0.002302
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
2
9173253
8090
9165163
4586626.500000
Counter: #vertices {Partitioning hypergraph}
2
12
0
12
6.000000
Counter: #vertices / #clauses {Partitioning hypergraph}
2
0.003093
0.000000
0.003093
0.001546
Counter: #hyperedges {Partitioning hypergraph}
2
10
0
10
5.000000
Counter: #hyperedges / #variables {Partitioning hypergraph}
2
0.002558
0.000000
0.002558
0.001279
Counter: hypergraph size {Partitioning hypergraph}
2
84
0
84
42.000000
Counter: hypergraph size / formula size {Partitioning hypergraph}
2
0.002425
0.000000
0.002425
0.001212
Timer: create equivalence structure [ns] {Partitioning hypergraph}
2
268627
2990
265637
134313.500000
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
19
9
0
1
0.473684
Number: #current entries {Cache - component caching}
1
10
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
19
16872602
22070
4876798
888031.684211
Timer: search cache record structure [ns] {Cache - component caching}
19
30660
120
10270
1613.684211
Timer: add cache record structure [ns] {Cache - component caching}
10
17950
220
7100
1795.000000
Counter: #empty cache records / #cache records {Cache - component caching}
19
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
19
104472
80
34640
5498.526316
Counter: formula size (positive hit) {Cache - component caching}
9
34916
80
16712
3879.555556
Counter: formula size (negative hit) {Cache - component caching}
10
69556
80
34640
6955.600000
Counter: #variables (cache record structure) {Cache - component caching}
19
14494
40
3910
762.842105
Counter: #variables (positive hit) {Cache - component caching}
9
5292
40
2114
588.000000
Counter: #variables (negative hit) {Cache - component caching}
10
9202
40
3910
920.200000
Counter: #clauses (cache record structure) {Cache - component caching}
19
13976
28
3880
735.578947
Counter: #clauses (positive hit) {Cache - component caching}
9
5048
28
2084
560.888889
Counter: #clauses (negative hit) {Cache - component caching}
10
8928
28
3880
892.800000
Counter: #removed clauses / #clauses {Cache - component caching}
19
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
9
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
10
670
30
180
67.000000
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
10
10
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
