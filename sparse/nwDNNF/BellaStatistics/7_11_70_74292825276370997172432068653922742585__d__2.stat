Number: formula size {Formula representation}
1
6765990
Number: #variables {Formula representation}
1
1127588
Number: #clauses {Formula representation}
1
1128218
Timer (reduced): initialize [ns] {Formula representation}
1
660204526
Timer: compute connected components [ns] {Formula representation}
150
1163412239
600
175552054
7756081.593333
Number: circuit size {Circuit}
1
564511558
Number: #nodes {Circuit}
1
184509269
Number: #edges {Circuit}
1
564511558
Number: #variables {Circuit}
1
1127588
Timer: copy subcircuit [ns] {Circuit}
136
169442004054
15490
33068460188
1245897088.632353
Counter: formula size (copy subcircuit) {Circuit}
136
16161288
143
1407241
118833.000000
Counter: #variables (copy subcircuit) {Circuit}
136
2936032
22
249106
21588.470588
Counter: #clauses (copy subcircuit) {Circuit}
136
2961052
67
249691
21772.441176
Timer (reduced): initialize [ns] {Compiler}
1
698433442
Timer (reduced): compile [ns] {Compiler}
1
383672015866
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
11
Number: #splits {Compiler}
1
110
Number: #decisions {Compiler}
1
80
Counter: ratio of recomputed hypergraph cuts {Compiler}
216
142
0
1
0.657407
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
37
33
0
1
0.891892
Counter: #connected components {Compiler}
150
216
1
3
1.440000
Counter: #monotone residual formulae / #residual formulae {Compiler}
150
0
0
0
0.000000
Counter: monotone residual formula size {Compiler}
0
0
0
0
0.000000
Counter: #pure clauses / #clauses {Compiler}
150
0.000000
0.000000
0.000000
0.000000
Counter: pure residual formula size / residual formula size {Compiler}
150
0.000000
0.000000
0.000000
0.000000
Timer: assign literal [ns] {Compiler}
248
172360903978
250
28453362633
695003645.072581
Timer: unassign literal [ns] {Compiler}
248
2462136914
230
564710368
9927971.427419
Timer: get decision variable [ns] {Decision heuristic}
80
533054897
40
212513983
6663186.212500
Counter: #preselected variables {Decision heuristic}
80
9097274
1
1127588
113715.925000
Counter: #restricted variables / #preselected variables {Decision heuristic}
0
0.000000
0.000000
0.000000
0.000000
Timer (reduced): initialize [ns] {SAT solver}
1
234896764
Timer (reduced): initial simplification [ns] {SAT solver}
1
1110
Timer (reduced): initially implied literals [ns] {SAT solver}
1
790
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
161
3036240373
390
561224123
18858635.857143
Timer: unit propagation [ns] {SAT solver}
161
285818
100
30750
1775.267081
Counter: #implied literals {SAT solver}
161
536
0
11
3.329193
Counter: #implied literals / #variables {SAT solver}
161
7.348958
0.000000
1.000000
0.045646
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
79
25869963
10740
4005552
327467.886076
Counter: #implicit implied literals / #variables {SAT solver}
79
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
79
0.000000
0.000000
0.000000
0.000000
Timer: compute cut [ns] {Partitioning hypergraph}
4
310379482
393566
234778823
77594870.500000
Counter: cut size {Partitioning hypergraph}
4
53
8
25
13.250000
Counter: cut size / #variables {Partitioning hypergraph}
4
0.545553
0.001693
0.500000
0.136388
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
4
9575079
21090
6930474
2393769.750000
Counter: #vertices {Partitioning hypergraph}
4
6604
9
4617
1651.000000
Counter: #vertices / #clauses {Partitioning hypergraph}
4
2.617423
0.243243
0.888739
0.654356
Counter: #hyperedges {Partitioning hypergraph}
4
225
8
118
56.250000
Counter: #hyperedges / #variables {Partitioning hypergraph}
4
0.663575
0.024979
0.500000
0.165894
Counter: hypergraph size {Partitioning hypergraph}
4
18875
16
13524
4718.750000
Counter: hypergraph size / formula size {Partitioning hypergraph}
4
2.070692
0.200000
0.701234
0.517673
Timer: create equivalence structure [ns] {Partitioning hypergraph}
4
1115740
3110
791512
278935.000000
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
216
136
0
1
0.629630
Number: #current entries {Cache - component caching}
1
80
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
216
33336604824
2110
5439650114
154336133.444444
Timer: search cache record structure [ns] {Cache - component caching}
216
56445763
30
17978549
261322.976852
Timer: add cache record structure [ns] {Cache - component caching}
80
435675117
170
78070079
5445938.962500
Counter: #empty cache records / #cache records {Cache - component caching}
216
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
216
70036008
8
6765990
324240.777778
Counter: formula size (positive hit) {Cache - component caching}
136
16161288
143
1407241
118833.000000
Counter: formula size (negative hit) {Cache - component caching}
80
53874720
8
6765990
673434.000000
Counter: #variables (cache record structure) {Cache - component caching}
216
12073012
4
1127588
55893.574074
Counter: #variables (positive hit) {Cache - component caching}
136
2936032
22
249106
21588.470588
Counter: #variables (negative hit) {Cache - component caching}
80
9136980
4
1127588
114212.250000
Counter: #clauses (cache record structure) {Cache - component caching}
216
12124102
4
1128218
56130.101852
Counter: #clauses (positive hit) {Cache - component caching}
136
2961052
67
249691
21772.441176
Counter: #clauses (negative hit) {Cache - component caching}
80
9163050
4
1128218
114538.125000
Counter: #removed clauses / #clauses {Cache - component caching}
216
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
136
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
80
45979
30
4570
574.737500
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
80
80
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
