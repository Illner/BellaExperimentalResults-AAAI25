Number: formula size {Formula representation}
1
33417345
Number: #variables {Formula representation}
1
5569720
Number: #clauses {Formula representation}
1
5569855
Timer (reduced): initialize [ns] {Formula representation}
1
3424608687
Timer: compute connected components [ns] {Formula representation}
121
26127361468
23159
2508790216
215928607.173554
Number: circuit size {Circuit}
1
67170696
Number: #nodes {Circuit}
1
19027033
Number: #edges {Circuit}
1
67170696
Number: #variables {Circuit}
1
5569720
Timer: copy subcircuit [ns] {Circuit}
48
17984628108
2596730
1575695712
374679752.250000
Counter: formula size (copy subcircuit) {Circuit}
48
57902520
5265
4227808
1206302.500000
Counter: #variables (copy subcircuit) {Circuit}
48
10806744
1846
771446
225140.500000
Counter: #clauses (copy subcircuit) {Circuit}
48
10806084
1782
771515
225126.750000
Timer (reduced): initialize [ns] {Compiler}
1
4505961312
Timer (reduced): compile [ns] {Compiler}
1
3361159749050
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
0
Number: #decisions {Compiler}
1
60
Counter: ratio of recomputed hypergraph cuts {Compiler}
108
104
0
1
0.962963
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
59
46
0
1
0.779661
Counter: #connected components {Compiler}
121
108
0
1
0.892562
Counter: #monotone residual formulae / #residual formulae {Compiler}
121
13
0
1
0.107438
Counter: monotone residual formula size {Compiler}
13
3380
260
260
260.000000
Counter: #pure clauses / #clauses {Compiler}
121
13.457499
0.000000
1.000000
0.111219
Counter: pure residual formula size / residual formula size {Compiler}
121
13.313253
0.000000
1.000000
0.110027
Timer: assign literal [ns] {Compiler}
185
2972211246353
1510
830314889683
16066006737.043243
Timer: unassign literal [ns] {Compiler}
185
3745882427
640
416329541
20248013.118919
Timer: get decision variable [ns] {Decision heuristic}
60
1649347613
140
244580772
27489126.883333
Counter: #preselected variables {Decision heuristic}
60
46991591
1
5569720
783193.183333
Counter: #restricted variables / #preselected variables {Decision heuristic}
46
0.031452
0.000012
0.003256
0.000684
Timer (reduced): initialize [ns] {SAT solver}
1
1285446689
Timer (reduced): initial simplification [ns] {SAT solver}
1
1070
Timer (reduced): initially implied literals [ns] {SAT solver}
1
710
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
121
21479666180
19660
1564055034
177517902.314050
Timer: unit propagation [ns] {SAT solver}
121
656541
260
59850
5425.958678
Counter: #implied literals {SAT solver}
121
460
0
13
3.801653
Counter: #implied literals / #variables {SAT solver}
121
0.097901
0.000000
0.007634
0.000809
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
22
15145044
162148
1970767
688411.090909
Counter: #implicit implied literals / #variables {SAT solver}
22
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
22
0.002538
0.000000
0.002538
0.000115
Timer: compute cut [ns] {Partitioning hypergraph}
1
3456701
3456701
3456701
3456701.000000
Counter: cut size {Partitioning hypergraph}
1
9
9
9
9.000000
Counter: cut size / #variables {Partitioning hypergraph}
1
0.002174
0.002174
0.002174
0.002174
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
13
3662359
49780
1632791
281719.923077
Counter: #vertices {Partitioning hypergraph}
13
41
0
41
3.153846
Counter: #vertices / #clauses {Partitioning hypergraph}
13
0.010219
0.000000
0.010219
0.000786
Counter: #hyperedges {Partitioning hypergraph}
13
16
0
16
1.230769
Counter: #hyperedges / #variables {Partitioning hypergraph}
13
0.003865
0.000000
0.003865
0.000297
Counter: hypergraph size {Partitioning hypergraph}
13
94
0
94
7.230769
Counter: hypergraph size / formula size {Partitioning hypergraph}
13
0.006270
0.000000
0.006270
0.000482
Timer: create equivalence structure [ns] {Partitioning hypergraph}
13
1250054
21749
389585
96158.000000
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
108
48
0
1
0.444444
Number: #current entries {Cache - component caching}
1
60
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
108
297255489699
298957
32112005068
2752365645.361111
Timer: search cache record structure [ns] {Cache - component caching}
108
181714594
160
9561037
1682542.537037
Timer: add cache record structure [ns] {Cache - component caching}
60
289430257
1130
38909452
4823837.616667
Counter: #empty cache records / #cache records {Cache - component caching}
108
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
108
335571130
788
33417345
3107140.092593
Counter: formula size (positive hit) {Cache - component caching}
48
57902520
5265
4227808
1206302.500000
Counter: formula size (negative hit) {Cache - component caching}
60
277668610
788
33417345
4627810.166667
Counter: #variables (cache record structure) {Cache - component caching}
108
57818868
394
5569720
535359.888889
Counter: #variables (positive hit) {Cache - component caching}
48
10806744
1846
771446
225140.500000
Counter: #variables (negative hit) {Cache - component caching}
60
47012124
394
5569720
783535.400000
Counter: #clauses (cache record structure) {Cache - component caching}
108
57816638
264
5569855
535339.240741
Counter: #clauses (positive hit) {Cache - component caching}
48
10806084
1782
771515
225126.750000
Counter: #clauses (negative hit) {Cache - component caching}
60
47010554
264
5569855
783509.233333
Counter: #removed clauses / #clauses {Cache - component caching}
108
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
48
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
60
52069
50
2900
867.816667
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
60
60
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
