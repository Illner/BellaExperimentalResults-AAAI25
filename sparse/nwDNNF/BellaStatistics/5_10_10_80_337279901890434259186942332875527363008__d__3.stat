Number: formula size {Formula representation}
1
6001600
Number: #variables {Formula representation}
1
1000200
Number: #clauses {Formula representation}
1
1000740
Timer (reduced): initialize [ns] {Formula representation}
1
577517803
Timer: compute connected components [ns] {Formula representation}
99
1663622502
590
170348478
16804267.696970
Number: circuit size {Circuit}
1
92364430
Number: #nodes {Circuit}
1
32862619
Number: #edges {Circuit}
1
92364430
Number: #variables {Circuit}
1
1000200
Timer: copy subcircuit [ns] {Circuit}
135
22346577234
15210
2474680051
165530201.733333
Counter: formula size (copy subcircuit) {Circuit}
135
16721280
120
1601480
123861.333333
Counter: #variables (copy subcircuit) {Circuit}
135
3006000
20
280180
22266.666667
Counter: #clauses (copy subcircuit) {Circuit}
135
3025116
56
280684
22408.266667
Timer (reduced): initialize [ns] {Compiler}
1
735416758
Timer (reduced): compile [ns] {Compiler}
1
280037829544
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
10
Number: #splits {Compiler}
1
110
Number: #decisions {Compiler}
1
54
Counter: ratio of recomputed hypergraph cuts {Compiler}
189
161
0
1
0.851852
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
33
30
0
1
0.909091
Counter: #connected components {Compiler}
99
189
1
8
1.909091
Counter: #monotone residual formulae / #residual formulae {Compiler}
99
0
0
0
0.000000
Counter: monotone residual formula size {Compiler}
0
0
0
0
0.000000
Counter: #pure clauses / #clauses {Compiler}
99
0.000000
0.000000
0.000000
0.000000
Counter: pure residual formula size / residual formula size {Compiler}
99
0.000000
0.000000
0.000000
0.000000
Timer: assign literal [ns] {Compiler}
168
200233051308
220
39089186770
1191863400.642857
Timer: unassign literal [ns] {Compiler}
168
676649449
220
80413480
4027675.291667
Timer: get decision variable [ns] {Decision heuristic}
54
424831159
50
61174122
7867243.685185
Counter: #preselected variables {Decision heuristic}
54
7982253
2
1000200
147819.500000
Counter: #restricted variables / #preselected variables {Decision heuristic}
0
0.000000
0.000000
0.000000
0.000000
Timer (reduced): initialize [ns] {SAT solver}
1
199541031
Timer (reduced): initial simplification [ns] {SAT solver}
1
1350
Timer (reduced): initially implied literals [ns] {SAT solver}
1
780
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
109
3332948503
360
224610845
30577509.201835
Timer: unit propagation [ns] {SAT solver}
109
268798
110
26040
2466.036697
Counter: #implied literals {SAT solver}
109
336
0
10
3.082569
Counter: #implied literals / #variables {SAT solver}
109
6.188525
0.000000
1.000000
0.056775
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
104
15606954
9470
6807785
150066.865385
Counter: #implicit implied literals / #variables {SAT solver}
104
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
104
0.000000
0.000000
0.000000
0.000000
Timer: compute cut [ns] {Partitioning hypergraph}
3
445498799
450349
415236567
148499599.666667
Counter: cut size {Partitioning hypergraph}
3
47
10
27
15.666667
Counter: cut size / #variables {Partitioning hypergraph}
3
0.516888
0.005777
0.500000
0.172296
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
3
7784412
28419
6593495
2594804.000000
Counter: #vertices {Partitioning hypergraph}
3
5399
11
4569
1799.666667
Counter: #vertices / #clauses {Partitioning hypergraph}
3
1.764071
0.196429
0.898525
0.588024
Counter: #hyperedges {Partitioning hypergraph}
3
217
10
117
72.333333
Counter: #hyperedges / #variables {Partitioning hypergraph}
3
0.625032
0.025032
0.500000
0.208344
Counter: hypergraph size {Partitioning hypergraph}
3
15134
20
13414
5044.666667
Counter: hypergraph size / formula size {Partitioning hypergraph}
3
1.384603
0.166667
0.705889
0.461534
Timer: create equivalence structure [ns] {Partitioning hypergraph}
3
1113658
4420
936008
371219.333333
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
189
135
0
1
0.714286
Number: #current entries {Cache - component caching}
1
54
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
189
50335060375
2440
7341258259
266323070.767196
Timer: search cache record structure [ns] {Cache - component caching}
189
34718610
40
3695091
183696.349206
Timer: add cache record structure [ns] {Cache - component caching}
54
17983231
200
2084005
333022.796296
Counter: #empty cache records / #cache records {Cache - component caching}
189
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
189
63887832
8
6001600
338030.857143
Counter: formula size (positive hit) {Cache - component caching}
135
16721280
120
1601480
123861.333333
Counter: formula size (negative hit) {Cache - component caching}
54
47166552
8
6001600
873454.666667
Counter: #variables (cache record structure) {Cache - component caching}
189
11011968
4
1000200
58264.380952
Counter: #variables (positive hit) {Cache - component caching}
135
3006000
20
280180
22266.666667
Counter: #variables (negative hit) {Cache - component caching}
54
8005968
4
1000200
148258.666667
Counter: #clauses (cache record structure) {Cache - component caching}
189
11050596
4
1000740
58468.761905
Counter: #clauses (positive hit) {Cache - component caching}
135
3025116
56
280684
22408.266667
Counter: #clauses (negative hit) {Cache - component caching}
54
8025480
4
1000740
148620.000000
Counter: #removed clauses / #clauses {Cache - component caching}
189
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
135
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
54
32867
30
3760
608.648148
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
54
54
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
