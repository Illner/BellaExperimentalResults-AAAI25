Number: formula size {Formula representation}
1
26214640
Number: #variables {Formula representation}
1
2621560
Number: #clauses {Formula representation}
1
2621550
Timer (reduced): initialize [ns] {Formula representation}
1
2394576772
Timer: compute connected components [ns] {Formula representation}
61
4526209486
4020
1120270038
74200155.508197
Number: circuit size {Circuit}
1
43930953
Number: #nodes {Circuit}
1
15182743
Number: #edges {Circuit}
1
43930953
Number: #variables {Circuit}
1
2621560
Timer: copy subcircuit [ns] {Circuit}
27
8545321302
43350
2471033312
316493381.555556
Counter: formula size (copy subcircuit) {Circuit}
27
22840056
264
5898456
845928.000000
Counter: #variables (copy subcircuit) {Circuit}
27
2641752
108
655472
97842.666667
Counter: #clauses (copy subcircuit) {Circuit}
27
2641149
91
655459
97820.333333
Timer (reduced): initialize [ns] {Compiler}
1
1810571750
Timer (reduced): compile [ns] {Compiler}
1
3792440630920
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
0
Number: #decisions {Compiler}
1
30
Counter: ratio of recomputed hypergraph cuts {Compiler}
57
32
0
1
0.561404
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
17
15
0
1
0.882353
Counter: #connected components {Compiler}
61
57
0
1
0.934426
Counter: #monotone residual formulae / #residual formulae {Compiler}
61
4
0
1
0.065574
Counter: monotone residual formula size {Compiler}
4
160
40
40
40.000000
Counter: #pure clauses / #clauses {Compiler}
61
4.658281
0.000000
1.000000
0.076365
Counter: pure residual formula size / residual formula size {Compiler}
61
4.467831
0.000000
1.000000
0.073243
Timer: assign literal [ns] {Compiler}
100
3732995048063
730
1403253119062
37329950480.630000
Timer: unassign literal [ns] {Compiler}
100
594352193
300
133620247
5943521.930000
Timer: get decision variable [ns] {Decision heuristic}
30
239089484
60
77931477
7969649.466667
Counter: #preselected variables {Decision heuristic}
30
7869037
1
2621560
262301.233333
Counter: #restricted variables / #preselected variables {Decision heuristic}
15
0.010838
0.000015
0.003034
0.000723
Timer (reduced): initialize [ns] {SAT solver}
1
671798884
Timer (reduced): initial simplification [ns] {SAT solver}
1
1150
Timer (reduced): initially implied literals [ns] {SAT solver}
1
770
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
61
2744621214
7540
550806641
44993790.393443
Timer: unit propagation [ns] {SAT solver}
61
212660
160
46900
3486.229508
Counter: #implied literals {SAT solver}
61
110
0
4
1.803279
Counter: #implied literals / #variables {SAT solver}
61
0.242260
0.000000
0.047619
0.003971
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
5
67341560
52530
34957551
13468312.000000
Counter: #implicit implied literals / #variables {SAT solver}
5
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
5
0.015625
0.000000
0.015625
0.003125
Timer: compute cut [ns] {Partitioning hypergraph}
1
26858174
26858174
26858174
26858174.000000
Counter: cut size {Partitioning hypergraph}
1
16
16
16
16.000000
Counter: cut size / #variables {Partitioning hypergraph}
1
0.003831
0.003831
0.003831
0.003831
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
2
29647814
12599
29635215
14823907.000000
Counter: #vertices {Partitioning hypergraph}
2
645
0
645
322.500000
Counter: #vertices / #clauses {Partitioning hypergraph}
2
0.155384
0.000000
0.155384
0.077692
Counter: #hyperedges {Partitioning hypergraph}
2
20
0
20
10.000000
Counter: #hyperedges / #variables {Partitioning hypergraph}
2
0.004789
0.000000
0.004789
0.002395
Counter: hypergraph size {Partitioning hypergraph}
2
2452
0
2452
1226.000000
Counter: hypergraph size / formula size {Partitioning hypergraph}
2
0.108266
0.000000
0.108266
0.054133
Timer: create equivalence structure [ns] {Partitioning hypergraph}
2
638806
5820
632986
319403.000000
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
57
27
0
1
0.473684
Number: #current entries {Cache - component caching}
1
30
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
57
39774290787
40470
11775694449
697794575.210526
Timer: search cache record structure [ns] {Cache - component caching}
57
58896942
170
14495534
1033279.684211
Timer: add cache record structure [ns] {Cache - component caching}
30
34615792
400
9561806
1153859.733333
Counter: #empty cache records / #cache records {Cache - component caching}
57
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
57
98983262
128
26214640
1736548.456140
Counter: formula size (positive hit) {Cache - component caching}
27
22840056
264
5898456
845928.000000
Counter: formula size (negative hit) {Cache - component caching}
30
76143206
128
26214640
2538106.866667
Counter: #variables (cache record structure) {Cache - component caching}
57
10526724
64
2621560
184679.368421
Counter: #variables (positive hit) {Cache - component caching}
27
2641752
108
655472
97842.666667
Counter: #variables (negative hit) {Cache - component caching}
30
7884972
64
2621560
262832.400000
Counter: #clauses (cache record structure) {Cache - component caching}
57
10525438
44
2621550
184656.807018
Counter: #clauses (positive hit) {Cache - component caching}
27
2641149
91
655459
97820.333333
Counter: #clauses (negative hit) {Cache - component caching}
30
7884289
44
2621550
262809.633333
Counter: #removed clauses / #clauses {Cache - component caching}
57
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
27
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
30
11969
30
1010
398.966667
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
30
30
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
