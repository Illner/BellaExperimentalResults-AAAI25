Number: formula size {Formula representation}
1
1720
Number: #variables {Formula representation}
1
380
Number: #clauses {Formula representation}
1
380
Timer (reduced): initialize [ns] {Formula representation}
1
351131
Timer: compute connected components [ns] {Formula representation}
11
185890
3010
43390
16899.090909
Number: circuit size {Circuit}
1
5066
Number: #nodes {Circuit}
1
3099
Number: #edges {Circuit}
1
5066
Number: #variables {Circuit}
1
380
Timer: copy subcircuit [ns] {Circuit}
43
699211
950
352321
16260.720930
Counter: formula size (copy subcircuit) {Circuit}
43
2340
8
992
54.418605
Counter: #variables (copy subcircuit) {Circuit}
43
758
4
256
17.627907
Counter: #clauses (copy subcircuit) {Circuit}
43
758
4
256
17.627907
Timer (reduced): initialize [ns] {Compiler}
1
3938959
Timer (reduced): compile [ns] {Compiler}
1
20176786
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
2
Number: #splits {Compiler}
1
44
Number: #decisions {Compiler}
1
6
Counter: ratio of recomputed hypergraph cuts {Compiler}
49
43
0
1
0.877551
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
3
1
0
1
0.333333
Counter: #connected components {Compiler}
11
49
1
10
4.454545
Counter: #monotone residual formulae / #residual formulae {Compiler}
11
0
0
0
0.000000
Counter: monotone residual formula size {Compiler}
0
0
0
0
0.000000
Counter: #pure clauses / #clauses {Compiler}
11
0.000000
0.000000
0.000000
0.000000
Counter: pure residual formula size / residual formula size {Compiler}
11
0.000000
0.000000
0.000000
0.000000
Timer: assign literal [ns] {Compiler}
24
106370
320
28160
4432.083333
Timer: unassign literal [ns] {Compiler}
24
41921
270
7730
1746.708333
Timer: get decision variable [ns] {Decision heuristic}
6
2200
140
1080
366.666667
Counter: #preselected variables {Decision heuristic}
6
15
1
4
2.500000
Counter: #restricted variables / #preselected variables {Decision heuristic}
0
0.000000
0.000000
0.000000
0.000000
Timer (reduced): initialize [ns] {SAT solver}
1
188740
Timer (reduced): initial simplification [ns] {SAT solver}
1
520
Timer (reduced): initially implied literals [ns] {SAT solver}
1
270
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
13
360332
370
169411
27717.846154
Timer: unit propagation [ns] {SAT solver}
13
4640
110
1110
356.923077
Counter: #implied literals {SAT solver}
13
24
0
2
1.846154
Counter: #implied literals / #variables {SAT solver}
13
1.862710
0.000000
1.000000
0.143285
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
3
289840
25210
236920
96613.333333
Counter: #implicit implied literals / #variables {SAT solver}
3
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
3
0.411943
0.065789
0.173077
0.137314
Timer: compute cut [ns] {Partitioning hypergraph}
2
15583595
2330025
13253570
7791797.500000
Counter: cut size {Partitioning hypergraph}
2
5
1
4
2.500000
Counter: cut size / #variables {Partitioning hypergraph}
2
0.029757
0.010526
0.019231
0.014879
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
2
843162
45670
797492
421581.000000
Counter: #vertices {Partitioning hypergraph}
2
364
34
330
182.000000
Counter: #vertices / #clauses {Partitioning hypergraph}
2
1.522267
0.653846
0.868421
0.761134
Counter: #hyperedges {Partitioning hypergraph}
2
34
9
25
17.000000
Counter: #hyperedges / #variables {Partitioning hypergraph}
2
0.238866
0.065789
0.173077
0.119433
Counter: hypergraph size {Partitioning hypergraph}
2
1356
66
1290
678.000000
Counter: hypergraph size / formula size {Partitioning hypergraph}
2
1.235294
0.485294
0.750000
0.617647
Timer: create equivalence structure [ns] {Partitioning hypergraph}
2
128070
10800
117270
64035.000000
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
49
43
0
1
0.877551
Number: #current entries {Cache - component caching}
1
6
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
49
1716794
1530
539912
35036.612245
Timer: search cache record structure [ns] {Cache - component caching}
49
7760
50
1060
158.367347
Timer: add cache record structure [ns] {Cache - component caching}
6
10510
300
7820
1751.666667
Counter: #empty cache records / #cache records {Cache - component caching}
49
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
49
6096
8
1720
124.408163
Counter: formula size (positive hit) {Cache - component caching}
43
2340
8
992
54.418605
Counter: formula size (negative hit) {Cache - component caching}
6
3756
8
1720
626.000000
Counter: #variables (cache record structure) {Cache - component caching}
49
1744
4
380
35.591837
Counter: #variables (positive hit) {Cache - component caching}
43
758
4
256
17.627907
Counter: #variables (negative hit) {Cache - component caching}
6
986
4
380
164.333333
Counter: #clauses (cache record structure) {Cache - component caching}
49
1744
4
380
35.591837
Counter: #clauses (positive hit) {Cache - component caching}
43
758
4
256
17.627907
Counter: #clauses (negative hit) {Cache - component caching}
6
986
4
380
164.333333
Counter: #removed clauses / #clauses {Cache - component caching}
49
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
43
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
6
421
40
150
70.166667
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
6
6
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
