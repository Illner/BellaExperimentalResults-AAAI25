Number: formula size {Formula representation}
1
4572624
Number: #variables {Formula representation}
1
653352
Number: #clauses {Formula representation}
1
653338
Timer (reduced): initialize [ns] {Formula representation}
1
518694937
Timer: compute connected components [ns] {Formula representation}
81
1591937532
10030
245836031
19653549.777778
Number: circuit size {Circuit}
1
20946976
Number: #nodes {Circuit}
1
3852563
Number: #edges {Circuit}
1
20946976
Number: #variables {Circuit}
1
653352
Timer: copy subcircuit [ns] {Circuit}
33
2894443133
127320
559857211
87710397.969697
Counter: formula size (copy subcircuit) {Circuit}
33
8343016
332
1213344
252818.666667
Counter: #variables (copy subcircuit) {Circuit}
33
1342364
166
186780
40677.696970
Counter: #clauses (copy subcircuit) {Circuit}
33
1340910
112
186756
40633.636364
Timer (reduced): initialize [ns] {Compiler}
1
565592152
Timer (reduced): compile [ns] {Compiler}
1
133219989021
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
0
Number: #decisions {Compiler}
1
40
Counter: ratio of recomputed hypergraph cuts {Compiler}
73
47
0
1
0.643836
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
22
20
0
1
0.909091
Counter: #connected components {Compiler}
81
73
0
1
0.901235
Counter: #monotone residual formulae / #residual formulae {Compiler}
81
8
0
1
0.098765
Counter: monotone residual formula size {Compiler}
8
792
96
108
99.000000
Counter: #pure clauses / #clauses {Compiler}
81
9.440844
0.000000
1.000000
0.116554
Counter: pure residual formula size / residual formula size {Compiler}
81
9.020681
0.000000
1.000000
0.111366
Timer: assign literal [ns] {Compiler}
128
115182286072
1250
39801036260
899861609.937500
Timer: unassign literal [ns] {Compiler}
128
200842098
390
36832090
1569078.890625
Timer: get decision variable [ns] {Decision heuristic}
40
67898527
60
17228522
1697463.175000
Counter: #preselected variables {Decision heuristic}
40
3280481
1
653352
82012.025000
Counter: #restricted variables / #preselected variables {Decision heuristic}
20
0.014724
0.000064
0.002731
0.000736
Timer (reduced): initialize [ns] {SAT solver}
1
259185493
Timer (reduced): initial simplification [ns] {SAT solver}
1
990
Timer (reduced): initially implied literals [ns] {SAT solver}
1
620
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
81
793763756
11820
94813131
9799552.543210
Timer: unit propagation [ns] {SAT solver}
81
192460
200
87200
2376.049383
Counter: #implied literals {SAT solver}
81
176
0
6
2.172840
Counter: #implied literals / #variables {SAT solver}
81
0.211149
0.000000
0.020408
0.002607
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
12
17889432
86770
3387488
1490786.000000
Counter: #implicit implied literals / #variables {SAT solver}
12
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
12
0.036145
0.000000
0.006024
0.003012
Timer: compute cut [ns] {Partitioning hypergraph}
1
8577411
8577411
8577411
8577411.000000
Counter: cut size {Partitioning hypergraph}
1
14
14
14
14.000000
Counter: cut size / #variables {Partitioning hypergraph}
1
0.003054
0.003054
0.003054
0.003054
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
2
4579460
25120
4554340
2289730.000000
Counter: #vertices {Partitioning hypergraph}
2
219
0
219
109.500000
Counter: #vertices / #clauses {Partitioning hypergraph}
2
0.048344
0.000000
0.048344
0.024172
Counter: #hyperedges {Partitioning hypergraph}
2
18
0
18
9.000000
Counter: #hyperedges / #variables {Partitioning hypergraph}
2
0.003927
0.000000
0.003927
0.001963
Counter: hypergraph size {Partitioning hypergraph}
2
666
0
666
333.000000
Counter: hypergraph size / formula size {Partitioning hypergraph}
2
0.032570
0.000000
0.032570
0.016285
Timer: create equivalence structure [ns] {Partitioning hypergraph}
2
498291
13360
484931
249145.500000
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
73
33
0
1
0.452055
Number: #current entries {Cache - component caching}
1
40
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
73
11529569292
110080
2125735482
157939305.369863
Timer: search cache record structure [ns] {Cache - component caching}
73
14076184
180
1493404
192824.438356
Timer: add cache record structure [ns] {Cache - component caching}
40
16707000
270
5023242
417675.000000
Counter: #empty cache records / #cache records {Cache - component caching}
73
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
73
30670408
296
4572624
420142.575342
Counter: formula size (positive hit) {Cache - component caching}
33
8343016
332
1213344
252818.666667
Counter: formula size (negative hit) {Cache - component caching}
40
22327392
296
4572624
558184.800000
Counter: #variables (cache record structure) {Cache - component caching}
73
4646784
148
653352
63654.575342
Counter: #variables (positive hit) {Cache - component caching}
33
1342364
166
186780
40677.696970
Counter: #variables (negative hit) {Cache - component caching}
40
3304420
148
653352
82610.500000
Counter: #clauses (cache record structure) {Cache - component caching}
73
4643434
100
653338
63608.684932
Counter: #clauses (positive hit) {Cache - component caching}
33
1340910
112
186756
40633.636364
Counter: #clauses (negative hit) {Cache - component caching}
40
3302524
100
653338
82563.100000
Counter: #removed clauses / #clauses {Cache - component caching}
73
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
33
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
40
12560
40
1020
314.000000
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
40
40
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
