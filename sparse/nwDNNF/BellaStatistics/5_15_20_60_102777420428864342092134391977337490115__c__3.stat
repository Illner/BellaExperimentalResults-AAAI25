Number: formula size {Formula representation}
1
12002200
Number: #variables {Formula representation}
1
2400500
Number: #clauses {Formula representation}
1
2401055
Timer (reduced): initialize [ns] {Formula representation}
1
1433015720
Timer: compute connected components [ns] {Formula representation}
191
20274635038
24350
1091125655
106149921.664921
Number: circuit size {Circuit}
1
470121665
Number: #nodes {Circuit}
1
26905839
Number: #edges {Circuit}
1
470121665
Number: #variables {Circuit}
1
2400500
Timer: copy subcircuit [ns] {Circuit}
76
44411130272
1732528
3150439047
584356977.263158
Counter: formula size (copy subcircuit) {Circuit}
76
59584000
7640
2785760
784000.000000
Counter: #variables (copy subcircuit) {Circuit}
76
12664640
2560
576460
166640.000000
Counter: #clauses (copy subcircuit) {Circuit}
76
12678890
2611
576844
166827.500000
Timer (reduced): initialize [ns] {Compiler}
1
2091800452
Timer (reduced): compile [ns] {Compiler}
1
884991156280
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
0
Number: #decisions {Compiler}
1
95
Counter: ratio of recomputed hypergraph cuts {Compiler}
171
167
0
1
0.976608
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
94
74
0
1
0.787234
Counter: #connected components {Compiler}
191
171
0
1
0.895288
Counter: #monotone residual formulae / #residual formulae {Compiler}
191
20
0
1
0.104712
Counter: monotone residual formula size {Compiler}
20
4800
240
240
240.000000
Counter: #pure clauses / #clauses {Compiler}
191
20.937387
0.000000
1.000000
0.109620
Counter: pure residual formula size / residual formula size {Compiler}
191
20.640306
0.000000
1.000000
0.108064
Timer: assign literal [ns] {Compiler}
290
586147580154
1660
68879414327
2021198552.255172
Timer: unassign literal [ns] {Compiler}
290
2079555368
550
146977785
7170880.579310
Timer: get decision variable [ns] {Decision heuristic}
95
1227145725
140
101431921
12917323.421053
Counter: #preselected variables {Decision heuristic}
95
36639215
1
2400500
385675.947368
Counter: #restricted variables / #preselected variables {Decision heuristic}
74
0.075044
0.000042
0.004310
0.001014
Timer (reduced): initialize [ns] {SAT solver}
1
631167775
Timer (reduced): initial simplification [ns] {SAT solver}
1
1320
Timer (reduced): initially implied literals [ns] {SAT solver}
1
750
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
191
15940980846
22950
647213295
83460632.701571
Timer: unit propagation [ns] {SAT solver}
191
719721
340
50299
3768.172775
Counter: #implied literals {SAT solver}
191
1055
0
20
5.523560
Counter: #implied literals / #variables {SAT solver}
191
0.169179
0.000000
0.008264
0.000886
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
36
39028137
181447
2761116
1084114.916667
Counter: #implicit implied literals / #variables {SAT solver}
36
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
36
0.002747
0.000000
0.002747
0.000076
Timer: compute cut [ns] {Partitioning hypergraph}
1
3112072
3112072
3112072
3112072.000000
Counter: cut size {Partitioning hypergraph}
1
13
13
13
13.000000
Counter: cut size / #variables {Partitioning hypergraph}
1
0.002798
0.002798
0.002798
0.002798
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
20
6897984
49339
2030734
344899.200000
Counter: #vertices {Partitioning hypergraph}
20
62
0
62
3.100000
Counter: #vertices / #clauses {Partitioning hypergraph}
20
0.013543
0.000000
0.013543
0.000677
Counter: #hyperedges {Partitioning hypergraph}
20
23
0
23
1.150000
Counter: #hyperedges / #variables {Partitioning hypergraph}
20
0.004950
0.000000
0.004950
0.000248
Counter: hypergraph size {Partitioning hypergraph}
20
143
0
143
7.150000
Counter: hypergraph size / formula size {Partitioning hypergraph}
20
0.008974
0.000000
0.008974
0.000449
Timer: create equivalence structure [ns] {Partitioning hypergraph}
20
2756834
22980
428395
137841.700000
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
171
76
0
1
0.444444
Number: #current entries {Cache - component caching}
1
95
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
171
200053661444
281347
12187524079
1169904452.888889
Timer: search cache record structure [ns] {Cache - component caching}
171
164461739
200
7099735
961764.555556
Timer: add cache record structure [ns] {Cache - component caching}
95
165482019
1130
14104740
1741915.989474
Counter: #empty cache records / #cache records {Cache - component caching}
171
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
171
240326535
728
12002200
1405418.333333
Counter: formula size (positive hit) {Cache - component caching}
76
59584000
7640
2785760
784000.000000
Counter: formula size (negative hit) {Cache - component caching}
95
180742535
728
12002200
1902553.000000
Counter: #variables (cache record structure) {Cache - component caching}
171
49339770
364
2400500
288536.666667
Counter: #variables (positive hit) {Cache - component caching}
76
12664640
2560
576460
166640.000000
Counter: #variables (negative hit) {Cache - component caching}
95
36675130
364
2400500
386054.000000
Counter: #clauses (cache record structure) {Cache - component caching}
171
49368270
244
2401055
288703.333333
Counter: #clauses (positive hit) {Cache - component caching}
76
12678890
2611
576844
166827.500000
Counter: #clauses (negative hit) {Cache - component caching}
95
36689380
244
2401055
386204.000000
Counter: #removed clauses / #clauses {Cache - component caching}
171
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
76
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
95
52409
50
1360
551.673684
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
95
95
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
