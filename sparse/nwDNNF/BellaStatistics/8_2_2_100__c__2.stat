Number: formula size {Formula representation}
1
10304
Number: #variables {Formula representation}
1
1060
Number: #clauses {Formula representation}
1
1056
Timer (reduced): initialize [ns] {Formula representation}
1
1864608
Timer: compute connected components [ns] {Formula representation}
17
1350026
800
607823
79413.294118
Number: circuit size {Circuit}
1
6642
Number: #nodes {Circuit}
1
5187
Number: #edges {Circuit}
1
6642
Number: #variables {Circuit}
1
1060
Timer: copy subcircuit [ns] {Circuit}
7
983856
12191
432572
140550.857143
Counter: formula size (copy subcircuit) {Circuit}
7
8408
32
4664
1201.142857
Counter: #variables (copy subcircuit) {Circuit}
7
1156
16
544
165.142857
Counter: #clauses (copy subcircuit) {Circuit}
7
1128
12
540
161.142857
Timer (reduced): initialize [ns] {Compiler}
1
4687300
Timer (reduced): compile [ns] {Compiler}
1
15081626
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
0
Number: #decisions {Compiler}
1
8
Counter: ratio of recomputed hypergraph cuts {Compiler}
15
15
1
1
1.000000
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
8
0
0
0
0.000000
Counter: #connected components {Compiler}
17
15
0
1
0.882353
Counter: #monotone residual formulae / #residual formulae {Compiler}
17
2
0
1
0.117647
Counter: monotone residual formula size {Compiler}
2
16
8
8
8.000000
Counter: #pure clauses / #clauses {Compiler}
17
2.000000
0.000000
1.000000
0.117647
Counter: pure residual formula size / residual formula size {Compiler}
17
2.000000
0.000000
1.000000
0.117647
Timer: assign literal [ns] {Compiler}
32
1212137
350
506153
37879.281250
Timer: unassign literal [ns] {Compiler}
32
118421
210
26250
3700.656250
Timer: get decision variable [ns] {Decision heuristic}
8
1540
40
840
192.500000
Counter: #preselected variables {Decision heuristic}
8
36
1
8
4.500000
Counter: #restricted variables / #preselected variables {Decision heuristic}
0
0.000000
0.000000
0.000000
0.000000
Timer (reduced): initialize [ns] {SAT solver}
1
592423
Timer (reduced): initial simplification [ns] {SAT solver}
1
610
Timer (reduced): initially implied literals [ns] {SAT solver}
1
270
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
17
314900
890
97670
18523.529412
Timer: unit propagation [ns] {SAT solver}
17
5860
150
920
344.705882
Counter: #implied literals {SAT solver}
17
32
0
2
1.882353
Counter: #implied literals / #variables {SAT solver}
17
0.764618
0.000000
0.200000
0.044978
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
15
1987247
6040
853633
132483.133333
Counter: #implicit implied literals / #variables {SAT solver}
15
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
15
0.629421
0.007547
0.071429
0.041961
Timer: compute cut [ns] {Partitioning hypergraph}
0
0
0
0
0.000000
Counter: cut size {Partitioning hypergraph}
0
0
0
0
0.000000
Counter: cut size / #variables {Partitioning hypergraph}
0
0.000000
0.000000
0.000000
0.000000
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
8
3940716
3090
2797552
492589.500000
Counter: #vertices {Partitioning hypergraph}
8
0
0
0
0.000000
Counter: #vertices / #clauses {Partitioning hypergraph}
8
0.000000
0.000000
0.000000
0.000000
Counter: #hyperedges {Partitioning hypergraph}
8
0
0
0
0.000000
Counter: #hyperedges / #variables {Partitioning hypergraph}
8
0.000000
0.000000
0.000000
0.000000
Counter: hypergraph size {Partitioning hypergraph}
8
0
0
0
0.000000
Counter: hypergraph size / formula size {Partitioning hypergraph}
8
0.000000
0.000000
0.000000
0.000000
Timer: create equivalence structure [ns] {Partitioning hypergraph}
8
235422
1500
133471
29427.750000
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
15
7
0
1
0.466667
Number: #current entries {Cache - component caching}
1
8
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
15
4330729
8680
1957129
288715.266667
Timer: search cache record structure [ns] {Cache - component caching}
15
9800
140
3890
653.333333
Timer: add cache record structure [ns] {Cache - component caching}
8
9190
130
3920
1148.750000
Counter: #empty cache records / #cache records {Cache - component caching}
15
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
15
27120
32
10304
1808.000000
Counter: formula size (positive hit) {Cache - component caching}
7
8408
32
4664
1201.142857
Counter: formula size (negative hit) {Cache - component caching}
8
18712
32
10304
2339.000000
Counter: #variables (cache record structure) {Cache - component caching}
15
3372
16
1060
224.800000
Counter: #variables (positive hit) {Cache - component caching}
7
1156
16
544
165.142857
Counter: #variables (negative hit) {Cache - component caching}
8
2216
16
1060
277.000000
Counter: #clauses (cache record structure) {Cache - component caching}
15
3312
12
1056
220.800000
Counter: #clauses (positive hit) {Cache - component caching}
7
1128
12
540
161.142857
Counter: #clauses (negative hit) {Cache - component caching}
8
2184
12
1056
273.000000
Counter: #removed clauses / #clauses {Cache - component caching}
15
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
7
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
8
480
20
220
60.000000
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
8
8
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
