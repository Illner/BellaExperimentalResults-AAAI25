Number: formula size {Formula representation}
1
4832245
Number: #variables {Formula representation}
1
805420
Number: #clauses {Formula representation}
1
805590
Timer (reduced): initialize [ns] {Formula representation}
1
515170691
Timer: compute connected components [ns] {Formula representation}
101
2228368299
4710
310968414
22063052.465347
Number: circuit size {Circuit}
1
8051071
Number: #nodes {Circuit}
1
3429249
Number: #edges {Circuit}
1
8051071
Number: #variables {Circuit}
1
805420
Timer: copy subcircuit [ns] {Circuit}
40
1606075274
170169
202217034
40151881.850000
Counter: formula size (copy subcircuit) {Circuit}
40
4015770
869
366597
100394.250000
Counter: #variables (copy subcircuit) {Circuit}
40
823240
286
73348
20581.000000
Counter: #clauses (copy subcircuit) {Circuit}
40
825870
309
73473
20646.750000
Timer (reduced): initialize [ns] {Compiler}
1
485475485
Timer (reduced): compile [ns] {Compiler}
1
154117986350
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
0
Number: #decisions {Compiler}
1
50
Counter: ratio of recomputed hypergraph cuts {Compiler}
90
55
0
1
0.611111
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
32
24
0
1
0.750000
Counter: #connected components {Compiler}
101
90
0
1
0.891089
Counter: #monotone residual formulae / #residual formulae {Compiler}
101
11
0
1
0.108911
Counter: monotone residual formula size {Compiler}
11
484
44
44
44.000000
Counter: #pure clauses / #clauses {Compiler}
101
12.061404
0.000000
1.000000
0.119420
Counter: pure residual formula size / residual formula size {Compiler}
101
11.776471
0.000000
1.000000
0.116599
Timer: assign literal [ns] {Compiler}
155
127296213880
820
40524765958
821265896.000000
Timer: unassign literal [ns] {Compiler}
155
320884138
300
45162241
2070220.245161
Timer: get decision variable [ns] {Decision heuristic}
50
118457438
90
24009044
2369148.760000
Counter: #preselected variables {Decision heuristic}
50
5218210
1
805420
104364.200000
Counter: #restricted variables / #preselected variables {Decision heuristic}
24
0.033749
0.000068
0.005641
0.001406
Timer (reduced): initialize [ns] {SAT solver}
1
177587356
Timer (reduced): initial simplification [ns] {SAT solver}
1
1180
Timer (reduced): initially implied literals [ns] {SAT solver}
1
830
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
101
1415483350
61370
127679905
14014686.633663
Timer: unit propagation [ns] {SAT solver}
101
242914
210
29229
2405.089109
Counter: #implied literals {SAT solver}
101
335
0
11
3.316832
Counter: #implied literals / #variables {SAT solver}
101
0.474074
0.000000
0.043478
0.004694
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
11
13326749
216588
3509791
1211522.636364
Counter: #implicit implied literals / #variables {SAT solver}
11
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
11
0.014286
0.000000
0.014286
0.001299
Timer: compute cut [ns] {Partitioning hypergraph}
2
14154183
5485705
8668478
7077091.500000
Counter: cut size {Partitioning hypergraph}
2
31
15
16
15.500000
Counter: cut size / #variables {Partitioning hypergraph}
2
0.011148
0.003311
0.007837
0.005574
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
8
6924864
12540
5559315
865608.000000
Counter: #vertices {Partitioning hypergraph}
8
401
0
278
50.125000
Counter: #vertices / #clauses {Partitioning hypergraph}
8
0.120053
0.000000
0.063109
0.015007
Counter: #hyperedges {Partitioning hypergraph}
8
51
0
29
6.375000
Counter: #hyperedges / #variables {Partitioning hypergraph}
8
0.017496
0.000000
0.011494
0.002187
Counter: hypergraph size {Partitioning hypergraph}
8
843
0
579
105.375000
Counter: hypergraph size / formula size {Partitioning hypergraph}
8
0.067500
0.000000
0.037383
0.008438
Timer: create equivalence structure [ns] {Partitioning hypergraph}
8
741244
5570
499736
92655.500000
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
90
40
0
1
0.444444
Number: #current entries {Cache - component caching}
1
50
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
90
19733644120
48560
3328704405
219262712.444444
Timer: search cache record structure [ns] {Cache - component caching}
90
13492389
140
1502148
149915.433333
Timer: add cache record structure [ns] {Cache - component caching}
50
12191591
240
1826615
243831.820000
Counter: #empty cache records / #cache records {Cache - component caching}
90
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
90
34970965
140
4832245
388566.277778
Counter: formula size (positive hit) {Cache - component caching}
40
4015770
869
366597
100394.250000
Counter: formula size (negative hit) {Cache - component caching}
50
30955195
140
4832245
619103.900000
Counter: #variables (cache record structure) {Cache - component caching}
90
6076830
70
805420
67520.333333
Counter: #variables (positive hit) {Cache - component caching}
40
823240
286
73348
20581.000000
Counter: #variables (negative hit) {Cache - component caching}
50
5253590
70
805420
105071.800000
Counter: #clauses (cache record structure) {Cache - component caching}
90
6082365
48
805590
67581.833333
Counter: #clauses (positive hit) {Cache - component caching}
40
825870
309
73473
20646.750000
Counter: #clauses (negative hit) {Cache - component caching}
50
5256495
48
805590
105129.900000
Counter: #removed clauses / #clauses {Cache - component caching}
90
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
40
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
50
29749
50
3790
594.980000
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
50
50
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
