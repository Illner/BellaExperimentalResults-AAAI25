Number: formula size {Formula representation}
1
1640
Number: #variables {Formula representation}
1
380
Number: #clauses {Formula representation}
1
340
Timer (reduced): initialize [ns] {Formula representation}
1
237968
Timer: compute connected components [ns] {Formula representation}
11
519978
2420
130199
47270.727273
Number: circuit size {Circuit}
1
1898
Number: #nodes {Circuit}
1
1355
Number: #edges {Circuit}
1
1898
Number: #variables {Circuit}
1
380
Timer: copy subcircuit [ns] {Circuit}
4
228587
11270
114339
57146.750000
Counter: formula size (copy subcircuit) {Circuit}
4
1756
80
912
439.000000
Counter: #variables (copy subcircuit) {Circuit}
4
596
40
256
149.000000
Counter: #clauses (copy subcircuit) {Circuit}
4
468
28
216
117.000000
Timer (reduced): initialize [ns] {Compiler}
1
6655722
Timer (reduced): compile [ns] {Compiler}
1
4331105
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
0
Number: #decisions {Compiler}
1
5
Counter: ratio of recomputed hypergraph cuts {Compiler}
9
3
0
1
0.333333
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
2
0
0
0
0.000000
Counter: #connected components {Compiler}
11
9
0
1
0.818182
Counter: #monotone residual formulae / #residual formulae {Compiler}
11
2
0
1
0.181818
Counter: monotone residual formula size {Compiler}
2
48
24
24
24.000000
Counter: #pure clauses / #clauses {Compiler}
11
3.013986
0.000000
1.000000
0.273999
Counter: pure residual formula size / residual formula size {Compiler}
11
2.811538
0.000000
1.000000
0.255594
Timer: assign literal [ns] {Compiler}
20
92999
550
23960
4649.950000
Timer: unassign literal [ns] {Compiler}
20
36620
270
7000
1831.000000
Timer: get decision variable [ns] {Decision heuristic}
5
1240
70
770
248.000000
Counter: #preselected variables {Decision heuristic}
5
11
1
4
2.200000
Counter: #restricted variables / #preselected variables {Decision heuristic}
0
0.000000
0.000000
0.000000
0.000000
Timer (reduced): initialize [ns] {SAT solver}
1
151979
Timer (reduced): initial simplification [ns] {SAT solver}
1
440
Timer (reduced): initially implied literals [ns] {SAT solver}
1
240
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
11
155539
1710
28690
14139.909091
Timer: unit propagation [ns] {SAT solver}
11
3170
140
610
288.181818
Counter: #implied literals {SAT solver}
11
20
0
2
1.818182
Counter: #implied literals / #variables {SAT solver}
11
0.225653
0.000000
0.076923
0.020514
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
3
204309
16450
169579
68103.000000
Counter: #implicit implied literals / #variables {SAT solver}
3
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
3
0.063158
0.013158
0.025000
0.021053
Timer: compute cut [ns] {Partitioning hypergraph}
1
883685
883685
883685
883685.000000
Counter: cut size {Partitioning hypergraph}
1
4
4
4
4.000000
Counter: cut size / #variables {Partitioning hypergraph}
1
0.010526
0.010526
0.010526
0.010526
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
2
385098
8050
377048
192549.000000
Counter: #vertices {Partitioning hypergraph}
2
8
0
8
4.000000
Counter: #vertices / #clauses {Partitioning hypergraph}
2
0.023529
0.000000
0.023529
0.011765
Counter: #hyperedges {Partitioning hypergraph}
2
5
0
5
2.500000
Counter: #hyperedges / #variables {Partitioning hypergraph}
2
0.013158
0.000000
0.013158
0.006579
Counter: hypergraph size {Partitioning hypergraph}
2
24
0
24
12.000000
Counter: hypergraph size / formula size {Partitioning hypergraph}
2
0.014634
0.000000
0.014634
0.007317
Timer: create equivalence structure [ns] {Partitioning hypergraph}
2
34490
3300
31190
17245.000000
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
9
4
0
1
0.444444
Number: #current entries {Cache - component caching}
1
5
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
9
1466652
22320
396618
162961.333333
Timer: search cache record structure [ns] {Cache - component caching}
9
5040
190
1080
560.000000
Timer: add cache record structure [ns] {Cache - component caching}
5
7230
400
5080
1446.000000
Counter: #empty cache records / #cache records {Cache - component caching}
9
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
9
5152
80
1640
572.444444
Counter: formula size (positive hit) {Cache - component caching}
4
1756
80
912
439.000000
Counter: formula size (negative hit) {Cache - component caching}
5
3396
80
1640
679.200000
Counter: #variables (cache record structure) {Cache - component caching}
9
1572
40
380
174.666667
Counter: #variables (positive hit) {Cache - component caching}
4
596
40
256
149.000000
Counter: #variables (negative hit) {Cache - component caching}
5
976
40
380
195.200000
Counter: #clauses (cache record structure) {Cache - component caching}
9
1276
28
340
141.777778
Counter: #clauses (positive hit) {Cache - component caching}
4
468
28
216
117.000000
Counter: #clauses (negative hit) {Cache - component caching}
5
808
28
340
161.600000
Counter: #removed clauses / #clauses {Cache - component caching}
9
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
4
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
5
730
30
410
146.000000
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
5
5
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
