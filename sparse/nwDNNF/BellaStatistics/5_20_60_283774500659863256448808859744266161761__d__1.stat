Number: formula size {Formula representation}
1
4004200
Number: #variables {Formula representation}
1
800300
Number: #clauses {Formula representation}
1
802010
Timer (reduced): initialize [ns] {Formula representation}
1
457949941
Timer: compute connected components [ns] {Formula representation}
240
1506095211
540
86247609
6275396.712500
Number: circuit size {Circuit}
1
162057665
Number: #nodes {Circuit}
1
41497439
Number: #edges {Circuit}
1
162057665
Number: #variables {Circuit}
1
800300
Timer: copy subcircuit [ns] {Circuit}
181
29237710413
27760
2117685286
161534311.674033
Counter: formula size (copy subcircuit) {Circuit}
181
19200367
195
931760
106079.375691
Counter: #variables (copy subcircuit) {Circuit}
181
4013416
26
192260
22173.569061
Counter: #clauses (copy subcircuit) {Circuit}
181
4100746
92
193799
22656.055249
Timer (reduced): initialize [ns] {Compiler}
1
478009083
Timer (reduced): compile [ns] {Compiler}
1
144197314560
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
39
Number: #splits {Compiler}
1
120
Number: #decisions {Compiler}
1
139
Counter: ratio of recomputed hypergraph cuts {Compiler}
320
231
0
1
0.721875
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
57
53
0
1
0.929825
Counter: #connected components {Compiler}
240
320
1
4
1.333333
Counter: #monotone residual formulae / #residual formulae {Compiler}
240
0
0
0
0.000000
Counter: monotone residual formula size {Compiler}
0
0
0
0
0.000000
Counter: #pure clauses / #clauses {Compiler}
240
0.000000
0.000000
0.000000
0.000000
Counter: pure residual formula size / residual formula size {Compiler}
240
0.000000
0.000000
0.000000
0.000000
Timer: assign literal [ns] {Compiler}
424
62623287697
270
7679424140
147696433.247642
Timer: unassign literal [ns] {Compiler}
424
708344345
220
50698306
1670623.455189
Timer: get decision variable [ns] {Decision heuristic}
139
420867667
60
40022892
3027824.942446
Counter: #preselected variables {Decision heuristic}
139
11986644
2
800300
86234.848921
Counter: #restricted variables / #preselected variables {Decision heuristic}
0
0.000000
0.000000
0.000000
0.000000
Timer (reduced): initialize [ns] {SAT solver}
1
172007840
Timer (reduced): initial simplification [ns] {SAT solver}
1
1170
Timer (reduced): initially implied literals [ns] {SAT solver}
1
830
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
279
3127981142
1170
121644982
11211401.942652
Timer: unit propagation [ns] {SAT solver}
279
493029
110
31580
1767.129032
Counter: #implied literals {SAT solver}
279
1588
0
20
5.691756
Counter: #implied literals / #variables {SAT solver}
279
21.420620
0.000000
1.000000
0.076776
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
140
32143436
25290
3948210
229595.971429
Counter: #implicit implied literals / #variables {SAT solver}
140
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
140
0.000000
0.000000
0.000000
0.000000
Timer: compute cut [ns] {Partitioning hypergraph}
4
478860211
697999
439411837
119715052.750000
Counter: cut size {Partitioning hypergraph}
4
72
5
27
18.000000
Counter: cut size / #variables {Partitioning hypergraph}
4
0.582467
0.001044
0.500000
0.145617
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
4
19671263
349199
15259623
4917815.750000
Counter: #vertices {Partitioning hypergraph}
4
5919
21
4653
1479.750000
Counter: #vertices / #clauses {Partitioning hypergraph}
4
1.992928
0.099526
0.776406
0.498232
Counter: #hyperedges {Partitioning hypergraph}
4
265
20
145
66.250000
Counter: #hyperedges / #variables {Partitioning hypergraph}
4
0.685410
0.030271
0.500000
0.171352
Counter: hypergraph size {Partitioning hypergraph}
4
15970
40
13390
3992.500000
Counter: hypergraph size / formula size {Partitioning hypergraph}
4
1.620408
0.090909
0.646392
0.405102
Timer: create equivalence structure [ns] {Partitioning hypergraph}
4
1235037
8180
962978
308759.250000
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
320
181
0
1
0.565625
Number: #current entries {Cache - component caching}
1
139
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
320
45504072172
4040
4313231273
142200225.537500
Timer: search cache record structure [ns] {Cache - component caching}
320
36650471
30
1259167
114532.721875
Timer: add cache record structure [ns] {Cache - component caching}
139
27316680
100
3943231
196522.877698
Counter: #empty cache records / #cache records {Cache - component caching}
320
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
320
78804354
8
4004200
246263.606250
Counter: formula size (positive hit) {Cache - component caching}
181
19200367
195
931760
106079.375691
Counter: formula size (negative hit) {Cache - component caching}
139
59603987
8
4004200
428805.661871
Counter: #variables (cache record structure) {Cache - component caching}
320
16029868
4
800300
50093.337500
Counter: #variables (positive hit) {Cache - component caching}
181
4013416
26
192260
22173.569061
Counter: #variables (negative hit) {Cache - component caching}
139
12016452
4
800300
86449.294964
Counter: #clauses (cache record structure) {Cache - component caching}
320
16212765
4
802010
50664.890625
Counter: #clauses (positive hit) {Cache - component caching}
181
4100746
92
193799
22656.055249
Counter: #clauses (negative hit) {Cache - component caching}
139
12112019
4
802010
87136.827338
Counter: #removed clauses / #clauses {Cache - component caching}
320
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
181
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
139
35180
30
1140
253.093525
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
139
139
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
