Number: formula size {Formula representation}
1
13289940
Number: #variables {Formula representation}
1
2657610
Number: #clauses {Formula representation}
1
2659100
Timer (reduced): initialize [ns] {Formula representation}
1
1604400141
Timer: compute connected components [ns] {Formula representation}
261
46828295340
5360
3025376854
179418756.091954
Number: circuit size {Circuit}
1
34278034
Number: #nodes {Circuit}
1
11337542
Number: #edges {Circuit}
1
34278034
Number: #variables {Circuit}
1
2657610
Timer: copy subcircuit [ns] {Circuit}
104
15775416096
1814403
812792728
151686693.230769
Counter: formula size (copy subcircuit) {Circuit}
104
12729366
2970
396792
122397.750000
Counter: #variables (copy subcircuit) {Circuit}
104
3184272
810
98766
30618.000000
Counter: #clauses (copy subcircuit) {Circuit}
104
3244150
1108
99931
31193.750000
Timer (reduced): initialize [ns] {Compiler}
1
4606976480
Timer (reduced): compile [ns] {Compiler}
1
1197010604913
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
54
Number: #decisions {Compiler}
1
130
Counter: ratio of recomputed hypergraph cuts {Compiler}
234
224
0
1
0.957265
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
126
73
0
1
0.579365
Counter: #connected components {Compiler}
261
234
0
2
0.896552
Counter: #monotone residual formulae / #residual formulae {Compiler}
261
54
0
1
0.206897
Counter: monotone residual formula size {Compiler}
54
5832
54
162
108.000000
Counter: #pure clauses / #clauses {Compiler}
261
54.642291
0.000000
1.000000
0.209357
Counter: pure residual formula size / residual formula size {Compiler}
261
54.482143
0.000000
1.000000
0.208744
Timer: assign literal [ns] {Compiler}
395
403282031540
510
56583158355
1020967168.455696
Timer: unassign literal [ns] {Compiler}
395
6727491422
300
497500915
17031623.853165
Timer: get decision variable [ns] {Decision heuristic}
130
3955311747
60
285100720
30425474.976923
Counter: #preselected variables {Decision heuristic}
130
39005607
1
2657610
300043.130769
Counter: #restricted variables / #preselected variables {Decision heuristic}
73
0.126473
0.000051
0.006280
0.001733
Timer (reduced): initialize [ns] {SAT solver}
1
774846350
Timer (reduced): initial simplification [ns] {SAT solver}
1
2140
Timer (reduced): initially implied literals [ns] {SAT solver}
1
1240
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
261
55741440823
5130
2112801732
213568738.785441
Timer: unit propagation [ns] {SAT solver}
261
2591437
240
746417
9928.877395
Counter: #implied literals {SAT solver}
261
1895
0
27
7.260536
Counter: #implied literals / #variables {SAT solver}
261
1.195213
0.000000
0.035714
0.004579
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
99
271835451
39529
10253247
2745812.636364
Counter: #implicit implied literals / #variables {SAT solver}
99
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
99
0.015813
0.000000
0.011765
0.000160
Timer: compute cut [ns] {Partitioning hypergraph}
1
8537794
8537794
8537794
8537794.000000
Counter: cut size {Partitioning hypergraph}
1
18
18
18
18.000000
Counter: cut size / #variables {Partitioning hypergraph}
1
0.003866
0.003866
0.003866
0.003866
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
53
16041430
12590
4056353
302668.490566
Counter: #vertices {Partitioning hypergraph}
53
164
0
164
3.094340
Counter: #vertices / #clauses {Partitioning hypergraph}
53
0.033219
0.000000
0.033219
0.000627
Counter: #hyperedges {Partitioning hypergraph}
53
33
0
33
0.622642
Counter: #hyperedges / #variables {Partitioning hypergraph}
53
0.007088
0.000000
0.007088
0.000134
Counter: hypergraph size {Partitioning hypergraph}
53
357
0
357
6.735849
Counter: hypergraph size / formula size {Partitioning hypergraph}
53
0.018976
0.000000
0.018976
0.000358
Timer: create equivalence structure [ns] {Partitioning hypergraph}
53
6977501
7030
873386
131650.962264
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
234
104
0
1
0.444444
Number: #current entries {Cache - component caching}
1
130
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
234
622861787902
57640
46711024103
2661802512.401709
Timer: search cache record structure [ns] {Cache - component caching}
234
223487922
160
13407844
955076.589744
Timer: add cache record structure [ns] {Cache - component caching}
130
73395734
810
4064834
564582.569231
Counter: #empty cache records / #cache records {Cache - component caching}
234
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
234
206139297
170
13289940
880937.166667
Counter: formula size (positive hit) {Cache - component caching}
104
12729366
2970
396792
122397.750000
Counter: formula size (negative hit) {Cache - component caching}
130
193409931
170
13289940
1487768.700000
Counter: #variables (cache record structure) {Cache - component caching}
234
42249779
85
2657610
180554.611111
Counter: #variables (positive hit) {Cache - component caching}
104
3184272
810
98766
30618.000000
Counter: #variables (negative hit) {Cache - component caching}
130
39065507
85
2657610
300503.900000
Counter: #clauses (cache record structure) {Cache - component caching}
234
42380650
58
2659100
181113.888889
Counter: #clauses (positive hit) {Cache - component caching}
104
3244150
1108
99931
31193.750000
Counter: #clauses (negative hit) {Cache - component caching}
130
39136500
58
2659100
301050.000000
Counter: #removed clauses / #clauses {Cache - component caching}
234
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
104
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
130
163519
30
4140
1257.838462
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
130
130
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
