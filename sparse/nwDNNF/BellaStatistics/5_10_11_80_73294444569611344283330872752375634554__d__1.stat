Number: formula size {Formula representation}
1
9664985
Number: #variables {Formula representation}
1
1610730
Number: #clauses {Formula representation}
1
1611405
Timer (reduced): initialize [ns] {Formula representation}
1
910963575
Timer: compute connected components [ns] {Formula representation}
110
1061842737
550
123174986
9653115.790909
Number: circuit size {Circuit}
1
170902914
Number: #nodes {Circuit}
1
58084212
Number: #edges {Circuit}
1
170902914
Number: #variables {Circuit}
1
1610730
Timer: copy subcircuit [ns] {Circuit}
149
34914333842
19400
4767238729
234324388.201342
Counter: formula size (copy subcircuit) {Circuit}
149
8821747
143
733832
59206.355705
Counter: #variables (copy subcircuit) {Circuit}
149
1797158
22
146608
12061.463087
Counter: #clauses (copy subcircuit) {Circuit}
149
1823663
67
147238
12239.348993
Timer (reduced): initialize [ns] {Compiler}
1
953789811
Timer (reduced): compile [ns] {Compiler}
1
372919659260
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
11
Number: #splits {Compiler}
1
121
Number: #decisions {Compiler}
1
60
Counter: ratio of recomputed hypergraph cuts {Compiler}
209
171
0
1
0.818182
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
32
30
0
1
0.937500
Counter: #connected components {Compiler}
110
209
1
8
1.900000
Counter: #monotone residual formulae / #residual formulae {Compiler}
110
0
0
0
0.000000
Counter: monotone residual formula size {Compiler}
0
0
0
0
0.000000
Counter: #pure clauses / #clauses {Compiler}
110
0.000000
0.000000
0.000000
0.000000
Counter: pure residual formula size / residual formula size {Compiler}
110
0.000000
0.000000
0.000000
0.000000
Timer: assign literal [ns] {Compiler}
186
293062898294
220
105350294049
1575606980.075269
Timer: unassign literal [ns] {Compiler}
186
706178474
220
89403681
3796658.462366
Timer: get decision variable [ns] {Decision heuristic}
60
436641093
60
75994491
7277351.550000
Counter: #preselected variables {Decision heuristic}
60
10615860
2
1610730
176931.000000
Counter: #restricted variables / #preselected variables {Decision heuristic}
0
0.000000
0.000000
0.000000
0.000000
Timer (reduced): initialize [ns] {SAT solver}
1
314415654
Timer (reduced): initial simplification [ns] {SAT solver}
1
2170
Timer (reduced): initially implied literals [ns] {SAT solver}
1
1520
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
121
3246292990
360
292803788
26828867.685950
Timer: unit propagation [ns] {SAT solver}
121
291467
100
43069
2408.818182
Counter: #implied literals {SAT solver}
121
402
0
11
3.322314
Counter: #implied literals / #variables {SAT solver}
121
6.721270
0.000000
1.000000
0.055548
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
121
69271982
10600
10945966
572495.719008
Counter: #implicit implied literals / #variables {SAT solver}
121
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
121
0.000000
0.000000
0.000000
0.000000
Timer: compute cut [ns] {Partitioning hypergraph}
2
445500072
426695
445073377
222750036.000000
Counter: cut size {Partitioning hypergraph}
2
33
11
22
16.500000
Counter: cut size / #variables {Partitioning hypergraph}
2
0.504405
0.004405
0.500000
0.252203
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
2
7780551
61809
7718742
3890275.500000
Counter: #vertices {Partitioning hypergraph}
2
4886
12
4874
2443.000000
Counter: #vertices / #clauses {Partitioning hypergraph}
2
1.059842
0.179104
0.880737
0.529921
Counter: #hyperedges {Partitioning hypergraph}
2
143
11
132
71.500000
Counter: #hyperedges / #variables {Partitioning hypergraph}
2
0.526432
0.026432
0.500000
0.263216
Counter: hypergraph size {Partitioning hypergraph}
2
13849
22
13827
6924.500000
Counter: hypergraph size / formula size {Partitioning hypergraph}
2
0.844885
0.153846
0.691039
0.422443
Timer: create equivalence structure [ns] {Partitioning hypergraph}
2
868131
4020
864111
434065.500000
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
209
149
0
1
0.712919
Number: #current entries {Cache - component caching}
1
60
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
209
38624788755
2090
8773257857
184807601.698565
Timer: search cache record structure [ns] {Cache - component caching}
209
27443036
30
2842247
131306.392344
Timer: add cache record structure [ns] {Cache - component caching}
60
20513766
190
3043394
341896.100000
Counter: #empty cache records / #cache records {Cache - component caching}
209
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
209
71516317
8
9664985
342183.334928
Counter: formula size (positive hit) {Cache - component caching}
149
8821747
143
733832
59206.355705
Counter: formula size (negative hit) {Cache - component caching}
60
62694570
8
9664985
1044909.500000
Counter: #variables (cache record structure) {Cache - component caching}
209
12452098
4
1610730
59579.416268
Counter: #variables (positive hit) {Cache - component caching}
149
1797158
22
146608
12061.463087
Counter: #variables (negative hit) {Cache - component caching}
60
10654940
4
1610730
177582.333333
Counter: #clauses (cache record structure) {Cache - component caching}
209
12505693
4
1611405
59835.851675
Counter: #clauses (positive hit) {Cache - component caching}
149
1823663
67
147238
12239.348993
Counter: #clauses (negative hit) {Cache - component caching}
60
10682030
4
1611405
178033.833333
Counter: #removed clauses / #clauses {Cache - component caching}
209
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
149
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
60
29948
20
3170
499.133333
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
60
60
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
