Number: formula size {Formula representation}
1
15444
Number: #variables {Formula representation}
1
1578
Number: #clauses {Formula representation}
1
1578
Timer (reduced): initialize [ns] {Formula representation}
1
2130978
Timer: compute connected components [ns] {Formula representation}
19
488149
740
160299
25692.052632
Number: circuit size {Circuit}
1
20722
Number: #nodes {Circuit}
1
13135
Number: #edges {Circuit}
1
20722
Number: #variables {Circuit}
1
1578
Timer: copy subcircuit [ns] {Circuit}
13
2533906
1820
1284929
194915.846154
Counter: formula size (copy subcircuit) {Circuit}
13
12788
8
6988
983.692308
Counter: #variables (copy subcircuit) {Circuit}
13
1754
4
806
134.923077
Counter: #clauses (copy subcircuit) {Circuit}
13
1754
4
806
134.923077
Timer (reduced): initialize [ns] {Compiler}
1
4026267
Timer (reduced): compile [ns] {Compiler}
1
189024616
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
2
Number: #splits {Compiler}
1
8
Number: #decisions {Compiler}
1
10
Counter: ratio of recomputed hypergraph cuts {Compiler}
23
9
0
1
0.391304
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
3
1
0
1
0.333333
Counter: #connected components {Compiler}
19
23
1
2
1.210526
Counter: #monotone residual formulae / #residual formulae {Compiler}
19
0
0
0
0.000000
Counter: monotone residual formula size {Compiler}
0
0
0
0
0.000000
Counter: #pure clauses / #clauses {Compiler}
19
0.000000
0.000000
0.000000
0.000000
Counter: pure residual formula size / residual formula size {Compiler}
19
0.000000
0.000000
0.000000
0.000000
Timer: assign literal [ns] {Compiler}
40
2218489
250
887449
55462.225000
Timer: unassign literal [ns] {Compiler}
40
195830
210
47100
4895.750000
Timer: get decision variable [ns] {Decision heuristic}
10
1820
50
690
182.000000
Counter: #preselected variables {Decision heuristic}
10
41
1
8
4.100000
Counter: #restricted variables / #preselected variables {Decision heuristic}
0
0.000000
0.000000
0.000000
0.000000
Timer (reduced): initialize [ns] {SAT solver}
1
632490
Timer (reduced): initial simplification [ns] {SAT solver}
1
820
Timer (reduced): initially implied literals [ns] {SAT solver}
1
590
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
21
1076890
420
696580
51280.476190
Timer: unit propagation [ns] {SAT solver}
21
5790
110
660
275.714286
Counter: #implied literals {SAT solver}
21
40
0
2
1.904762
Counter: #implied literals / #variables {SAT solver}
21
2.424838
0.000000
1.000000
0.115468
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
3
1009370
11220
981300
336456.666667
Counter: #implicit implied literals / #variables {SAT solver}
3
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
3
0.382605
0.007605
0.187500
0.127535
Timer: compute cut [ns] {Partitioning hypergraph}
2
167865963
709480
167156483
83932981.500000
Counter: cut size {Partitioning hypergraph}
2
9
1
8
4.500000
Counter: cut size / #variables {Partitioning hypergraph}
2
0.067570
0.005070
0.062500
0.033785
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
2
6556535
14890
6541645
3278267.500000
Counter: #vertices {Partitioning hypergraph}
2
1564
10
1554
782.000000
Counter: #vertices / #clauses {Partitioning hypergraph}
2
1.609791
0.625000
0.984791
0.804895
Counter: #hyperedges {Partitioning hypergraph}
2
15
3
12
7.500000
Counter: #hyperedges / #variables {Partitioning hypergraph}
2
0.195105
0.007605
0.187500
0.097552
Counter: hypergraph size {Partitioning hypergraph}
2
13860
18
13842
6930.000000
Counter: hypergraph size / formula size {Partitioning hypergraph}
2
1.346270
0.450000
0.896270
0.673135
Timer: create equivalence structure [ns] {Partitioning hypergraph}
2
341920
3640
338280
170960.000000
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
23
13
0
1
0.565217
Number: #current entries {Cache - component caching}
1
10
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
23
6360544
1940
2629377
276545.391304
Timer: search cache record structure [ns] {Cache - component caching}
23
13100
40
5470
569.565217
Timer: add cache record structure [ns] {Cache - component caching}
10
7000
140
2120
700.000000
Counter: #empty cache records / #cache records {Cache - component caching}
23
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
23
40988
8
15444
1782.086957
Counter: formula size (positive hit) {Cache - component caching}
13
12788
8
6988
983.692308
Counter: formula size (negative hit) {Cache - component caching}
10
28200
8
15444
2820.000000
Counter: #variables (cache record structure) {Cache - component caching}
23
5070
4
1578
220.434783
Counter: #variables (positive hit) {Cache - component caching}
13
1754
4
806
134.923077
Counter: #variables (negative hit) {Cache - component caching}
10
3316
4
1578
331.600000
Counter: #clauses (cache record structure) {Cache - component caching}
23
5070
4
1578
220.434783
Counter: #clauses (positive hit) {Cache - component caching}
13
1754
4
806
134.923077
Counter: #clauses (negative hit) {Cache - component caching}
10
3316
4
1578
331.600000
Counter: #removed clauses / #clauses {Cache - component caching}
23
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
13
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
10
620
30
150
62.000000
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
10
10
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
