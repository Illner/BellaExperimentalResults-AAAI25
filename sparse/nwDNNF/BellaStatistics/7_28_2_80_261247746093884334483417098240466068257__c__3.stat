Number: formula size {Formula representation}
1
12600
Number: #variables {Formula representation}
1
1876
Number: #clauses {Formula representation}
1
1820
Timer (reduced): initialize [ns] {Formula representation}
1
1640737
Timer: compute connected components [ns] {Formula representation}
15
2592658
7040
646709
172843.866667
Number: circuit size {Circuit}
1
11026
Number: #nodes {Circuit}
1
6659
Number: #edges {Circuit}
1
11026
Number: #variables {Circuit}
1
1876
Timer: copy subcircuit [ns] {Circuit}
6
1925306
46030
1019368
320884.333333
Counter: formula size (copy subcircuit) {Circuit}
6
14700
212
6960
2450.000000
Counter: #variables (copy subcircuit) {Circuit}
6
3004
106
1168
500.666667
Counter: #clauses (copy subcircuit) {Circuit}
6
2696
72
1112
449.333333
Timer (reduced): initialize [ns] {Compiler}
1
6186766
Timer (reduced): compile [ns] {Compiler}
1
22698139
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
0
Number: #decisions {Compiler}
1
7
Counter: ratio of recomputed hypergraph cuts {Compiler}
13
1
0
1
0.076923
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
1
0
0
0
0.000000
Counter: #connected components {Compiler}
15
13
0
1
0.866667
Counter: #monotone residual formulae / #residual formulae {Compiler}
15
2
0
1
0.133333
Counter: monotone residual formula size {Compiler}
2
136
68
68
68.000000
Counter: #pure clauses / #clauses {Compiler}
15
2.441558
0.000000
1.000000
0.162771
Counter: pure residual formula size / residual formula size {Compiler}
15
2.307750
0.000000
1.000000
0.153850
Timer: assign literal [ns] {Compiler}
28
1517185
870
480138
54185.178571
Timer: unassign literal [ns] {Compiler}
28
188530
310
31950
6733.214286
Timer: get decision variable [ns] {Decision heuristic}
7
1950
50
1260
278.571429
Counter: #preselected variables {Decision heuristic}
7
28
1
7
4.000000
Counter: #restricted variables / #preselected variables {Decision heuristic}
0
0.000000
0.000000
0.000000
0.000000
Timer (reduced): initialize [ns] {SAT solver}
1
840959
Timer (reduced): initial simplification [ns] {SAT solver}
1
720
Timer (reduced): initially implied literals [ns] {SAT solver}
1
400
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
15
575777
5390
103620
38385.133333
Timer: unit propagation [ns] {SAT solver}
15
7030
130
1400
468.666667
Counter: #implied literals {SAT solver}
15
28
0
2
1.866667
Counter: #implied literals / #variables {SAT solver}
15
0.112591
0.000000
0.028571
0.007506
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
1
957478
957478
957478
957478.000000
Counter: #implicit implied literals / #variables {SAT solver}
1
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
1
0.003731
0.003731
0.003731
0.003731
Timer: compute cut [ns] {Partitioning hypergraph}
1
1246457
1246457
1246457
1246457.000000
Counter: cut size {Partitioning hypergraph}
1
7
7
7
7.000000
Counter: cut size / #variables {Partitioning hypergraph}
1
0.003731
0.003731
0.003731
0.003731
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
1
3811802
3811802
3811802
3811802.000000
Counter: #vertices {Partitioning hypergraph}
1
16
16
16
16.000000
Counter: #vertices / #clauses {Partitioning hypergraph}
1
0.008791
0.008791
0.008791
0.008791
Counter: #hyperedges {Partitioning hypergraph}
1
7
7
7
7.000000
Counter: #hyperedges / #variables {Partitioning hypergraph}
1
0.003731
0.003731
0.003731
0.003731
Counter: hypergraph size {Partitioning hypergraph}
1
80
80
80
80.000000
Counter: hypergraph size / formula size {Partitioning hypergraph}
1
0.006349
0.006349
0.006349
0.006349
Timer: create equivalence structure [ns] {Partitioning hypergraph}
1
124300
124300
124300
124300.000000
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
13
6
0
1
0.461538
Number: #current entries {Cache - component caching}
1
7
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
13
8462853
62350
2188895
650988.692308
Timer: search cache record structure [ns] {Cache - component caching}
13
15080
210
4960
1160.000000
Timer: add cache record structure [ns] {Cache - component caching}
7
17960
560
6700
2565.714286
Counter: #empty cache records / #cache records {Cache - component caching}
13
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
13
42000
212
12600
3230.769231
Counter: formula size (positive hit) {Cache - component caching}
6
14700
212
6960
2450.000000
Counter: formula size (negative hit) {Cache - component caching}
7
27300
212
12600
3900.000000
Counter: #variables (cache record structure) {Cache - component caching}
13
7884
106
1876
606.461538
Counter: #variables (positive hit) {Cache - component caching}
6
3004
106
1168
500.666667
Counter: #variables (negative hit) {Cache - component caching}
7
4880
106
1876
697.142857
Counter: #clauses (cache record structure) {Cache - component caching}
13
7212
72
1820
554.769231
Counter: #clauses (positive hit) {Cache - component caching}
6
2696
72
1112
449.333333
Counter: #clauses (negative hit) {Cache - component caching}
7
4516
72
1820
645.142857
Counter: #removed clauses / #clauses {Cache - component caching}
13
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
6
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
7
1240
40
630
177.142857
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
7
7
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
