Number: formula size {Formula representation}
1
15000600
Number: #variables {Formula representation}
1
2500350
Number: #clauses {Formula representation}
1
2500280
Timer (reduced): initialize [ns] {Formula representation}
1
1683452443
Timer: compute connected components [ns] {Formula representation}
199999
85516868713
25840
949246711
427586.481497
Number: circuit size {Circuit}
1
21837386
Number: #nodes {Circuit}
1
8022748
Number: #edges {Circuit}
1
21837386
Number: #variables {Circuit}
1
2500350
Timer: copy subcircuit [ns] {Circuit}
0
0
0
0
0.000000
Counter: formula size (copy subcircuit) {Circuit}
0
0
0
0
0.000000
Counter: #variables (copy subcircuit) {Circuit}
0
0
0
0
0.000000
Counter: #clauses (copy subcircuit) {Circuit}
0
0
0
0
0.000000
Timer (reduced): initialize [ns] {Compiler}
1
2030106071
Timer (reduced): compile [ns] {Compiler}
1
1626280248465
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
0
Number: #decisions {Compiler}
1
99999
Counter: ratio of recomputed hypergraph cuts {Compiler}
99999
93998
0
1
0.939989
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
93998
7999
0
1
0.085098
Counter: #connected components {Compiler}
199999
99999
0
1
0.499997
Counter: #monotone residual formulae / #residual formulae {Compiler}
199999
100000
0
1
0.500003
Counter: monotone residual formula size {Compiler}
100000
30000000
300
300
300.000000
Counter: #pure clauses / #clauses {Compiler}
199999
100603.864734
0.000000
1.000000
0.503022
Counter: pure residual formula size / residual formula size {Compiler}
199999
100414.937759
0.000000
1.000000
0.502077
Timer: assign literal [ns] {Compiler}
311108
1233509481567
2110
217411124506
3964891.553952
Timer: unassign literal [ns] {Compiler}
311108
14606062807
390
160814970
46948.528508
Timer: get decision variable [ns] {Decision heuristic}
99999
1609981893
60
70990163
16099.979930
Counter: #preselected variables {Decision heuristic}
99999
138331861
1
2500350
1383.332443
Counter: #restricted variables / #preselected variables {Decision heuristic}
7999
15.234164
0.000020
0.002704
0.001905
Timer (reduced): initialize [ns] {SAT solver}
1
727478302
Timer (reduced): initial simplification [ns] {SAT solver}
1
1400
Timer (reduced): initially implied literals [ns] {SAT solver}
1
1080
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
199999
64091997479
16000
522189998
320461.589703
Timer: unit propagation [ns] {SAT solver}
199999
119067567
190
182568
595.340812
Counter: #implied literals {SAT solver}
199999
622216
0
10
3.111096
Counter: #implied literals / #variables {SAT solver}
199999
568.265331
0.000000
0.006623
0.002841
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
85999
94263178079
195867
9856045
1096096.211340
Counter: #implicit implied literals / #variables {SAT solver}
85999
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
85999
22.026432
0.000000
0.002203
0.000256
Timer: compute cut [ns] {Partitioning hypergraph}
1000
98848914
78999
308277
98848.914000
Counter: cut size {Partitioning hypergraph}
1000
8001
8
9
8.001000
Counter: cut size / #variables {Partitioning hypergraph}
1000
1.962954
0.001963
0.002208
0.001963
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
85999
15655613328
48799
4849363
182044.132234
Counter: #vertices {Partitioning hypergraph}
85999
32000
0
32
0.372097
Counter: #vertices / #clauses {Partitioning hypergraph}
85999
8.283717
0.000000
0.008284
0.000096
Counter: #hyperedges {Partitioning hypergraph}
85999
13000
0
13
0.151165
Counter: #hyperedges / #variables {Partitioning hypergraph}
85999
3.189401
0.000000
0.003189
0.000037
Counter: hypergraph size {Partitioning hypergraph}
85999
73000
0
73
0.848847
Counter: hypergraph size / formula size {Partitioning hypergraph}
85999
5.022360
0.000000
0.005022
0.000058
Timer: create equivalence structure [ns] {Partitioning hypergraph}
85999
6500624796
25279
1238686
75589.539367
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
99999
0
0
0
0.000000
Number: #current entries {Cache - component caching}
1
54805
Number: #deleted entries {Cache - component caching}
1
45194
Number: #cache cleanings {Cache - component caching}
1
1
Timer: create cache record structure [ns] {Cache - component caching}
99999
68265030596
65559
194719357
682657.132531
Timer: search cache record structure [ns] {Cache - component caching}
99999
255139630
160
481224
2551.421814
Timer: add cache record structure [ns] {Cache - component caching}
99999
370839219
490
3136593
3708.429274
Counter: #empty cache records / #cache records {Cache - component caching}
99999
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
99999
898519332
908
15000600
8985.283173
Counter: formula size (positive hit) {Cache - component caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - component caching}
99999
898519332
908
15000600
8985.283173
Counter: #variables (cache record structure) {Cache - component caching}
99999
240441858
454
2500350
2404.442624
Counter: #variables (positive hit) {Cache - component caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - component caching}
99999
240441858
454
2500350
2404.442624
Counter: #clauses (cache record structure) {Cache - component caching}
99999
226175244
304
2500280
2261.775058
Counter: #clauses (positive hit) {Cache - component caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - component caching}
99999
226175244
304
2500280
2261.775058
Counter: #removed clauses / #clauses {Cache - component caching}
99999
2213.535223
0.002394
1.000000
0.022136
Counter: #identical mappings / #mappings {Cache - component caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
1
906170583
906170583
906170583
906170583.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
99999
6957291
30
5150
69.573606
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
99999
99999
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
