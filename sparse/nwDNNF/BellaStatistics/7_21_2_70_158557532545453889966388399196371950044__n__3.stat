Number: formula size {Formula representation}
1
4088
Number: #variables {Formula representation}
1
742
Number: #clauses {Formula representation}
1
700
Timer (reduced): initialize [ns] {Formula representation}
1
802071
Timer: compute connected components [ns] {Formula representation}
255
4772965
2250
269547
18717.509804
Number: circuit size {Circuit}
1
5986
Number: #nodes {Circuit}
1
3047
Number: #edges {Circuit}
1
5986
Number: #variables {Circuit}
1
742
Timer: copy subcircuit [ns] {Circuit}
0
0
0
0
0.000000
Counter: formula size (copy subcircuit) {Circuit}
0
0
0
0
0.000000
Counter: #variables (copy subcircuit) {Circuit}
0
0
0
0
0.000000
Counter: #clauses (copy subcircuit) {Circuit}
0
0
0
0
0.000000
Timer (reduced): initialize [ns] {Compiler}
1
6101909
Timer (reduced): compile [ns] {Compiler}
1
17620514
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
0
Number: #decisions {Compiler}
1
127
Counter: ratio of recomputed hypergraph cuts {Compiler}
127
68
0
1
0.535433
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
68
0
0
0
0.000000
Counter: #connected components {Compiler}
255
127
0
1
0.498039
Counter: #monotone residual formulae / #residual formulae {Compiler}
255
128
0
1
0.501961
Counter: monotone residual formula size {Compiler}
128
3584
28
28
28.000000
Counter: #pure clauses / #clauses {Compiler}
255
154.180975
0.000000
1.000000
0.604631
Counter: pure residual formula size / residual formula size {Compiler}
255
148.070541
0.000000
1.000000
0.580669
Timer: assign literal [ns] {Compiler}
508
1036988
340
54900
2041.314961
Timer: unassign literal [ns] {Compiler}
508
482164
110
10930
949.141732
Timer: get decision variable [ns] {Decision heuristic}
127
8060
30
980
63.464567
Counter: #preselected variables {Decision heuristic}
127
184
1
6
1.448819
Counter: #restricted variables / #preselected variables {Decision heuristic}
0
0.000000
0.000000
0.000000
0.000000
Timer (reduced): initialize [ns] {SAT solver}
1
271777
Timer (reduced): initial simplification [ns] {SAT solver}
1
799
Timer (reduced): initially implied literals [ns] {SAT solver}
1
310
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
255
1383485
1470
54010
5425.431373
Timer: unit propagation [ns] {SAT solver}
255
32940
80
840
129.176471
Counter: #implied literals {SAT solver}
255
508
0
2
1.992157
Counter: #implied literals / #variables {SAT solver}
255
9.110411
0.000000
0.066667
0.035727
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
68
1966380
14539
394456
28917.352941
Counter: #implicit implied literals / #variables {SAT solver}
68
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
68
1.440344
0.009434
0.021739
0.021182
Timer: compute cut [ns] {Partitioning hypergraph}
4
253926
40609
125719
63481.500000
Counter: cut size {Partitioning hypergraph}
4
19
4
6
4.750000
Counter: cut size / #variables {Partitioning hypergraph}
4
0.040160
0.008086
0.011173
0.010040
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
68
2632641
4520
1208445
38715.308824
Counter: #vertices {Partitioning hypergraph}
68
38
0
18
0.558824
Counter: #vertices / #clauses {Partitioning hypergraph}
68
0.080638
0.000000
0.025714
0.001186
Counter: #hyperedges {Partitioning hypergraph}
68
23
0
7
0.338235
Counter: #hyperedges / #variables {Partitioning hypergraph}
68
0.049040
0.000000
0.013966
0.000721
Counter: hypergraph size {Partitioning hypergraph}
68
141
0
72
2.073529
Counter: hypergraph size / formula size {Partitioning hypergraph}
68
0.055354
0.000000
0.017613
0.000814
Timer: create equivalence structure [ns] {Partitioning hypergraph}
68
334399
2410
48410
4917.632353
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
127
0
0
0
0.000000
Number: #current entries {Cache - component caching}
1
127
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
127
2298286
4720
69669
18096.740157
Timer: search cache record structure [ns] {Cache - component caching}
127
14290
40
770
112.519685
Timer: add cache record structure [ns] {Cache - component caching}
127
146719
70
119539
1155.267717
Counter: #empty cache records / #cache records {Cache - component caching}
127
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
127
43576
92
4088
343.118110
Counter: formula size (positive hit) {Cache - component caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - component caching}
127
43576
92
4088
343.118110
Counter: #variables (cache record structure) {Cache - component caching}
127
14546
46
742
114.535433
Counter: #variables (positive hit) {Cache - component caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - component caching}
127
14546
46
742
114.535433
Counter: #clauses (cache record structure) {Cache - component caching}
127
11356
32
700
89.417323
Counter: #clauses (positive hit) {Cache - component caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - component caching}
127
11356
32
700
89.417323
Counter: #removed clauses / #clauses {Cache - component caching}
127
15.936225
0.076923
1.000000
0.125482
Counter: #identical mappings / #mappings {Cache - component caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
127
4300
20
470
33.858268
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
127
127
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
