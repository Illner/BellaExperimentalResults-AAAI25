Number: formula size {Formula representation}
1
4573128
Number: #variables {Formula representation}
1
653352
Number: #clauses {Formula representation}
1
653562
Timer (reduced): initialize [ns] {Formula representation}
1
415885419
Timer: compute connected components [ns] {Formula representation}
75
478709575
480
56057769
6382794.333333
Number: circuit size {Circuit}
1
107983744
Number: #nodes {Circuit}
1
44295539
Number: #edges {Circuit}
1
107983744
Number: #variables {Circuit}
1
653352
Timer: copy subcircuit [ns] {Circuit}
113
25512682623
7600
4748663433
225775952.415929
Counter: formula size (copy subcircuit) {Circuit}
113
7684944
48
1213848
68008.353982
Counter: #variables (copy subcircuit) {Circuit}
113
1230996
12
186780
10893.769912
Counter: #clauses (copy subcircuit) {Circuit}
113
1236576
22
186980
10943.150442
Timer (reduced): initialize [ns] {Compiler}
1
394374516
Timer (reduced): compile [ns] {Compiler}
1
132620337467
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
6
Number: #splits {Compiler}
1
96
Number: #decisions {Compiler}
1
40
Counter: ratio of recomputed hypergraph cuts {Compiler}
153
117
0
1
0.764706
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
22
19
0
1
0.863636
Counter: #connected components {Compiler}
75
153
1
7
2.040000
Counter: #monotone residual formulae / #residual formulae {Compiler}
75
0
0
0
0.000000
Counter: monotone residual formula size {Compiler}
0
0
0
0
0.000000
Counter: #pure clauses / #clauses {Compiler}
75
0.000000
0.000000
0.000000
0.000000
Counter: pure residual formula size / residual formula size {Compiler}
75
0.000000
0.000000
0.000000
0.000000
Timer: assign literal [ns] {Compiler}
128
94125033710
240
27052676050
735351825.859375
Timer: unassign literal [ns] {Compiler}
128
251538462
210
36934663
1965144.234375
Timer: get decision variable [ns] {Decision heuristic}
40
108471933
60
24770969
2711798.325000
Counter: #preselected variables {Decision heuristic}
40
3170433
2
653352
79260.825000
Counter: #restricted variables / #preselected variables {Decision heuristic}
0
0.000000
0.000000
0.000000
0.000000
Timer (reduced): initialize [ns] {SAT solver}
1
156681714
Timer (reduced): initial simplification [ns] {SAT solver}
1
910
Timer (reduced): initially implied literals [ns] {SAT solver}
1
380
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
81
760121656
380
98804466
9384217.975309
Timer: unit propagation [ns] {SAT solver}
81
135630
110
28570
1674.444444
Counter: #implied literals {SAT solver}
81
176
0
6
2.172840
Counter: #implied literals / #variables {SAT solver}
81
4.120795
0.000000
1.000000
0.050874
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
83
20531544
5050
5396563
247368.000000
Counter: #implicit implied literals / #variables {SAT solver}
83
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
83
0.000215
0.000000
0.000215
0.000003
Timer: compute cut [ns] {Partitioning hypergraph}
3
414409240
416419
215583520
138136413.333333
Counter: cut size {Partitioning hypergraph}
3
39
6
20
13.000000
Counter: cut size / #variables {Partitioning hypergraph}
3
0.509151
0.002790
0.500000
0.169717
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
3
12776814
19780
8576220
4258938.000000
Counter: #vertices {Partitioning hypergraph}
3
7639
7
4573
2546.333333
Counter: #vertices / #clauses {Partitioning hypergraph}
3
2.188026
0.318182
0.946791
0.729342
Counter: #hyperedges {Partitioning hypergraph}
3
211
6
103
70.333333
Counter: #hyperedges / #variables {Partitioning hypergraph}
3
0.554546
0.022103
0.500000
0.184849
Counter: hypergraph size {Partitioning hypergraph}
3
27902
12
17618
9300.666667
Counter: hypergraph size / formula size {Partitioning hypergraph}
3
1.769589
0.250000
0.776534
0.589863
Timer: create equivalence structure [ns] {Partitioning hypergraph}
3
1508067
2680
1023378
502689.000000
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
153
113
0
1
0.738562
Number: #current entries {Cache - component caching}
1
40
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
153
10759804215
2030
2147800249
70325517.745098
Timer: search cache record structure [ns] {Cache - component caching}
153
11226295
30
1160238
73374.477124
Timer: add cache record structure [ns] {Cache - component caching}
40
6202104
180
1268089
155052.600000
Counter: #empty cache records / #cache records {Cache - component caching}
153
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
153
29347904
8
4573128
191816.366013
Counter: formula size (positive hit) {Cache - component caching}
113
7684944
48
1213848
68008.353982
Counter: formula size (negative hit) {Cache - component caching}
40
21662960
8
4573128
541574.000000
Counter: #variables (cache record structure) {Cache - component caching}
153
4421456
4
653352
28898.405229
Counter: #variables (positive hit) {Cache - component caching}
113
1230996
12
186780
10893.769912
Counter: #variables (negative hit) {Cache - component caching}
40
3190460
4
653352
79761.500000
Counter: #clauses (cache record structure) {Cache - component caching}
153
4432646
4
653562
28971.542484
Counter: #clauses (positive hit) {Cache - component caching}
113
1236576
22
186980
10943.150442
Counter: #clauses (negative hit) {Cache - component caching}
40
3196070
4
653562
79901.750000
Counter: #removed clauses / #clauses {Cache - component caching}
153
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
113
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
40
25290
30
4490
632.250000
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
40
40
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
