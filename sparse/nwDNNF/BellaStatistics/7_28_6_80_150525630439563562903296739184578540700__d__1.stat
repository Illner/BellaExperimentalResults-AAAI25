Number: formula size {Formula representation}
1
9145920
Number: #variables {Formula representation}
1
1306620
Number: #clauses {Formula representation}
1
1306970
Timer (reduced): initialize [ns] {Formula representation}
1
938496295
Timer: compute connected components [ns] {Formula representation}
85
1436369866
650
172035808
16898469.011765
Number: circuit size {Circuit}
1
291078736
Number: #nodes {Circuit}
1
118157339
Number: #edges {Circuit}
1
291078736
Number: #variables {Circuit}
1
1306620
Timer: copy subcircuit [ns] {Circuit}
244
118816087627
9630
38921337250
486951178.799180
Counter: formula size (copy subcircuit) {Circuit}
244
19365067
48
2987280
79365.028689
Counter: #variables (copy subcircuit) {Circuit}
244
3052778
12
451248
12511.385246
Counter: #clauses (copy subcircuit) {Circuit}
244
3064648
22
451588
12560.032787
Timer (reduced): initialize [ns] {Compiler}
1
1033443300
Timer (reduced): compile [ns] {Compiler}
1
645926062359
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
6
Number: #splits {Compiler}
1
228
Number: #decisions {Compiler}
1
45
Counter: ratio of recomputed hypergraph cuts {Compiler}
289
259
0
1
0.896194
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
28
24
0
1
0.857143
Counter: #connected components {Compiler}
85
289
1
18
3.400000
Counter: #monotone residual formulae / #residual formulae {Compiler}
85
0
0
0
0.000000
Counter: monotone residual formula size {Compiler}
0
0
0
0
0.000000
Counter: #pure clauses / #clauses {Compiler}
85
0.000000
0.000000
0.000000
0.000000
Counter: pure residual formula size / residual formula size {Compiler}
85
0.000000
0.000000
0.000000
0.000000
Timer: assign literal [ns] {Compiler}
144
470666055834
280
167456297852
3268514276.625000
Timer: unassign literal [ns] {Compiler}
144
2366064513
230
740921880
16431003.562500
Timer: get decision variable [ns] {Decision heuristic}
45
404384006
60
79742699
8986311.244444
Counter: #preselected variables {Decision heuristic}
45
6953775
2
1306620
154528.333333
Counter: #restricted variables / #preselected variables {Decision heuristic}
0
0.000000
0.000000
0.000000
0.000000
Timer (reduced): initialize [ns] {SAT solver}
1
290878070
Timer (reduced): initial simplification [ns] {SAT solver}
1
1350
Timer (reduced): initially implied literals [ns] {SAT solver}
1
900
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
91
3211768936
490
367498831
35294164.131868
Timer: unit propagation [ns] {SAT solver}
91
280911
140
31490
3086.934066
Counter: #implied literals {SAT solver}
91
198
0
6
2.175824
Counter: #implied literals / #variables {SAT solver}
91
4.011788
0.000000
1.000000
0.044086
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
215
23777779
5510
6059585
110594.320930
Counter: #implicit implied literals / #variables {SAT solver}
215
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
215
0.000000
0.000000
0.000000
0.000000
Timer: compute cut [ns] {Partitioning hypergraph}
4
805973420
517301
428086585
201493355.000000
Counter: cut size {Partitioning hypergraph}
4
43
6
14
10.750000
Counter: cut size / #variables {Partitioning hypergraph}
4
0.511833
0.003211
0.500000
0.127958
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
4
14381454
22670
6682666
3595363.500000
Counter: #vertices {Partitioning hypergraph}
4
9431
7
4209
2357.750000
Counter: #vertices / #clauses {Partitioning hypergraph}
4
2.937473
0.318182
0.903801
0.734368
Counter: #hyperedges {Partitioning hypergraph}
4
523
6
182
130.750000
Counter: #hyperedges / #variables {Partitioning hypergraph}
4
0.668318
0.041743
0.500000
0.167080
Counter: hypergraph size {Partitioning hypergraph}
4
28850
12
14176
7212.500000
Counter: hypergraph size / formula size {Partitioning hypergraph}
4
2.344833
0.250000
0.736416
0.586208
Timer: create equivalence structure [ns] {Partitioning hypergraph}
4
1976705
3310
908322
494176.250000
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
289
244
0
1
0.844291
Number: #current entries {Cache - component caching}
1
45
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
289
47537068943
2540
7588757144
164488127.830450
Timer: search cache record structure [ns] {Cache - component caching}
289
33664821
40
3923200
116487.269896
Timer: add cache record structure [ns] {Cache - component caching}
45
164302855
310
115755633
3651174.555556
Counter: #empty cache records / #cache records {Cache - component caching}
289
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
289
66733136
8
9145920
230910.505190
Counter: formula size (positive hit) {Cache - component caching}
244
19365067
48
2987280
79365.028689
Counter: formula size (negative hit) {Cache - component caching}
45
47368069
8
9145920
1052623.755556
Counter: #variables (cache record structure) {Cache - component caching}
289
10035244
4
1306620
34724.027682
Counter: #variables (positive hit) {Cache - component caching}
244
3052778
12
451248
12511.385246
Counter: #variables (negative hit) {Cache - component caching}
45
6982466
4
1306620
155165.911111
Counter: #clauses (cache record structure) {Cache - component caching}
289
10058904
4
1306970
34805.896194
Counter: #clauses (positive hit) {Cache - component caching}
244
3064648
22
451588
12560.032787
Counter: #clauses (negative hit) {Cache - component caching}
45
6994256
4
1306970
155427.911111
Counter: #removed clauses / #clauses {Cache - component caching}
289
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
244
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
45
21800
30
1350
484.444444
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
45
45
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
