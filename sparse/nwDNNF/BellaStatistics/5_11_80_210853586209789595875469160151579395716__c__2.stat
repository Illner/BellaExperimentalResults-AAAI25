Number: formula size {Formula representation}
1
4832245
Number: #variables {Formula representation}
1
805420
Number: #clauses {Formula representation}
1
805590
Timer (reduced): initialize [ns] {Formula representation}
1
451985722
Timer: compute connected components [ns] {Formula representation}
101
1906733298
6160
251765821
18878547.504950
Number: circuit size {Circuit}
1
9661581
Number: #nodes {Circuit}
1
3429249
Number: #edges {Circuit}
1
9661581
Number: #variables {Circuit}
1
805420
Timer: copy subcircuit [ns] {Circuit}
40
1394220815
222639
172232123
34855520.375000
Counter: formula size (copy subcircuit) {Circuit}
40
4747820
1232
366597
118695.500000
Counter: #variables (copy subcircuit) {Circuit}
40
969760
418
73348
24244.000000
Counter: #clauses (copy subcircuit) {Circuit}
40
972280
430
73473
24307.000000
Timer (reduced): initialize [ns] {Compiler}
1
441778201
Timer (reduced): compile [ns] {Compiler}
1
82004130112
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
0
Number: #decisions {Compiler}
1
50
Counter: ratio of recomputed hypergraph cuts {Compiler}
90
64
0
1
0.711111
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
36
29
0
1
0.805556
Counter: #connected components {Compiler}
101
90
0
1
0.891089
Counter: #monotone residual formulae / #residual formulae {Compiler}
101
11
0
1
0.108911
Counter: monotone residual formula size {Compiler}
11
726
66
66
66.000000
Counter: #pure clauses / #clauses {Compiler}
101
11.535398
0.000000
1.000000
0.114212
Counter: pure residual formula size / residual formula size {Compiler}
101
11.379310
0.000000
1.000000
0.112666
Timer: assign literal [ns] {Compiler}
155
61166299971
690
19440986708
394621290.135484
Timer: unassign literal [ns] {Compiler}
155
253834271
350
35945815
1637640.458065
Timer: get decision variable [ns] {Decision heuristic}
50
90010847
60
15095836
1800216.940000
Counter: #preselected variables {Decision heuristic}
50
5373578
1
805420
107471.560000
Counter: #restricted variables / #preselected variables {Decision heuristic}
29
0.031620
0.000068
0.003836
0.001090
Timer (reduced): initialize [ns] {SAT solver}
1
180475298
Timer (reduced): initial simplification [ns] {SAT solver}
1
880
Timer (reduced): initially implied literals [ns] {SAT solver}
1
590
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
101
1059144021
12390
102904407
10486574.465347
Timer: unit propagation [ns] {SAT solver}
101
148690
190
18550
1472.178218
Counter: #implied literals {SAT solver}
101
335
0
11
3.316832
Counter: #implied literals / #variables {SAT solver}
101
0.316953
0.000000
0.029412
0.003138
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
15
20773923
71999
2733457
1384928.200000
Counter: #implicit implied literals / #variables {SAT solver}
15
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
15
0.009916
0.000000
0.009709
0.000661
Timer: compute cut [ns] {Partitioning hypergraph}
2
10955715
5382473
5573242
5477857.500000
Counter: cut size {Partitioning hypergraph}
2
32
16
16
16.000000
Counter: cut size / #variables {Partitioning hypergraph}
2
0.008440
0.003318
0.005122
0.004220
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
7
11111846
13680
9075866
1587406.571429
Counter: #vertices {Partitioning hypergraph}
7
246
0
123
35.142857
Counter: #vertices / #clauses {Partitioning hypergraph}
7
0.064261
0.000000
0.038936
0.009180
Counter: #hyperedges {Partitioning hypergraph}
7
45
0
23
6.428571
Counter: #hyperedges / #variables {Partitioning hypergraph}
7
0.011812
0.000000
0.007042
0.001687
Counter: hypergraph size {Partitioning hypergraph}
7
649
0
385
92.714286
Counter: hypergraph size / formula size {Partitioning hypergraph}
7
0.039593
0.000000
0.021958
0.005656
Timer: create equivalence structure [ns] {Partitioning hypergraph}
7
661197
7660
423908
94456.714286
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
90
40
0
1
0.444444
Number: #current entries {Cache - component caching}
1
50
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
90
15020378469
62570
2537697314
166893094.100000
Timer: search cache record structure [ns] {Cache - component caching}
90
11592790
130
1179495
128808.777778
Timer: add cache record structure [ns] {Cache - component caching}
50
10897184
240
1511853
217943.680000
Counter: #empty cache records / #cache records {Cache - component caching}
90
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
90
36435065
206
4832245
404834.055556
Counter: formula size (positive hit) {Cache - component caching}
40
4747820
1232
366597
118695.500000
Counter: formula size (negative hit) {Cache - component caching}
50
31687245
206
4832245
633744.900000
Counter: #variables (cache record structure) {Cache - component caching}
90
6369870
103
805420
70776.333333
Counter: #variables (positive hit) {Cache - component caching}
40
969760
418
73348
24244.000000
Counter: #variables (negative hit) {Cache - component caching}
50
5400110
103
805420
108002.200000
Counter: #clauses (cache record structure) {Cache - component caching}
90
6375185
70
805590
70835.388889
Counter: #clauses (positive hit) {Cache - component caching}
40
972280
430
73473
24307.000000
Counter: #clauses (negative hit) {Cache - component caching}
50
5402905
70
805590
108058.100000
Counter: #removed clauses / #clauses {Cache - component caching}
90
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
40
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
50
15990
30
1280
319.800000
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
50
50
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
