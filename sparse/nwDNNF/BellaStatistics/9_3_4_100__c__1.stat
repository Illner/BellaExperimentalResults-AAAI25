Number: formula size {Formula representation}
1
34603224
Number: #variables {Formula representation}
1
3145812
Number: #clauses {Formula representation}
1
3145827
Timer (reduced): initialize [ns] {Formula representation}
1
2816635480
Timer: compute connected components [ns] {Formula representation}
55
4523650718
2300
1184257663
82248194.872727
Number: circuit size {Circuit}
1
12670281
Number: #nodes {Circuit}
1
11184975
Number: #edges {Circuit}
1
12670281
Number: #variables {Circuit}
1
3145812
Timer: copy subcircuit [ns] {Circuit}
24
3437531694
46680
896249391
143230487.250000
Counter: formula size (copy subcircuit) {Circuit}
24
30411216
168
7864512
1267134.000000
Counter: #variables (copy subcircuit) {Circuit}
24
3146832
68
786508
131118.000000
Counter: #clauses (copy subcircuit) {Circuit}
24
3146868
59
786520
131119.500000
Timer (reduced): initialize [ns] {Compiler}
1
1948006088
Timer (reduced): compile [ns] {Compiler}
1
6855096657309
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
0
Number: #decisions {Compiler}
1
27
Counter: ratio of recomputed hypergraph cuts {Compiler}
51
31
0
1
0.607843
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
16
15
0
1
0.937500
Counter: #connected components {Compiler}
55
51
0
1
0.927273
Counter: #monotone residual formulae / #residual formulae {Compiler}
55
4
0
1
0.072727
Counter: monotone residual formula size {Compiler}
4
96
24
24
24.000000
Counter: #pure clauses / #clauses {Compiler}
55
4.000000
0.000000
1.000000
0.072727
Counter: pure residual formula size / residual formula size {Compiler}
55
4.000000
0.000000
1.000000
0.072727
Timer: assign literal [ns] {Compiler}
90
6796390965865
560
2535453465929
75515455176.277778
Timer: unassign literal [ns] {Compiler}
90
635372802
300
153672851
7059697.800000
Timer: get decision variable [ns] {Decision heuristic}
27
263383023
100
89438240
9754926.777778
Counter: #preselected variables {Decision heuristic}
27
9429048
1
3145812
349224.000000
Counter: #restricted variables / #preselected variables {Decision heuristic}
15
0.009389
0.000011
0.002907
0.000626
Timer (reduced): initialize [ns] {SAT solver}
1
751288956
Timer (reduced): initial simplification [ns] {SAT solver}
1
930
Timer (reduced): initially implied literals [ns] {SAT solver}
1
640
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
55
2713450000
356538
591313396
49335454.545455
Timer: unit propagation [ns] {SAT solver}
55
110760
180
19240
2013.818182
Counter: #implied literals {SAT solver}
55
99
0
4
1.800000
Counter: #implied literals / #variables {SAT solver}
55
0.358107
0.000000
0.076923
0.006511
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
4
31942873
7282326
9830485
7985718.250000
Counter: #implicit implied literals / #variables {SAT solver}
4
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
4
0.000000
0.000000
0.000000
0.000000
Timer: compute cut [ns] {Partitioning hypergraph}
1
9818515
9818515
9818515
9818515.000000
Counter: cut size {Partitioning hypergraph}
1
14
14
14
14.000000
Counter: cut size / #variables {Partitioning hypergraph}
1
0.004493
0.004493
0.004493
0.004493
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
1
6442510
6442510
6442510
6442510.000000
Counter: #vertices {Partitioning hypergraph}
1
260
260
260
260.000000
Counter: #vertices / #clauses {Partitioning hypergraph}
1
0.083440
0.083440
0.083440
0.083440
Counter: #hyperedges {Partitioning hypergraph}
1
16
16
16
16.000000
Counter: #hyperedges / #variables {Partitioning hypergraph}
1
0.005135
0.005135
0.005135
0.005135
Counter: hypergraph size {Partitioning hypergraph}
1
1040
1040
1040
1040.000000
Counter: hypergraph size / formula size {Partitioning hypergraph}
1
0.056131
0.056131
0.056131
0.056131
Timer: create equivalence structure [ns] {Partitioning hypergraph}
1
237819
237819
237819
237819.000000
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
51
24
0
1
0.470588
Number: #current entries {Cache - component caching}
1
27
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
51
44020920405
21940
13489157188
863155302.058824
Timer: search cache record structure [ns] {Cache - component caching}
51
42580785
130
7932774
834917.352941
Timer: add cache record structure [ns] {Cache - component caching}
27
23925261
280
7611565
886120.777778
Counter: #empty cache records / #cache records {Cache - component caching}
51
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
51
131077467
80
34603224
2570146.411765
Counter: formula size (positive hit) {Cache - component caching}
24
30411216
168
7864512
1267134.000000
Counter: formula size (negative hit) {Cache - component caching}
27
100666251
80
34603224
3728379.666667
Counter: #variables (cache record structure) {Cache - component caching}
51
12585330
40
3145812
246771.176471
Counter: #variables (positive hit) {Cache - component caching}
24
3146832
68
786508
131118.000000
Counter: #variables (negative hit) {Cache - component caching}
27
9438498
40
3145812
349574.000000
Counter: #clauses (cache record structure) {Cache - component caching}
51
12585402
28
3145827
246772.588235
Counter: #clauses (positive hit) {Cache - component caching}
24
3146868
59
786520
131119.500000
Counter: #clauses (negative hit) {Cache - component caching}
27
9438534
28
3145827
349575.333333
Counter: #removed clauses / #clauses {Cache - component caching}
51
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
24
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
27
6960
30
750
257.777778
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
27
27
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
