Number: formula size {Formula representation}
1
375175
Number: #variables {Formula representation}
1
62650
Number: #clauses {Formula representation}
1
62580
Timer (reduced): initialize [ns] {Formula representation}
1
46006762
Timer: compute connected components [ns] {Formula representation}
41
101076053
13890
21601733
2465269.585366
Number: circuit size {Circuit}
1
402175
Number: #nodes {Circuit}
1
208734
Number: #edges {Circuit}
1
402175
Number: #variables {Circuit}
1
62650
Timer: copy subcircuit [ns] {Circuit}
16
99363176
264518
21863671
6210198.500000
Counter: formula size (copy subcircuit) {Circuit}
16
409200
1085
78265
25575.000000
Counter: #variables (copy subcircuit) {Circuit}
16
84480
430
15140
5280.000000
Counter: #clauses (copy subcircuit) {Circuit}
16
83240
366
15064
5202.500000
Timer (reduced): initialize [ns] {Compiler}
1
62636791
Timer (reduced): compile [ns] {Compiler}
1
1127325599
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
0
Number: #decisions {Compiler}
1
20
Counter: ratio of recomputed hypergraph cuts {Compiler}
36
18
0
1
0.500000
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
10
8
0
1
0.800000
Counter: #connected components {Compiler}
41
36
0
1
0.878049
Counter: #monotone residual formulae / #residual formulae {Compiler}
41
5
0
1
0.121951
Counter: monotone residual formula size {Compiler}
5
700
140
140
140.000000
Counter: #pure clauses / #clauses {Compiler}
41
5.378788
0.000000
1.000000
0.131190
Counter: pure residual formula size / residual formula size {Compiler}
41
5.262009
0.000000
1.000000
0.128342
Timer: assign literal [ns] {Compiler}
65
318738894
1210
124425638
4903675.292308
Timer: unassign literal [ns] {Compiler}
65
12872843
300
1962012
198043.738462
Timer: get decision variable [ns] {Decision heuristic}
20
2908943
70
1225429
145447.150000
Counter: #preselected variables {Decision heuristic}
20
223453
1
62650
11172.650000
Counter: #restricted variables / #preselected variables {Decision heuristic}
8
0.009470
0.000399
0.002469
0.001184
Timer (reduced): initialize [ns] {SAT solver}
1
23749465
Timer (reduced): initial simplification [ns] {SAT solver}
1
1650
Timer (reduced): initially implied literals [ns] {SAT solver}
1
1240
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
41
34722401
15490
7693290
846887.829268
Timer: unit propagation [ns] {SAT solver}
41
27810
180
6090
678.292683
Counter: #implied literals {SAT solver}
41
80
0
5
1.951220
Counter: #implied literals / #variables {SAT solver}
41
0.081718
0.000000
0.014085
0.001993
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
6
10938801
123109
2219860
1823133.500000
Counter: #implicit implied literals / #variables {SAT solver}
6
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
6
0.004673
0.000000
0.004673
0.000779
Timer: compute cut [ns] {Partitioning hypergraph}
1
5120904
5120904
5120904
5120904.000000
Counter: cut size {Partitioning hypergraph}
1
11
11
11
11.000000
Counter: cut size / #variables {Partitioning hypergraph}
1
0.002663
0.002663
0.002663
0.002663
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
2
3751685
33369
3718316
1875842.500000
Counter: #vertices {Partitioning hypergraph}
2
128
0
128
64.000000
Counter: #vertices / #clauses {Partitioning hypergraph}
2
0.031621
0.000000
0.031621
0.015810
Counter: #hyperedges {Partitioning hypergraph}
2
15
0
15
7.500000
Counter: #hyperedges / #variables {Partitioning hypergraph}
2
0.003632
0.000000
0.003632
0.001816
Counter: hypergraph size {Partitioning hypergraph}
2
390
0
390
195.000000
Counter: hypergraph size / formula size {Partitioning hypergraph}
2
0.021691
0.000000
0.021691
0.010845
Timer: create equivalence structure [ns] {Partitioning hypergraph}
2
437956
17030
420926
218978.000000
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
36
16
0
1
0.444444
Number: #current entries {Cache - component caching}
1
20
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
36
485634183
136729
103897535
13489838.416667
Timer: search cache record structure [ns] {Cache - component caching}
36
468254
350
161509
13007.055556
Timer: add cache record structure [ns] {Cache - component caching}
20
2846334
510
1133640
142316.700000
Counter: #empty cache records / #cache records {Cache - component caching}
36
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
36
1780010
428
375175
49444.722222
Counter: formula size (positive hit) {Cache - component caching}
16
409200
1085
78265
25575.000000
Counter: formula size (negative hit) {Cache - component caching}
20
1370810
428
375175
68540.500000
Counter: #variables (cache record structure) {Cache - component caching}
36
325900
214
62650
9052.777778
Counter: #variables (positive hit) {Cache - component caching}
16
84480
430
15140
5280.000000
Counter: #variables (negative hit) {Cache - component caching}
20
241420
214
62650
12071.000000
Counter: #clauses (cache record structure) {Cache - component caching}
36
323070
144
62580
8974.166667
Counter: #clauses (positive hit) {Cache - component caching}
16
83240
366
15064
5202.500000
Counter: #clauses (negative hit) {Cache - component caching}
20
239830
144
62580
11991.500000
Counter: #removed clauses / #clauses {Cache - component caching}
36
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
16
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
20
5240
30
1880
262.000000
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
20
20
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
