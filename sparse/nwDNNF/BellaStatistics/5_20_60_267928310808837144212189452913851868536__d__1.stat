Number: formula size {Formula representation}
1
4004200
Number: #variables {Formula representation}
1
800300
Number: #clauses {Formula representation}
1
802010
Timer (reduced): initialize [ns] {Formula representation}
1
406659138
Timer: compute connected components [ns] {Formula representation}
227
1251701960
440
55061569
5514105.550661
Number: circuit size {Circuit}
1
219953665
Number: #nodes {Circuit}
1
53073439
Number: #edges {Circuit}
1
219953665
Number: #variables {Circuit}
1
800300
Timer: copy subcircuit [ns] {Circuit}
174
29586649857
32300
2139990415
170038217.568966
Counter: formula size (copy subcircuit) {Circuit}
174
19233120
440
931760
110535.172414
Counter: #variables (copy subcircuit) {Circuit}
174
4021660
40
192260
23112.988506
Counter: #clauses (copy subcircuit) {Circuit}
174
4113145
211
193799
23638.764368
Timer (reduced): initialize [ns] {Compiler}
1
398407334
Timer (reduced): compile [ns] {Compiler}
1
143009578447
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
40
Number: #splits {Compiler}
1
120
Number: #decisions {Compiler}
1
133
Counter: ratio of recomputed hypergraph cuts {Compiler}
307
190
0
1
0.618893
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
59
54
0
1
0.915254
Counter: #connected components {Compiler}
227
307
1
3
1.352423
Counter: #monotone residual formulae / #residual formulae {Compiler}
227
0
0
0
0.000000
Counter: monotone residual formula size {Compiler}
0
0
0
0
0.000000
Counter: #pure clauses / #clauses {Compiler}
227
0.000000
0.000000
0.000000
0.000000
Counter: pure residual formula size / residual formula size {Compiler}
227
0.000000
0.000000
0.000000
0.000000
Timer: assign literal [ns] {Compiler}
406
70364791076
260
12775874484
173312293.290640
Timer: unassign literal [ns] {Compiler}
406
553797444
210
41533487
1364033.113300
Timer: get decision variable [ns] {Decision heuristic}
133
315339001
50
24454124
2370969.932331
Counter: #preselected variables {Decision heuristic}
133
11993815
1
800300
90179.060150
Counter: #restricted variables / #preselected variables {Decision heuristic}
0
0.000000
0.000000
0.000000
0.000000
Timer (reduced): initialize [ns] {SAT solver}
1
149273563
Timer (reduced): initial simplification [ns] {SAT solver}
1
810
Timer (reduced): initially implied literals [ns] {SAT solver}
1
470
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
267
2457063040
470
104340524
9202483.295880
Timer: unit propagation [ns] {SAT solver}
267
317257
120
21220
1188.228464
Counter: #implied literals {SAT solver}
267
1477
0
21
5.531835
Counter: #implied literals / #variables {SAT solver}
267
20.804450
0.000000
1.000000
0.077919
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
98
34903143
26080
3258834
356154.520408
Counter: #implicit implied literals / #variables {SAT solver}
98
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
98
0.000000
0.000000
0.000000
0.000000
Timer: compute cut [ns] {Partitioning hypergraph}
5
361446420
614375
312546693
72289284.000000
Counter: cut size {Partitioning hypergraph}
5
94
11
29
18.800000
Counter: cut size / #variables {Partitioning hypergraph}
5
0.916112
0.002812
0.500000
0.183222
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
5
12011972
43020
8133484
2402394.400000
Counter: #vertices {Partitioning hypergraph}
5
5822
21
4132
1164.400000
Counter: #vertices / #clauses {Partitioning hypergraph}
5
2.293187
0.099526
0.755669
0.458637
Counter: #hyperedges {Partitioning hypergraph}
5
295
11
144
59.000000
Counter: #hyperedges / #variables {Partitioning hypergraph}
5
1.015568
0.033739
0.500000
0.203114
Counter: hypergraph size {Partitioning hypergraph}
5
14981
33
11548
2996.200000
Counter: hypergraph size / formula size {Partitioning hypergraph}
5
1.819102
0.090909
0.629525
0.363820
Timer: create equivalence structure [ns] {Partitioning hypergraph}
5
1081912
6440
775894
216382.400000
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
307
174
0
1
0.566775
Number: #current entries {Cache - component caching}
1
133
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
307
37652860258
3330
3249347356
122647753.283388
Timer: search cache record structure [ns] {Cache - component caching}
307
35446151
30
1834866
115459.775244
Timer: add cache record structure [ns] {Cache - component caching}
133
20450673
110
1386198
153764.458647
Counter: #empty cache records / #cache records {Cache - component caching}
307
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
307
78864829
8
4004200
256888.693811
Counter: formula size (positive hit) {Cache - component caching}
174
19233120
440
931760
110535.172414
Counter: formula size (negative hit) {Cache - component caching}
133
59631709
8
4004200
448358.714286
Counter: #variables (cache record structure) {Cache - component caching}
307
16045126
4
800300
52264.254072
Counter: #variables (positive hit) {Cache - component caching}
174
4021660
40
192260
23112.988506
Counter: #variables (negative hit) {Cache - component caching}
133
12023466
4
800300
90402.000000
Counter: #clauses (cache record structure) {Cache - component caching}
307
16235563
4
802010
52884.570033
Counter: #clauses (positive hit) {Cache - component caching}
174
4113145
211
193799
23638.764368
Counter: #clauses (negative hit) {Cache - component caching}
133
12122418
4
802010
91146.000000
Counter: #removed clauses / #clauses {Cache - component caching}
307
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
174
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
133
29380
20
1030
220.902256
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
133
133
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
