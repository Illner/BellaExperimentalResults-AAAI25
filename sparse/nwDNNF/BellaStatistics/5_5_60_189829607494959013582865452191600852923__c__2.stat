Number: formula size {Formula representation}
1
15800
Number: #variables {Formula representation}
1
3200
Number: #clauses {Formula representation}
1
3205
Timer (reduced): initialize [ns] {Formula representation}
1
2511748
Timer: compute connected components [ns] {Formula representation}
41
8054445
2140
1020319
196449.878049
Number: circuit size {Circuit}
1
36050
Number: #nodes {Circuit}
1
16959
Number: #edges {Circuit}
1
36050
Number: #variables {Circuit}
1
3200
Timer: copy subcircuit [ns] {Circuit}
16
4822536
24560
1040079
301408.500000
Counter: formula size (copy subcircuit) {Circuit}
16
29860
185
5265
1866.250000
Counter: #variables (copy subcircuit) {Circuit}
16
7360
70
1190
460.000000
Counter: #clauses (copy subcircuit) {Circuit}
16
7276
66
1189
454.750000
Timer (reduced): initialize [ns] {Compiler}
1
4351226
Timer (reduced): compile [ns] {Compiler}
1
79999232
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
10
Number: #decisions {Compiler}
1
20
Counter: ratio of recomputed hypergraph cuts {Compiler}
36
12
0
1
0.333333
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
8
0
0
0
0.000000
Counter: #connected components {Compiler}
41
36
0
2
0.878049
Counter: #monotone residual formulae / #residual formulae {Compiler}
41
10
0
1
0.243902
Counter: monotone residual formula size {Compiler}
10
250
20
30
25.000000
Counter: #pure clauses / #clauses {Compiler}
41
10.000000
0.000000
1.000000
0.243902
Counter: pure residual formula size / residual formula size {Compiler}
41
10.000000
0.000000
1.000000
0.243902
Timer: assign literal [ns] {Compiler}
65
2203450
400
581650
33899.230769
Timer: unassign literal [ns] {Compiler}
65
530420
300
95780
8160.307692
Timer: get decision variable [ns] {Decision heuristic}
20
5430
50
1590
271.500000
Counter: #preselected variables {Decision heuristic}
20
136
1
16
6.800000
Counter: #restricted variables / #preselected variables {Decision heuristic}
0
0.000000
0.000000
0.000000
0.000000
Timer (reduced): initialize [ns] {SAT solver}
1
834039
Timer (reduced): initial simplification [ns] {SAT solver}
1
360
Timer (reduced): initially implied literals [ns] {SAT solver}
1
140
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
41
1562018
2060
160870
38098.000000
Timer: unit propagation [ns] {SAT solver}
41
17810
100
5370
434.390244
Counter: #implied literals {SAT solver}
41
80
0
5
1.951220
Counter: #implied literals / #variables {SAT solver}
41
0.685950
0.000000
0.090909
0.016730
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
12
2034787
13990
1729999
169565.583333
Counter: #implicit implied literals / #variables {SAT solver}
12
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
12
0.049820
0.000000
0.029412
0.004152
Timer: compute cut [ns] {Partitioning hypergraph}
1
23658381
23658381
23658381
23658381.000000
Counter: cut size {Partitioning hypergraph}
1
16
16
16
16.000000
Counter: cut size / #variables {Partitioning hypergraph}
1
0.005000
0.005000
0.005000
0.005000
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
8
5472235
6130
5390105
684029.375000
Counter: #vertices {Partitioning hypergraph}
8
630
0
630
78.750000
Counter: #vertices / #clauses {Partitioning hypergraph}
8
0.196568
0.000000
0.196568
0.024571
Counter: #hyperedges {Partitioning hypergraph}
8
25
0
25
3.125000
Counter: #hyperedges / #variables {Partitioning hypergraph}
8
0.007812
0.000000
0.007812
0.000977
Counter: hypergraph size {Partitioning hypergraph}
8
1900
0
1900
237.500000
Counter: hypergraph size / formula size {Partitioning hypergraph}
8
0.120253
0.000000
0.120253
0.015032
Timer: create equivalence structure [ns] {Partitioning hypergraph}
8
241210
2630
206080
30151.250000
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
36
16
0
1
0.444444
Number: #current entries {Cache - component caching}
1
20
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
36
27904222
22130
4888365
775117.277778
Timer: search cache record structure [ns] {Cache - component caching}
36
40010
130
5160
1111.388889
Timer: add cache record structure [ns] {Cache - component caching}
20
24730
170
5750
1236.500000
Counter: #empty cache records / #cache records {Cache - component caching}
36
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
36
100430
68
15800
2789.722222
Counter: formula size (positive hit) {Cache - component caching}
16
29860
185
5265
1866.250000
Counter: formula size (negative hit) {Cache - component caching}
20
70570
68
15800
3528.500000
Counter: #variables (cache record structure) {Cache - component caching}
36
22810
34
3200
633.611111
Counter: #variables (positive hit) {Cache - component caching}
16
7360
70
1190
460.000000
Counter: #variables (negative hit) {Cache - component caching}
20
15450
34
3200
772.500000
Counter: #clauses (cache record structure) {Cache - component caching}
36
22592
24
3205
627.555556
Counter: #clauses (positive hit) {Cache - component caching}
16
7276
66
1189
454.750000
Counter: #clauses (negative hit) {Cache - component caching}
20
15316
24
3205
765.800000
Counter: #removed clauses / #clauses {Cache - component caching}
36
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
16
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
20
1290
30
250
64.500000
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
20
20
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
