Number: formula size {Formula representation}
1
653520
Number: #variables {Formula representation}
1
109032
Number: #clauses {Formula representation}
1
109018
Timer (reduced): initialize [ns] {Formula representation}
1
69144714
Timer: compute connected components [ns] {Formula representation}
559871
18732722303
2720
36671283
33458.997346
Number: circuit size {Circuit}
1
10729717
Number: #nodes {Circuit}
1
1851348
Number: #edges {Circuit}
1
10729717
Number: #variables {Circuit}
1
109032
Timer: copy subcircuit [ns] {Circuit}
0
0
0
0
0.000000
Counter: formula size (copy subcircuit) {Circuit}
0
0
0
0
0.000000
Counter: #variables (copy subcircuit) {Circuit}
0
0
0
0
0.000000
Counter: #clauses (copy subcircuit) {Circuit}
0
0
0
0
0.000000
Timer (reduced): initialize [ns] {Compiler}
1
73033080
Timer (reduced): compile [ns] {Compiler}
1
74996429116
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
0
Number: #decisions {Compiler}
1
279935
Counter: ratio of recomputed hypergraph cuts {Compiler}
279935
213193
0
1
0.761580
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
213193
179
0
1
0.000840
Counter: #connected components {Compiler}
559871
279935
0
1
0.499999
Counter: #monotone residual formulae / #residual formulae {Compiler}
559871
279936
0
1
0.500001
Counter: monotone residual formula size {Compiler}
279936
13171296
36
108
47.051097
Counter: #pure clauses / #clauses {Compiler}
559871
288632.582867
0.000000
1.000000
0.515534
Counter: pure residual formula size / residual formula size {Compiler}
559871
286291.457381
0.000000
1.000000
0.511353
Timer: assign literal [ns] {Compiler}
902105
6403563362
320
672028118
7098.467875
Timer: unassign literal [ns] {Compiler}
902105
2073267307
140
5586816
2298.254978
Timer: get decision variable [ns] {Decision heuristic}
279935
42794462
39
773891
152.872853
Counter: #preselected variables {Decision heuristic}
279935
3253310
1
109032
11.621662
Counter: #restricted variables / #preselected variables {Decision heuristic}
179
0.589858
0.000385
0.004523
0.003295
Timer (reduced): initialize [ns] {SAT solver}
1
28179950
Timer (reduced): initial simplification [ns] {SAT solver}
1
590
Timer (reduced): initially implied literals [ns] {SAT solver}
1
370
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
559871
6239972131
1880
13265879
11145.374793
Timer: unit propagation [ns] {SAT solver}
559871
144565413
109
26780
258.212004
Counter: #implied literals {SAT solver}
559871
1213307
0
6
2.167119
Counter: #implied literals / #variables {SAT solver}
559871
11197.015055
0.000000
0.052632
0.019999
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
213014
12386356770
19460
2552473
58148.087778
Counter: #implicit implied literals / #variables {SAT solver}
213014
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
213014
782.945531
0.000000
0.017241
0.003676
Timer: compute cut [ns] {Partitioning hypergraph}
7200
793393785
26930
741202
110193.581250
Counter: cut size {Partitioning hypergraph}
7200
56344
2
21
7.825556
Counter: cut size / #variables {Partitioning hypergraph}
7200
99.038712
0.004216
0.023148
0.013755
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
213014
7046580085
6430
8744025
33080.361314
Counter: #vertices {Partitioning hypergraph}
213014
351080
0
328
1.648155
Counter: #vertices / #clauses {Partitioning hypergraph}
213014
520.478945
0.000000
0.094470
0.002443
Counter: #hyperedges {Partitioning hypergraph}
213014
85934
0
25
0.403419
Counter: #hyperedges / #variables {Partitioning hypergraph}
213014
155.705129
0.000000
0.028226
0.000731
Counter: hypergraph size {Partitioning hypergraph}
213014
800258
0
996
3.756833
Counter: hypergraph size / formula size {Partitioning hypergraph}
213014
338.100347
0.000000
0.059677
0.001587
Timer: create equivalence structure [ns] {Partitioning hypergraph}
213014
1964138762
3220
550664
9220.702686
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
279935
0
0
0
0.000000
Number: #current entries {Cache - component caching}
1
279935
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
279935
10911701656
6810
7107980
38979.411849
Timer: search cache record structure [ns] {Cache - component caching}
279935
100818956
90
150698
360.151307
Timer: add cache record structure [ns] {Cache - component caching}
279935
345183799
110
202324729
1233.085534
Counter: #empty cache records / #cache records {Cache - component caching}
279935
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
279935
163586120
116
653520
584.371801
Counter: formula size (positive hit) {Cache - component caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - component caching}
279935
163586120
116
653520
584.371801
Counter: #variables (cache record structure) {Cache - component caching}
279935
56040268
58
109032
200.190287
Counter: #variables (positive hit) {Cache - component caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - component caching}
279935
56040268
58
109032
200.190287
Counter: #clauses (cache record structure) {Cache - component caching}
279935
49525698
40
109018
176.918563
Counter: #clauses (positive hit) {Cache - component caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - component caching}
279935
49525698
40
109018
176.918563
Counter: #removed clauses / #clauses {Cache - component caching}
279935
28703.791727
0.011442
1.000000
0.102537
Counter: #identical mappings / #mappings {Cache - component caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
279935
13330327
20
19970
47.619365
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
279935
279935
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
