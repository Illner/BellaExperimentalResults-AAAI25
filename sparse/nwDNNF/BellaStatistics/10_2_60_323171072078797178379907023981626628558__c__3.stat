Number: formula size {Formula representation}
1
10320
Number: #variables {Formula representation}
1
1340
Number: #clauses {Formula representation}
1
1320
Timer (reduced): initialize [ns] {Formula representation}
1
2089024
Timer: compute connected components [ns] {Formula representation}
21
2366732
1830
647868
112701.523810
Number: circuit size {Circuit}
1
29554
Number: #nodes {Circuit}
1
13043
Number: #edges {Circuit}
1
29554
Number: #variables {Circuit}
1
1340
Timer: copy subcircuit [ns] {Circuit}
9
4393919
12000
2038475
488213.222222
Counter: formula size (copy subcircuit) {Circuit}
9
13460
56
5704
1495.555556
Counter: #variables (copy subcircuit) {Circuit}
9
2404
28
824
267.111111
Counter: #clauses (copy subcircuit) {Circuit}
9
2248
20
804
249.777778
Timer (reduced): initialize [ns] {Compiler}
1
4457509
Timer (reduced): compile [ns] {Compiler}
1
22217301
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
0
Number: #decisions {Compiler}
1
10
Counter: ratio of recomputed hypergraph cuts {Compiler}
19
5
0
1
0.263158
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
3
0
0
0
0.000000
Counter: #connected components {Compiler}
21
19
0
1
0.904762
Counter: #monotone residual formulae / #residual formulae {Compiler}
21
2
0
1
0.095238
Counter: monotone residual formula size {Compiler}
2
32
16
16
16.000000
Counter: #pure clauses / #clauses {Compiler}
21
2.605263
0.000000
1.000000
0.124060
Counter: pure residual formula size / residual formula size {Compiler}
21
2.410535
0.000000
1.000000
0.114787
Timer: assign literal [ns] {Compiler}
40
1046277
530
341269
26156.925000
Timer: unassign literal [ns] {Compiler}
40
161310
240
29250
4032.750000
Timer: get decision variable [ns] {Decision heuristic}
10
1650
70
680
165.000000
Counter: #preselected variables {Decision heuristic}
10
39
1
8
3.900000
Counter: #restricted variables / #preselected variables {Decision heuristic}
0
0.000000
0.000000
0.000000
0.000000
Timer (reduced): initialize [ns] {SAT solver}
1
653458
Timer (reduced): initial simplification [ns] {SAT solver}
1
500
Timer (reduced): initially implied literals [ns] {SAT solver}
1
260
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
21
466019
1630
97850
22191.380952
Timer: unit propagation [ns] {SAT solver}
21
7180
130
870
341.904762
Counter: #implied literals {SAT solver}
21
40
0
2
1.904762
Counter: #implied literals / #variables {SAT solver}
21
0.446450
0.000000
0.111111
0.021260
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
5
920058
13590
834328
184011.600000
Counter: #implicit implied literals / #variables {SAT solver}
5
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
5
0.150320
0.007463
0.035714
0.030064
Timer: compute cut [ns] {Partitioning hypergraph}
1
1698376
1698376
1698376
1698376.000000
Counter: cut size {Partitioning hypergraph}
1
8
8
8
8.000000
Counter: cut size / #variables {Partitioning hypergraph}
1
0.005970
0.005970
0.005970
0.005970
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
3
2599693
4860
2579333
866564.333333
Counter: #vertices {Partitioning hypergraph}
3
10
0
10
3.333333
Counter: #vertices / #clauses {Partitioning hypergraph}
3
0.007576
0.000000
0.007576
0.002525
Counter: #hyperedges {Partitioning hypergraph}
3
10
0
10
3.333333
Counter: #hyperedges / #variables {Partitioning hypergraph}
3
0.007463
0.000000
0.007463
0.002488
Counter: hypergraph size {Partitioning hypergraph}
3
60
0
60
20.000000
Counter: hypergraph size / formula size {Partitioning hypergraph}
3
0.005814
0.000000
0.005814
0.001938
Timer: create equivalence structure [ns] {Partitioning hypergraph}
3
118900
2410
110360
39633.333333
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
19
9
0
1
0.473684
Number: #current entries {Cache - component caching}
1
10
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
19
7370260
17360
1945995
387908.421053
Timer: search cache record structure [ns] {Cache - component caching}
19
18810
70
5160
990.000000
Timer: add cache record structure [ns] {Cache - component caching}
10
7050
150
1960
705.000000
Counter: #empty cache records / #cache records {Cache - component caching}
19
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
19
37240
56
10320
1960.000000
Counter: formula size (positive hit) {Cache - component caching}
9
13460
56
5704
1495.555556
Counter: formula size (negative hit) {Cache - component caching}
10
23780
56
10320
2378.000000
Counter: #variables (cache record structure) {Cache - component caching}
19
6148
28
1340
323.578947
Counter: #variables (positive hit) {Cache - component caching}
9
2404
28
824
267.111111
Counter: #variables (negative hit) {Cache - component caching}
10
3744
28
1340
374.400000
Counter: #clauses (cache record structure) {Cache - component caching}
19
5816
20
1320
306.105263
Counter: #clauses (positive hit) {Cache - component caching}
9
2248
20
804
249.777778
Counter: #clauses (negative hit) {Cache - component caching}
10
3568
20
1320
356.800000
Counter: #removed clauses / #clauses {Cache - component caching}
19
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
9
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
10
600
30
140
60.000000
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
10
10
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
