Number: formula size {Formula representation}
1
11428040
Number: #variables {Formula representation}
1
2285270
Number: #clauses {Formula representation}
1
2286640
Timer (reduced): initialize [ns] {Formula representation}
1
1275780873
Timer: compute connected components [ns] {Formula representation}
251
31928971066
11370
1609761930
127207056.039841
Number: circuit size {Circuit}
1
83857886
Number: #nodes {Circuit}
1
12322959
Number: #edges {Circuit}
1
83857886
Number: #variables {Circuit}
1
2285270
Timer: copy subcircuit [ns] {Circuit}
100
21294966195
1204234
1267181184
212949661.950000
Counter: formula size (copy subcircuit) {Circuit}
100
69943900
4784
2569008
699439.000000
Counter: #variables (copy subcircuit) {Circuit}
100
14639950
1456
527618
146399.500000
Counter: #clauses (copy subcircuit) {Circuit}
100
14697700
1704
528688
146977.000000
Timer (reduced): initialize [ns] {Compiler}
1
1864696282
Timer (reduced): compile [ns] {Compiler}
1
928073581469
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
52
Number: #decisions {Compiler}
1
125
Counter: ratio of recomputed hypergraph cuts {Compiler}
225
225
1
1
1.000000
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
125
75
0
1
0.600000
Counter: #connected components {Compiler}
251
225
0
2
0.896414
Counter: #monotone residual formulae / #residual formulae {Compiler}
251
52
0
1
0.207171
Counter: monotone residual formula size {Compiler}
52
6760
104
156
130.000000
Counter: #pure clauses / #clauses {Compiler}
251
52.000000
0.000000
1.000000
0.207171
Counter: pure residual formula size / residual formula size {Compiler}
251
52.000000
0.000000
1.000000
0.207171
Timer: assign literal [ns] {Compiler}
380
479285858515
1010
69386072847
1261278575.039474
Timer: unassign literal [ns] {Compiler}
380
2580562649
310
164104051
6790954.339474
Timer: get decision variable [ns] {Decision heuristic}
125
2094647940
120
124628086
16757183.520000
Counter: #preselected variables {Decision heuristic}
125
44302248
1
2285270
354417.984000
Counter: #restricted variables / #preselected variables {Decision heuristic}
75
0.086921
0.000057
0.009564
0.001159
Timer (reduced): initialize [ns] {SAT solver}
1
524857422
Timer (reduced): initial simplification [ns] {SAT solver}
1
1830
Timer (reduced): initially implied literals [ns] {SAT solver}
1
1120
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
251
26949292049
14040
861203810
107367697.406375
Timer: unit propagation [ns] {SAT solver}
251
1878292
260
442128
7483.235060
Counter: #implied literals {SAT solver}
251
1760
0
26
7.011952
Counter: #implied literals / #variables {SAT solver}
251
0.749168
0.000000
0.018868
0.002985
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
100
114710687
120929
3137453
1147106.870000
Counter: #implicit implied literals / #variables {SAT solver}
100
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
100
0.010452
0.000000
0.006250
0.000105
Timer: compute cut [ns] {Partitioning hypergraph}
0
0
0
0
0.000000
Counter: cut size {Partitioning hypergraph}
0
0
0
0
0.000000
Counter: cut size / #variables {Partitioning hypergraph}
0
0.000000
0.000000
0.000000
0.000000
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
50
10712401
25050
518827
214248.020000
Counter: #vertices {Partitioning hypergraph}
50
0
0
0
0.000000
Counter: #vertices / #clauses {Partitioning hypergraph}
50
0.000000
0.000000
0.000000
0.000000
Counter: #hyperedges {Partitioning hypergraph}
50
0
0
0
0.000000
Counter: #hyperedges / #variables {Partitioning hypergraph}
50
0.000000
0.000000
0.000000
0.000000
Counter: hypergraph size {Partitioning hypergraph}
50
0
0
0
0.000000
Counter: hypergraph size / formula size {Partitioning hypergraph}
50
0.000000
0.000000
0.000000
0.000000
Timer: create equivalence structure [ns] {Partitioning hypergraph}
50
4191140
12350
273119
83822.800000
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
225
100
0
1
0.444444
Number: #current entries {Cache - component caching}
1
125
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
225
338844845768
114129
17263743434
1505977092.302222
Timer: search cache record structure [ns] {Cache - component caching}
225
184251238
140
5823089
818894.391111
Timer: add cache record structure [ns] {Cache - component caching}
125
87103929
230
3461931
696831.432000
Counter: #empty cache records / #cache records {Cache - component caching}
225
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
225
289539300
320
11428040
1286841.333333
Counter: formula size (positive hit) {Cache - component caching}
100
69943900
4784
2569008
699439.000000
Counter: formula size (negative hit) {Cache - component caching}
125
219595400
320
11428040
1756763.200000
Counter: #variables (cache record structure) {Cache - component caching}
225
58991650
160
2285270
262185.111111
Counter: #variables (positive hit) {Cache - component caching}
100
14639950
1456
527618
146399.500000
Counter: #variables (negative hit) {Cache - component caching}
125
44351700
160
2285270
354813.600000
Counter: #clauses (cache record structure) {Cache - component caching}
225
59116900
108
2286640
262741.777778
Counter: #clauses (positive hit) {Cache - component caching}
100
14697700
1704
528688
146977.000000
Counter: #clauses (negative hit) {Cache - component caching}
125
44419200
108
2286640
355353.600000
Counter: #removed clauses / #clauses {Cache - component caching}
225
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
100
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
125
98220
50
3180
785.760000
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
125
125
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
