Number: formula size {Formula representation}
1
31886610
Number: #variables {Formula representation}
1
2657310
Number: #clauses {Formula representation}
1
2657275
Timer (reduced): initialize [ns] {Formula representation}
1
2856420888
Timer: compute connected components [ns] {Formula representation}
41
4117795403
9820
1326173421
100434034.219512
Number: circuit size {Circuit}
1
8709715
Number: #nodes {Circuit}
1
8385164
Number: #edges {Circuit}
1
8709715
Number: #variables {Circuit}
1
2657310
Timer: copy subcircuit [ns] {Circuit}
18
3756365590
117029
1476672849
208686977.222222
Counter: formula size (copy subcircuit) {Circuit}
18
27901800
420
9743220
1550100.000000
Counter: #variables (copy subcircuit) {Circuit}
18
2658420
186
885834
147690.000000
Counter: #clauses (copy subcircuit) {Circuit}
18
2657700
142
885798
147650.000000
Timer (reduced): initialize [ns] {Compiler}
1
2126072928
Timer (reduced): compile [ns] {Compiler}
1
5344412679687
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
0
Number: #decisions {Compiler}
1
20
Counter: ratio of recomputed hypergraph cuts {Compiler}
38
25
0
1
0.657895
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
13
12
0
1
0.923077
Counter: #connected components {Compiler}
41
38
0
1
0.926829
Counter: #monotone residual formulae / #residual formulae {Compiler}
41
3
0
1
0.073171
Counter: monotone residual formula size {Compiler}
3
270
90
90
90.000000
Counter: #pure clauses / #clauses {Compiler}
41
3.000000
0.000000
1.000000
0.073171
Counter: pure residual formula size / residual formula size {Compiler}
41
3.000000
0.000000
1.000000
0.073171
Timer: assign literal [ns] {Compiler}
70
5289004798821
1470
2557438373349
75557211411.728571
Timer: unassign literal [ns] {Compiler}
70
494005323
350
132256023
7057218.900000
Timer: get decision variable [ns] {Decision heuristic}
20
181848515
140
80119872
9092425.750000
Counter: #preselected variables {Decision heuristic}
20
6635018
2
2657310
331750.900000
Counter: #restricted variables / #preselected variables {Decision heuristic}
12
0.005404
0.000011
0.001901
0.000450
Timer (reduced): initialize [ns] {SAT solver}
1
867346501
Timer (reduced): initial simplification [ns] {SAT solver}
1
990
Timer (reduced): initially implied literals [ns] {SAT solver}
1
630
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
41
2174566253
49640
614507322
53038201.292683
Timer: unit propagation [ns] {SAT solver}
41
142238
210
22869
3469.219512
Counter: #implied literals {SAT solver}
41
70
0
3
1.707317
Counter: #implied literals / #variables {SAT solver}
41
0.089524
0.000000
0.021739
0.002184
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
3
14772808
4109242
6523765
4924269.333333
Counter: #implicit implied literals / #variables {SAT solver}
3
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
3
0.000000
0.000000
0.000000
0.000000
Timer: compute cut [ns] {Partitioning hypergraph}
1
4178471
4178471
4178471
4178471.000000
Counter: cut size {Partitioning hypergraph}
1
10
10
10
10.000000
Counter: cut size / #variables {Partitioning hypergraph}
1
0.002693
0.002693
0.002693
0.002693
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
1
6193737
6193737
6193737
6193737.000000
Counter: #vertices {Partitioning hypergraph}
1
85
85
85
85.000000
Counter: #vertices / #clauses {Partitioning hypergraph}
1
0.023142
0.023142
0.023142
0.023142
Counter: #hyperedges {Partitioning hypergraph}
1
12
12
12
12.000000
Counter: #hyperedges / #variables {Partitioning hypergraph}
1
0.003231
0.003231
0.003231
0.003231
Counter: hypergraph size {Partitioning hypergraph}
1
336
336
336
336.000000
Counter: hypergraph size / formula size {Partitioning hypergraph}
1
0.015321
0.015321
0.015321
0.015321
Timer: create equivalence structure [ns] {Partitioning hypergraph}
1
382198
382198
382198
382198.000000
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
38
18
0
1
0.473684
Number: #current entries {Cache - component caching}
1
20
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
38
41898405955
108539
13605910162
1102589630.394737
Timer: search cache record structure [ns] {Cache - component caching}
38
58582037
200
17508169
1541632.552632
Timer: add cache record structure [ns] {Cache - component caching}
20
47889769
320
32637857
2394488.450000
Counter: #empty cache records / #cache records {Cache - component caching}
38
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
38
104297855
278
31886610
2744680.394737
Counter: formula size (positive hit) {Cache - component caching}
18
27901800
420
9743220
1550100.000000
Counter: formula size (negative hit) {Cache - component caching}
20
76396055
278
31886610
3819802.750000
Counter: #variables (cache record structure) {Cache - component caching}
38
9302860
139
2657310
244812.105263
Counter: #variables (positive hit) {Cache - component caching}
18
2658420
186
885834
147690.000000
Counter: #variables (negative hit) {Cache - component caching}
20
6644440
139
2657310
332222.000000
Counter: #clauses (cache record structure) {Cache - component caching}
38
9301340
94
2657275
244772.105263
Counter: #clauses (positive hit) {Cache - component caching}
18
2657700
142
885798
147650.000000
Counter: #clauses (negative hit) {Cache - component caching}
20
6643640
94
2657275
332182.000000
Counter: #removed clauses / #clauses {Cache - component caching}
38
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
18
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
20
7510
40
1150
375.500000
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
20
20
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
