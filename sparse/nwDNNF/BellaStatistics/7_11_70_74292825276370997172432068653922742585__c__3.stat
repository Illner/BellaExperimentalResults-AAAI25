Number: formula size {Formula representation}
1
6765143
Number: #variables {Formula representation}
1
1127588
Number: #clauses {Formula representation}
1
1127826
Timer (reduced): initialize [ns] {Formula representation}
1
689099783
Timer: compute connected components [ns] {Formula representation}
141
4279978382
4180
419791900
30354456.609929
Number: circuit size {Circuit}
1
77244437
Number: #nodes {Circuit}
1
15464283
Number: #edges {Circuit}
1
77244437
Number: #variables {Circuit}
1
1127588
Timer: copy subcircuit [ns] {Circuit}
60
10092548105
124500
1096703967
168209135.083333
Counter: formula size (copy subcircuit) {Circuit}
60
16115330
869
1406394
268588.833333
Counter: #variables (copy subcircuit) {Circuit}
60
2934360
286
249106
48906.000000
Counter: #clauses (copy subcircuit) {Circuit}
60
2939720
309
249299
48995.333333
Timer (reduced): initialize [ns] {Compiler}
1
719419431
Timer (reduced): compile [ns] {Compiler}
1
239282956644
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
22
Number: #decisions {Compiler}
1
70
Counter: ratio of recomputed hypergraph cuts {Compiler}
130
100
0
1
0.769231
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
50
33
0
1
0.660000
Counter: #connected components {Compiler}
141
130
0
2
0.921986
Counter: #monotone residual formulae / #residual formulae {Compiler}
141
22
0
1
0.156028
Counter: monotone residual formula size {Compiler}
22
1210
44
66
55.000000
Counter: #pure clauses / #clauses {Compiler}
141
22.434456
0.000000
1.000000
0.159110
Counter: pure residual formula size / residual formula size {Compiler}
141
22.303489
0.000000
1.000000
0.158181
Timer: assign literal [ns] {Compiler}
217
182933705537
580
52947325247
843012467.912442
Timer: unassign literal [ns] {Compiler}
217
398821914
260
45651411
1837889.004608
Timer: get decision variable [ns] {Decision heuristic}
70
224308972
50
33618900
3204413.885714
Counter: #preselected variables {Decision heuristic}
70
9097071
1
1127588
129958.157143
Counter: #restricted variables / #preselected variables {Decision heuristic}
33
0.055964
0.000068
0.008235
0.001696
Timer (reduced): initialize [ns] {SAT solver}
1
231373071
Timer (reduced): initial simplification [ns] {SAT solver}
1
950
Timer (reduced): initially implied literals [ns] {SAT solver}
1
560
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
141
2514875029
4610
210885149
17835993.113475
Timer: unit propagation [ns] {SAT solver}
141
289309
160
31460
2051.836879
Counter: #implied literals {SAT solver}
141
469
0
11
3.326241
Counter: #implied literals / #variables {SAT solver}
141
0.758521
0.000000
0.043478
0.005380
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
37
18918195
42590
3237543
511302.567568
Counter: #implicit implied literals / #variables {SAT solver}
37
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
37
0.023994
0.000000
0.014286
0.000648
Timer: compute cut [ns] {Partitioning hypergraph}
2
16339132
5429467
10909665
8169566.000000
Counter: cut size {Partitioning hypergraph}
2
24
8
16
12.000000
Counter: cut size / #variables {Partitioning hypergraph}
2
0.011390
0.001693
0.009697
0.005695
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
17
5753005
10690
3848350
338412.058824
Counter: #vertices {Partitioning hypergraph}
17
424
0
301
24.941176
Counter: #vertices / #clauses {Partitioning hypergraph}
17
0.134725
0.000000
0.072056
0.007925
Counter: #hyperedges {Partitioning hypergraph}
17
63
0
41
3.705882
Counter: #hyperedges / #variables {Partitioning hypergraph}
17
0.022012
0.000000
0.013333
0.001295
Counter: hypergraph size {Partitioning hypergraph}
17
899
0
635
52.882353
Counter: hypergraph size / formula size {Partitioning hypergraph}
17
0.076105
0.000000
0.041667
0.004477
Timer: create equivalence structure [ns] {Partitioning hypergraph}
17
1001658
5510
650499
58921.058824
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
130
60
0
1
0.461538
Number: #current entries {Cache - component caching}
1
70
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
130
36227284745
46000
4635452408
278671421.115385
Timer: search cache record structure [ns] {Cache - component caching}
130
30486979
140
2119795
234515.223077
Timer: add cache record structure [ns] {Cache - component caching}
70
16437123
230
2326694
234816.042857
Counter: #empty cache records / #cache records {Cache - component caching}
130
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
130
69945855
140
6765143
538045.038462
Counter: formula size (positive hit) {Cache - component caching}
60
16115330
869
1406394
268588.833333
Counter: formula size (negative hit) {Cache - component caching}
70
53830525
140
6765143
769007.500000
Counter: #variables (cache record structure) {Cache - component caching}
130
12071210
70
1127588
92855.461538
Counter: #variables (positive hit) {Cache - component caching}
60
2934360
286
249106
48906.000000
Counter: #variables (negative hit) {Cache - component caching}
70
9136850
70
1127588
130526.428571
Counter: #clauses (cache record structure) {Cache - component caching}
130
12082315
48
1127826
92940.884615
Counter: #clauses (positive hit) {Cache - component caching}
60
2939720
309
249299
48995.333333
Counter: #clauses (negative hit) {Cache - component caching}
70
9142595
48
1127826
130608.500000
Counter: #removed clauses / #clauses {Cache - component caching}
130
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
60
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
70
18670
30
1150
266.714286
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
70
70
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
