Number: formula size {Formula representation}
1
5200
Number: #variables {Formula representation}
1
690
Number: #clauses {Formula representation}
1
680
Timer (reduced): initialize [ns] {Formula representation}
1
788295
Timer: compute connected components [ns] {Formula representation}
21
868586
480
231929
41361.238095
Number: circuit size {Circuit}
1
12242
Number: #nodes {Circuit}
1
6783
Number: #edges {Circuit}
1
12242
Number: #variables {Circuit}
1
690
Timer: copy subcircuit [ns] {Circuit}
9
2464575
3750
1293843
273841.666667
Counter: formula size (copy subcircuit) {Circuit}
9
5088
20
2312
565.333333
Counter: #variables (copy subcircuit) {Circuit}
9
1016
10
366
112.888889
Counter: #clauses (copy subcircuit) {Circuit}
9
948
8
356
105.333333
Timer (reduced): initialize [ns] {Compiler}
1
12324533
Timer (reduced): compile [ns] {Compiler}
1
9416249
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
4
Number: #decisions {Compiler}
1
10
Counter: ratio of recomputed hypergraph cuts {Compiler}
19
7
0
1
0.368421
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
4
0
0
0
0.000000
Counter: #connected components {Compiler}
21
19
0
2
0.904762
Counter: #monotone residual formulae / #residual formulae {Compiler}
21
4
0
1
0.190476
Counter: monotone residual formula size {Compiler}
4
24
4
8
6.000000
Counter: #pure clauses / #clauses {Compiler}
21
4.439560
0.000000
1.000000
0.211408
Counter: pure residual formula size / residual formula size {Compiler}
21
4.327485
0.000000
1.000000
0.206071
Timer: assign literal [ns] {Compiler}
40
373238
310
140649
9330.950000
Timer: unassign literal [ns] {Compiler}
40
81630
160
17040
2040.750000
Timer: get decision variable [ns] {Decision heuristic}
10
1650
40
860
165.000000
Counter: #preselected variables {Decision heuristic}
10
32
1
7
3.200000
Counter: #restricted variables / #preselected variables {Decision heuristic}
0
0.000000
0.000000
0.000000
0.000000
Timer (reduced): initialize [ns] {SAT solver}
1
397178
Timer (reduced): initial simplification [ns] {SAT solver}
1
980
Timer (reduced): initially implied literals [ns] {SAT solver}
1
760
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
21
195170
580
40980
9293.809524
Timer: unit propagation [ns] {SAT solver}
21
9640
140
4330
459.047619
Counter: #implied literals {SAT solver}
21
40
0
2
1.904762
Counter: #implied literals / #variables {SAT solver}
21
1.343009
0.000000
0.333333
0.063953
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
7
370538
4710
316588
52934.000000
Counter: #implicit implied literals / #variables {SAT solver}
7
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
7
0.472826
0.014493
0.100000
0.067547
Timer: compute cut [ns] {Partitioning hypergraph}
1
711486
711486
711486
711486.000000
Counter: cut size {Partitioning hypergraph}
1
7
7
7
7.000000
Counter: cut size / #variables {Partitioning hypergraph}
1
0.010145
0.010145
0.010145
0.010145
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
4
990705
2400
977355
247676.250000
Counter: #vertices {Partitioning hypergraph}
4
5
0
5
1.250000
Counter: #vertices / #clauses {Partitioning hypergraph}
4
0.007353
0.000000
0.007353
0.001838
Counter: #hyperedges {Partitioning hypergraph}
4
9
0
9
2.250000
Counter: #hyperedges / #variables {Partitioning hypergraph}
4
0.013043
0.000000
0.013043
0.003261
Counter: hypergraph size {Partitioning hypergraph}
4
29
0
29
7.250000
Counter: hypergraph size / formula size {Partitioning hypergraph}
4
0.005577
0.000000
0.005577
0.001394
Timer: create equivalence structure [ns] {Partitioning hypergraph}
4
58459
1040
53389
14614.750000
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
19
9
0
1
0.473684
Number: #current entries {Cache - component caching}
1
10
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
19
2831595
5380
894196
149031.315789
Timer: search cache record structure [ns] {Cache - component caching}
19
8240
130
1750
433.684211
Timer: add cache record structure [ns] {Cache - component caching}
10
14220
110
8010
1422.000000
Counter: #empty cache records / #cache records {Cache - component caching}
19
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
19
15376
20
5200
809.263158
Counter: formula size (positive hit) {Cache - component caching}
9
5088
20
2312
565.333333
Counter: formula size (negative hit) {Cache - component caching}
10
10288
20
5200
1028.800000
Counter: #variables (cache record structure) {Cache - component caching}
19
2722
10
690
143.263158
Counter: #variables (positive hit) {Cache - component caching}
9
1016
10
366
112.888889
Counter: #variables (negative hit) {Cache - component caching}
10
1706
10
690
170.600000
Counter: #clauses (cache record structure) {Cache - component caching}
19
2576
8
680
135.578947
Counter: #clauses (positive hit) {Cache - component caching}
9
948
8
356
105.333333
Counter: #clauses (negative hit) {Cache - component caching}
10
1628
8
680
162.800000
Counter: #removed clauses / #clauses {Cache - component caching}
19
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
9
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
10
620
30
200
62.000000
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
10
10
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
