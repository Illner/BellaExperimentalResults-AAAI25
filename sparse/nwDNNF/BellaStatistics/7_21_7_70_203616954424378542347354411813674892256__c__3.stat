Number: formula size {Formula representation}
1
2118123
Number: #variables {Formula representation}
1
353192
Number: #clauses {Formula representation}
1
353150
Timer (reduced): initialize [ns] {Formula representation}
1
278242849
Timer: compute connected components [ns] {Formula representation}
85
1257759939
10450
150931122
14797175.752941
Number: circuit size {Circuit}
1
18793014
Number: #nodes {Circuit}
1
2476718
Number: #edges {Circuit}
1
18793014
Number: #variables {Circuit}
1
353192
Timer: copy subcircuit [ns] {Circuit}
36
2843414353
408526
481905590
78983732.027778
Counter: formula size (copy subcircuit) {Circuit}
36
4264974
1092
518994
118471.500000
Counter: #variables (copy subcircuit) {Circuit}
36
813876
406
93870
22607.666667
Counter: #clauses (copy subcircuit) {Circuit}
36
811392
372
93813
22538.666667
Timer (reduced): initialize [ns] {Compiler}
1
366328798
Timer (reduced): compile [ns] {Compiler}
1
30612938646
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
14
Number: #decisions {Compiler}
1
42
Counter: ratio of recomputed hypergraph cuts {Compiler}
78
71
0
1
0.910256
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
37
23
0
1
0.621622
Counter: #connected components {Compiler}
85
78
0
2
0.917647
Counter: #monotone residual formulae / #residual formulae {Compiler}
85
14
0
1
0.164706
Counter: monotone residual formula size {Compiler}
14
1764
98
154
126.000000
Counter: #pure clauses / #clauses {Compiler}
85
14.152966
0.000000
1.000000
0.166505
Counter: pure residual formula size / residual formula size {Compiler}
85
14.104478
0.000000
1.000000
0.165935
Timer: assign literal [ns] {Compiler}
133
14566764855
1050
4802317663
109524547.781955
Timer: unassign literal [ns] {Compiler}
133
197084981
470
30884537
1481841.962406
Timer: get decision variable [ns] {Decision heuristic}
42
67060067
140
19264329
1596668.261905
Counter: #preselected variables {Decision heuristic}
42
2029390
1
353192
48318.809524
Counter: #restricted variables / #preselected variables {Decision heuristic}
23
0.033175
0.000139
0.004578
0.001442
Timer (reduced): initialize [ns] {SAT solver}
1
125729905
Timer (reduced): initial simplification [ns] {SAT solver}
1
680
Timer (reduced): initially implied literals [ns] {SAT solver}
1
410
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
85
719053281
34559
95504461
8459450.364706
Timer: unit propagation [ns] {SAT solver}
85
204269
250
23319
2403.164706
Counter: #implied literals {SAT solver}
85
203
0
7
2.388235
Counter: #implied literals / #variables {SAT solver}
85
0.208924
0.000000
0.020000
0.002458
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
30
30667176
175398
4956498
1022239.200000
Counter: #implicit implied literals / #variables {SAT solver}
30
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
30
0.011121
0.000000
0.006623
0.000371
Timer: compute cut [ns] {Partitioning hypergraph}
2
15709447
6368084
9341363
7854723.500000
Counter: cut size {Partitioning hypergraph}
2
16
7
9
8.000000
Counter: cut size / #variables {Partitioning hypergraph}
2
0.004536
0.002188
0.002347
0.002268
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
14
9397783
23650
6163315
671270.214286
Counter: #vertices {Partitioning hypergraph}
14
209
0
108
14.928571
Counter: #vertices / #clauses {Partitioning hypergraph}
14
0.061995
0.000000
0.035069
0.004428
Counter: #hyperedges {Partitioning hypergraph}
14
43
0
22
3.071429
Counter: #hyperedges / #variables {Partitioning hypergraph}
14
0.012391
0.000000
0.007042
0.000885
Counter: hypergraph size {Partitioning hypergraph}
14
497
0
280
35.500000
Counter: hypergraph size / formula size {Partitioning hypergraph}
14
0.036936
0.000000
0.020422
0.002638
Timer: create equivalence structure [ns] {Partitioning hypergraph}
14
1407147
12910
515674
100510.500000
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
78
36
0
1
0.461538
Number: #current entries {Cache - component caching}
1
42
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
78
10027314318
114388
1810149528
128555311.769231
Timer: search cache record structure [ns] {Cache - component caching}
78
8778140
290
1363846
112540.256410
Timer: add cache record structure [ns] {Cache - component caching}
42
8967367
460
2143048
213508.738095
Counter: #empty cache records / #cache records {Cache - component caching}
78
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
78
16090921
302
2118123
206293.858974
Counter: formula size (positive hit) {Cache - component caching}
36
4264974
1092
518994
118471.500000
Counter: formula size (negative hit) {Cache - component caching}
42
11825947
302
2118123
281570.166667
Counter: #variables (cache record structure) {Cache - component caching}
78
2864694
151
353192
36726.846154
Counter: #variables (positive hit) {Cache - component caching}
36
813876
406
93870
22607.666667
Counter: #variables (negative hit) {Cache - component caching}
42
2050818
151
353192
48829.000000
Counter: #clauses (cache record structure) {Cache - component caching}
78
2859089
102
353150
36654.987179
Counter: #clauses (positive hit) {Cache - component caching}
36
811392
372
93813
22538.666667
Counter: #clauses (negative hit) {Cache - component caching}
42
2047697
102
353150
48754.690476
Counter: #removed clauses / #clauses {Cache - component caching}
78
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
36
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
42
12910
120
870
307.380952
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
42
42
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
