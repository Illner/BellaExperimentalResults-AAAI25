Number: formula size {Formula representation}
1
4832245
Number: #variables {Formula representation}
1
805420
Number: #clauses {Formula representation}
1
805590
Timer (reduced): initialize [ns] {Formula representation}
1
453538343
Timer: compute connected components [ns] {Formula representation}
101
2029889827
6460
265549162
20097919.079208
Number: circuit size {Circuit}
1
9661581
Number: #nodes {Circuit}
1
3429249
Number: #edges {Circuit}
1
9661581
Number: #variables {Circuit}
1
805420
Timer: copy subcircuit [ns] {Circuit}
40
1380320162
162639
174878733
34508004.050000
Counter: formula size (copy subcircuit) {Circuit}
40
4019400
1232
366597
100485.000000
Counter: #variables (copy subcircuit) {Circuit}
40
824560
418
73348
20614.000000
Counter: #clauses (copy subcircuit) {Circuit}
40
827080
430
73473
20677.000000
Timer (reduced): initialize [ns] {Compiler}
1
427046010
Timer (reduced): compile [ns] {Compiler}
1
124261625555
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
0
Number: #decisions {Compiler}
1
50
Counter: ratio of recomputed hypergraph cuts {Compiler}
90
54
0
1
0.600000
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
31
24
0
1
0.774194
Counter: #connected components {Compiler}
101
90
0
1
0.891089
Counter: #monotone residual formulae / #residual formulae {Compiler}
101
11
0
1
0.108911
Counter: monotone residual formula size {Compiler}
11
726
66
66
66.000000
Counter: #pure clauses / #clauses {Compiler}
101
11.535398
0.000000
1.000000
0.114212
Counter: pure residual formula size / residual formula size {Compiler}
101
11.379310
0.000000
1.000000
0.112666
Timer: assign literal [ns] {Compiler}
155
101115754973
900
22542582004
652359709.503226
Timer: unassign literal [ns] {Compiler}
155
381027379
300
53174656
2458241.154839
Timer: get decision variable [ns] {Decision heuristic}
50
101200682
50
18674073
2024013.640000
Counter: #preselected variables {Decision heuristic}
50
5218236
1
805420
104364.720000
Counter: #restricted variables / #preselected variables {Decision heuristic}
24
0.033749
0.000068
0.005641
0.001406
Timer (reduced): initialize [ns] {SAT solver}
1
155063692
Timer (reduced): initial simplification [ns] {SAT solver}
1
910
Timer (reduced): initially implied literals [ns] {SAT solver}
1
510
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
101
1253354750
15340
112528119
12409452.970297
Timer: unit propagation [ns] {SAT solver}
101
219198
190
57169
2170.277228
Counter: #implied literals {SAT solver}
101
335
0
11
3.316832
Counter: #implied literals / #variables {SAT solver}
101
0.342477
0.000000
0.029412
0.003391
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
10
9832521
157709
3586674
983252.100000
Counter: #implicit implied literals / #variables {SAT solver}
10
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
10
0.009709
0.000000
0.009709
0.000971
Timer: compute cut [ns] {Partitioning hypergraph}
2
12714342
4852931
7861411
6357171.000000
Counter: cut size {Partitioning hypergraph}
2
35
16
19
17.500000
Counter: cut size / #variables {Partitioning hypergraph}
2
0.012292
0.003932
0.008359
0.006146
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
7
5754144
15580
4547145
822020.571429
Counter: #vertices {Partitioning hypergraph}
7
401
0
278
57.285714
Counter: #vertices / #clauses {Partitioning hypergraph}
7
0.120053
0.000000
0.063109
0.017150
Counter: #hyperedges {Partitioning hypergraph}
7
51
0
29
7.285714
Counter: #hyperedges / #variables {Partitioning hypergraph}
7
0.017496
0.000000
0.011494
0.002499
Counter: hypergraph size {Partitioning hypergraph}
7
843
0
579
120.428571
Counter: hypergraph size / formula size {Partitioning hypergraph}
7
0.067500
0.000000
0.037383
0.009643
Timer: create equivalence structure [ns] {Partitioning hypergraph}
7
652792
7850
438895
93256.000000
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
90
40
0
1
0.444444
Number: #current entries {Cache - component caching}
1
50
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
90
16728464409
64269
2787843179
185871826.766667
Timer: search cache record structure [ns] {Cache - component caching}
90
10324618
150
1169668
114717.977778
Timer: add cache record structure [ns] {Cache - component caching}
50
9045631
260
1433966
180912.620000
Counter: #empty cache records / #cache records {Cache - component caching}
90
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
90
34978225
206
4832245
388646.944444
Counter: formula size (positive hit) {Cache - component caching}
40
4019400
1232
366597
100485.000000
Counter: formula size (negative hit) {Cache - component caching}
50
30958825
206
4832245
619176.500000
Counter: #variables (cache record structure) {Cache - component caching}
90
6079470
103
805420
67549.666667
Counter: #variables (positive hit) {Cache - component caching}
40
824560
418
73348
20614.000000
Counter: #variables (negative hit) {Cache - component caching}
50
5254910
103
805420
105098.200000
Counter: #clauses (cache record structure) {Cache - component caching}
90
6084785
70
805590
67608.722222
Counter: #clauses (positive hit) {Cache - component caching}
40
827080
430
73473
20677.000000
Counter: #clauses (negative hit) {Cache - component caching}
50
5257705
70
805590
105154.100000
Counter: #removed clauses / #clauses {Cache - component caching}
90
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
40
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
50
12809
40
1040
256.180000
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
50
50
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
