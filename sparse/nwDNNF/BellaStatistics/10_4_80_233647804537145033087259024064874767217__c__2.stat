Number: formula size {Formula representation}
1
26214640
Number: #variables {Formula representation}
1
2621560
Number: #clauses {Formula representation}
1
2621550
Timer (reduced): initialize [ns] {Formula representation}
1
2237805905
Timer: compute connected components [ns] {Formula representation}
67
4443706452
5080
1057548147
66323976.895522
Number: circuit size {Circuit}
1
49435977
Number: #nodes {Circuit}
1
15313815
Number: #edges {Circuit}
1
49435977
Number: #variables {Circuit}
1
2621560
Timer: copy subcircuit [ns] {Circuit}
28
8565340579
36690
2274090075
305905020.678571
Counter: formula size (copy subcircuit) {Circuit}
28
25110936
176
5898456
896819.142857
Counter: #variables (copy subcircuit) {Circuit}
28
2903468
88
655472
103695.285714
Counter: #clauses (copy subcircuit) {Circuit}
28
2902811
60
655459
103671.821429
Timer (reduced): initialize [ns] {Compiler}
1
1746412265
Timer (reduced): compile [ns] {Compiler}
1
2664180839306
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
0
Number: #decisions {Compiler}
1
33
Counter: ratio of recomputed hypergraph cuts {Compiler}
61
39
0
1
0.639344
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
20
17
0
1
0.850000
Counter: #connected components {Compiler}
67
61
0
1
0.910448
Counter: #monotone residual formulae / #residual formulae {Compiler}
67
6
0
1
0.089552
Counter: monotone residual formula size {Compiler}
6
304
48
56
50.666667
Counter: #pure clauses / #clauses {Compiler}
67
6.716468
0.000000
1.000000
0.100246
Counter: pure residual formula size / residual formula size {Compiler}
67
6.500433
0.000000
1.000000
0.097021
Timer: assign literal [ns] {Compiler}
110
2606498253532
950
1166752281971
23695438668.472727
Timer: unassign literal [ns] {Compiler}
110
681087838
310
135754061
6191707.618182
Timer: get decision variable [ns] {Decision heuristic}
33
216800075
90
80030997
6569699.242424
Counter: #preselected variables {Decision heuristic}
33
8133752
1
2621560
246477.333333
Counter: #restricted variables / #preselected variables {Decision heuristic}
17
0.012857
0.000015
0.003404
0.000756
Timer (reduced): initialize [ns] {SAT solver}
1
641627715
Timer (reduced): initial simplification [ns] {SAT solver}
1
1080
Timer (reduced): initially implied literals [ns] {SAT solver}
1
690
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
67
2741040612
58170
534106053
40911053.910448
Timer: unit propagation [ns] {SAT solver}
67
451570
190
266670
6739.850746
Counter: #implied literals {SAT solver}
67
121
0
4
1.805970
Counter: #implied literals / #variables {SAT solver}
67
0.297756
0.000000
0.040000
0.004444
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
7
38581733
904318
15801026
5511676.142857
Counter: #implicit implied literals / #variables {SAT solver}
7
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
7
0.045710
0.000000
0.011364
0.006530
Timer: compute cut [ns] {Partitioning hypergraph}
2
19744824
9449643
10295181
9872412.000000
Counter: cut size {Partitioning hypergraph}
2
27
13
14
13.500000
Counter: cut size / #variables {Partitioning hypergraph}
2
0.009358
0.003575
0.005783
0.004679
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
3
30455215
16060
24284822
10151738.333333
Counter: #vertices {Partitioning hypergraph}
3
520
0
260
173.333333
Counter: #vertices / #clauses {Partitioning hypergraph}
3
0.183990
0.000000
0.117117
0.061330
Counter: #hyperedges {Partitioning hypergraph}
3
33
0
17
11.000000
Counter: #hyperedges / #variables {Partitioning hypergraph}
3
0.011459
0.000000
0.007117
0.003820
Counter: hypergraph size {Partitioning hypergraph}
3
1824
0
1040
608.000000
Counter: hypergraph size / formula size {Partitioning hypergraph}
3
0.118750
0.000000
0.072271
0.039583
Timer: create equivalence structure [ns] {Partitioning hypergraph}
3
751108
8100
397399
250369.333333
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
61
28
0
1
0.459016
Number: #current entries {Cache - component caching}
1
33
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
61
38022444586
47070
11303734446
623318763.704918
Timer: search cache record structure [ns] {Cache - component caching}
61
57186667
160
12967671
937486.344262
Timer: add cache record structure [ns] {Cache - component caching}
33
25956848
270
6347082
786571.151515
Counter: #empty cache records / #cache records {Cache - component caching}
61
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
61
103526237
152
26214640
1697151.426230
Counter: formula size (positive hit) {Cache - component caching}
28
25110936
176
5898456
896819.142857
Counter: formula size (negative hit) {Cache - component caching}
33
78415301
152
26214640
2376221.242424
Counter: #variables (cache record structure) {Cache - component caching}
61
11050574
76
2621560
181156.950820
Counter: #variables (positive hit) {Cache - component caching}
28
2903468
88
655472
103695.285714
Counter: #variables (negative hit) {Cache - component caching}
33
8147106
76
2621560
246882.000000
Counter: #clauses (cache record structure) {Cache - component caching}
61
11049123
52
2621550
181133.163934
Counter: #clauses (positive hit) {Cache - component caching}
28
2902811
60
655459
103671.821429
Counter: #clauses (negative hit) {Cache - component caching}
33
8146312
52
2621550
246857.939394
Counter: #removed clauses / #clauses {Cache - component caching}
61
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
28
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
33
15420
40
1100
467.272727
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
33
33
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
