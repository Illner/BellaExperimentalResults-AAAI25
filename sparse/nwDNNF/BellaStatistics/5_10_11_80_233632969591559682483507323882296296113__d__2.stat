Number: formula size {Formula representation}
1
9664985
Number: #variables {Formula representation}
1
1610730
Number: #clauses {Formula representation}
1
1611405
Timer (reduced): initialize [ns] {Formula representation}
1
953789436
Timer: compute connected components [ns] {Formula representation}
150
1397177196
560
181063071
9314514.640000
Number: circuit size {Circuit}
1
158607136
Number: #nodes {Circuit}
1
54178574
Number: #edges {Circuit}
1
158607136
Number: #variables {Circuit}
1
1610730
Timer: copy subcircuit [ns] {Circuit}
205
36168724332
16850
4201074559
176432801.619512
Counter: formula size (copy subcircuit) {Circuit}
205
8150115
143
733832
39756.658537
Counter: #variables (copy subcircuit) {Circuit}
205
1663126
22
146608
8112.809756
Counter: #clauses (copy subcircuit) {Circuit}
205
1698361
67
147238
8284.687805
Timer (reduced): initialize [ns] {Compiler}
1
1148756154
Timer (reduced): compile [ns] {Compiler}
1
391193447741
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
11
Number: #splits {Compiler}
1
170
Number: #decisions {Compiler}
1
80
Counter: ratio of recomputed hypergraph cuts {Compiler}
285
218
0
1
0.764912
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
33
29
0
1
0.878788
Counter: #connected components {Compiler}
150
285
1
8
1.900000
Counter: #monotone residual formulae / #residual formulae {Compiler}
150
0
0
0
0.000000
Counter: monotone residual formula size {Compiler}
0
0
0
0
0.000000
Counter: #pure clauses / #clauses {Compiler}
150
0.000000
0.000000
0.000000
0.000000
Counter: pure residual formula size / residual formula size {Compiler}
150
0.000000
0.000000
0.000000
0.000000
Timer: assign literal [ns] {Compiler}
248
292390217143
230
109673935645
1178992811.060484
Timer: unassign literal [ns] {Compiler}
248
738638501
230
101404277
2978381.052419
Timer: get decision variable [ns] {Decision heuristic}
80
502235379
50
84500731
6277942.237500
Counter: #preselected variables {Decision heuristic}
80
10472800
1
1610730
130910.000000
Counter: #restricted variables / #preselected variables {Decision heuristic}
0
0.000000
0.000000
0.000000
0.000000
Timer (reduced): initialize [ns] {SAT solver}
1
319975754
Timer (reduced): initial simplification [ns] {SAT solver}
1
1800
Timer (reduced): initially implied literals [ns] {SAT solver}
1
1060
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
161
4276800371
420
376770460
26563977.459627
Timer: unit propagation [ns] {SAT solver}
161
474085
120
65269
2944.627329
Counter: #implied literals {SAT solver}
161
536
0
11
3.329193
Counter: #implied literals / #variables {SAT solver}
161
6.848070
0.000000
1.000000
0.042535
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
169
54744557
11510
7171997
323932.289941
Counter: #implicit implied literals / #variables {SAT solver}
169
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
169
0.041255
0.000000
0.003731
0.000244
Timer: compute cut [ns] {Partitioning hypergraph}
4
671481173
509554
407483674
167870293.250000
Counter: cut size {Partitioning hypergraph}
4
56
1
22
14.000000
Counter: cut size / #variables {Partitioning hypergraph}
4
0.514171
0.003731
0.500000
0.128543
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
4
17565835
36750
10789664
4391458.750000
Counter: #vertices {Partitioning hypergraph}
4
8496
12
4634
2124.000000
Counter: #vertices / #clauses {Partitioning hypergraph}
4
2.197646
0.179104
0.875000
0.549412
Counter: #hyperedges {Partitioning hypergraph}
4
365
11
133
91.250000
Counter: #hyperedges / #variables {Partitioning hypergraph}
4
0.894938
0.027965
0.500000
0.223734
Counter: hypergraph size {Partitioning hypergraph}
4
24490
22
13950
6122.500000
Counter: hypergraph size / formula size {Partitioning hypergraph}
4
1.818466
0.153846
0.701146
0.454616
Timer: create equivalence structure [ns] {Partitioning hypergraph}
4
1671161
5240
1032558
417790.250000
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
285
205
0
1
0.719298
Number: #current entries {Cache - component caching}
1
80
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
285
54643205159
2320
13248569312
191730544.417544
Timer: search cache record structure [ns] {Cache - component caching}
285
24773898
30
2452792
86925.957895
Timer: add cache record structure [ns] {Cache - component caching}
80
19853370
170
2806347
248167.125000
Counter: #empty cache records / #cache records {Cache - component caching}
285
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
285
70283443
8
9664985
246608.571930
Counter: formula size (positive hit) {Cache - component caching}
205
8150115
143
733832
39756.658537
Counter: formula size (negative hit) {Cache - component caching}
80
62133328
8
9664985
776666.600000
Counter: #variables (cache record structure) {Cache - component caching}
285
12211178
4
1610730
42846.238596
Counter: #variables (positive hit) {Cache - component caching}
205
1663126
22
146608
8112.809756
Counter: #variables (negative hit) {Cache - component caching}
80
10548052
4
1610730
131850.650000
Counter: #clauses (cache record structure) {Cache - component caching}
285
12282653
4
1611405
43097.028070
Counter: #clauses (positive hit) {Cache - component caching}
205
1698361
67
147238
8284.687805
Counter: #clauses (negative hit) {Cache - component caching}
80
10584292
4
1611405
132303.650000
Counter: #removed clauses / #clauses {Cache - component caching}
285
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
205
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
80
32520
20
4540
406.500000
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
80
80
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
