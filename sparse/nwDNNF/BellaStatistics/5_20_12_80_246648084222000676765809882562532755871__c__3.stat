Number: formula size {Formula representation}
1
29860680
Number: #variables {Formula representation}
1
4977000
Number: #clauses {Formula representation}
1
4977035
Timer (reduced): initialize [ns] {Formula representation}
1
3102094054
Timer: compute connected components [ns] {Formula representation}
111
27430359908
39310
2965508055
247120359.531532
Number: circuit size {Circuit}
1
59830885
Number: #nodes {Circuit}
1
16489607
Number: #edges {Circuit}
1
59830885
Number: #variables {Circuit}
1
4977000
Timer: copy subcircuit [ns] {Circuit}
44
19793465205
3470177
1955892326
449851481.931818
Counter: formula size (copy subcircuit) {Circuit}
44
77461824
6648
6242208
1760496.000000
Counter: #variables (copy subcircuit) {Circuit}
44
13965996
2364
1099344
317409.000000
Counter: #clauses (copy subcircuit) {Circuit}
44
13962146
2239
1099324
317321.500000
Timer (reduced): initialize [ns] {Compiler}
1
4425778706
Timer (reduced): compile [ns] {Compiler}
1
4686482415183
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
0
Number: #decisions {Compiler}
1
55
Counter: ratio of recomputed hypergraph cuts {Compiler}
99
97
0
1
0.979798
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
55
43
0
1
0.781818
Counter: #connected components {Compiler}
111
99
0
1
0.891892
Counter: #monotone residual formulae / #residual formulae {Compiler}
111
12
0
1
0.108108
Counter: monotone residual formula size {Compiler}
12
4320
360
360
360.000000
Counter: #pure clauses / #clauses {Compiler}
111
12.313180
0.000000
1.000000
0.110930
Counter: pure residual formula size / residual formula size {Compiler}
111
12.212766
0.000000
1.000000
0.110025
Timer: assign literal [ns] {Compiler}
170
4313441690741
3590
1016880424178
25373186416.123529
Timer: unassign literal [ns] {Compiler}
170
3142595123
810
375704102
18485853.664706
Timer: get decision variable [ns] {Decision heuristic}
55
1987780396
130
242695897
36141461.745455
Counter: #preselected variables {Decision heuristic}
55
43810546
1
4977000
796555.381818
Counter: #restricted variables / #preselected variables {Decision heuristic}
43
0.023009
0.000012
0.002732
0.000535
Timer (reduced): initialize [ns] {SAT solver}
1
1336444913
Timer (reduced): initial simplification [ns] {SAT solver}
1
1240
Timer (reduced): initially implied literals [ns] {SAT solver}
1
770
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
111
21776143780
40280
1544271823
196181475.495495
Timer: unit propagation [ns] {SAT solver}
111
949438
320
256319
8553.495495
Counter: #implied literals {SAT solver}
111
395
0
12
3.558559
Counter: #implied literals / #variables {SAT solver}
111
0.065293
0.000000
0.005525
0.000588
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
21
37416586
399368
6230258
1781742.190476
Counter: #implicit implied literals / #variables {SAT solver}
21
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
21
0.002089
0.000000
0.001838
0.000099
Timer: compute cut [ns] {Partitioning hypergraph}
1
1193375
1193375
1193375
1193375.000000
Counter: cut size {Partitioning hypergraph}
1
6
6
6
6.000000
Counter: cut size / #variables {Partitioning hypergraph}
1
0.001505
0.001505
0.001505
0.001505
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
12
4467859
79259
1371345
372321.583333
Counter: #vertices {Partitioning hypergraph}
12
13
0
13
1.083333
Counter: #vertices / #clauses {Partitioning hypergraph}
12
0.003418
0.000000
0.003418
0.000285
Counter: #hyperedges {Partitioning hypergraph}
12
13
0
13
1.083333
Counter: #hyperedges / #variables {Partitioning hypergraph}
12
0.003260
0.000000
0.003260
0.000272
Counter: hypergraph size {Partitioning hypergraph}
12
36
0
36
3.000000
Counter: hypergraph size / formula size {Partitioning hypergraph}
12
0.002532
0.000000
0.002532
0.000211
Timer: create equivalence structure [ns] {Partitioning hypergraph}
12
1806327
39790
371889
150527.250000
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
99
44
0
1
0.444444
Number: #current entries {Cache - component caching}
1
55
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
99
277669696466
457939
28550324350
2804744408.747475
Timer: search cache record structure [ns] {Cache - component caching}
99
252191710
210
15435525
2547391.010101
Timer: add cache record structure [ns] {Cache - component caching}
55
296554153
1150
37300477
5391893.690909
Counter: #empty cache records / #cache records {Cache - component caching}
99
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
99
336351103
1088
29860680
3397485.888889
Counter: formula size (positive hit) {Cache - component caching}
44
77461824
6648
6242208
1760496.000000
Counter: formula size (negative hit) {Cache - component caching}
55
258889279
1088
29860680
4707077.800000
Counter: #variables (cache record structure) {Cache - component caching}
99
57796442
544
4977000
583802.444444
Counter: #variables (positive hit) {Cache - component caching}
44
13965996
2364
1099344
317409.000000
Counter: #variables (negative hit) {Cache - component caching}
55
43830446
544
4977000
796917.200000
Counter: #clauses (cache record structure) {Cache - component caching}
99
57787202
364
4977035
583709.111111
Counter: #clauses (positive hit) {Cache - component caching}
44
13962146
2239
1099324
317321.500000
Counter: #clauses (negative hit) {Cache - component caching}
55
43825056
364
4977035
796819.200000
Counter: #removed clauses / #clauses {Cache - component caching}
99
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
44
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
55
22519
50
1310
409.436364
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
55
55
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
