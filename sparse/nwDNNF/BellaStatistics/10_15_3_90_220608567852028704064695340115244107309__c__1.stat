Number: formula size {Formula representation}
1
9743235
Number: #variables {Formula representation}
1
885840
Number: #clauses {Formula representation}
1
885805
Timer (reduced): initialize [ns] {Formula representation}
1
831810624
Timer: compute connected components [ns] {Formula representation}
41
1323000987
7550
365879328
32268316.756098
Number: circuit size {Circuit}
1
4832164
Number: #nodes {Circuit}
1
3090437
Number: #edges {Circuit}
1
4832164
Number: #variables {Circuit}
1
885840
Timer: copy subcircuit [ns] {Circuit}
18
1134980869
67889
403901233
63054492.722222
Counter: formula size (copy subcircuit) {Circuit}
18
8586972
339
2952585
477054.000000
Counter: #variables (copy subcircuit) {Circuit}
18
907344
150
295344
50408.000000
Counter: #clauses (copy subcircuit) {Circuit}
18
906642
115
295308
50369.000000
Timer (reduced): initialize [ns] {Compiler}
1
586521065
Timer (reduced): compile [ns] {Compiler}
1
476624699468
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
0
Number: #decisions {Compiler}
1
20
Counter: ratio of recomputed hypergraph cuts {Compiler}
38
23
0
1
0.605263
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
13
11
0
1
0.846154
Counter: #connected components {Compiler}
41
38
0
1
0.926829
Counter: #monotone residual formulae / #residual formulae {Compiler}
41
3
0
1
0.073171
Counter: monotone residual formula size {Compiler}
3
216
72
72
72.000000
Counter: #pure clauses / #clauses {Compiler}
41
3.217742
0.000000
1.000000
0.078482
Counter: pure residual formula size / residual formula size {Compiler}
41
3.151261
0.000000
1.000000
0.076860
Timer: assign literal [ns] {Compiler}
70
463393680255
920
228945371674
6619909717.928571
Timer: unassign literal [ns] {Compiler}
70
295670988
380
52720996
4223871.257143
Timer: get decision variable [ns] {Decision heuristic}
20
48136328
70
19350190
2406816.400000
Counter: #preselected variables {Decision heuristic}
20
2226685
1
885840
111334.250000
Counter: #restricted variables / #preselected variables {Decision heuristic}
11
0.008201
0.000034
0.002897
0.000746
Timer (reduced): initialize [ns] {SAT solver}
1
234145938
Timer (reduced): initial simplification [ns] {SAT solver}
1
1030
Timer (reduced): initially implied literals [ns] {SAT solver}
1
600
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
41
572152779
6230
127999303
13954945.829268
Timer: unit propagation [ns] {SAT solver}
41
109398
190
33389
2668.243902
Counter: #implied literals {SAT solver}
41
70
0
3
1.707317
Counter: #implied literals / #variables {SAT solver}
41
0.114124
0.000000
0.027027
0.002784
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
2
26381848
13059995
13321853
13190924.000000
Counter: #implicit implied literals / #variables {SAT solver}
2
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
2
0.000275
0.000000
0.000275
0.000137
Timer: compute cut [ns] {Partitioning hypergraph}
2
8454245
4074214
4380031
4227122.500000
Counter: cut size {Partitioning hypergraph}
2
21
10
11
10.500000
Counter: cut size / #variables {Partitioning hypergraph}
2
0.007800
0.003024
0.004776
0.003900
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
2
19005983
4556680
14449303
9502991.500000
Counter: #vertices {Partitioning hypergraph}
2
170
85
85
85.000000
Counter: #vertices / #clauses {Partitioning hypergraph}
2
0.065040
0.023637
0.041403
0.032520
Counter: #hyperedges {Partitioning hypergraph}
2
25
12
13
12.500000
Counter: #hyperedges / #variables {Partitioning hypergraph}
2
0.009305
0.003574
0.005731
0.004653
Counter: hypergraph size {Partitioning hypergraph}
2
753
336
417
376.500000
Counter: hypergraph size / formula size {Partitioning hypergraph}
2
0.047675
0.018202
0.029474
0.023838
Timer: create equivalence structure [ns] {Partitioning hypergraph}
2
670933
267447
403486
335466.500000
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
38
18
0
1
0.473684
Number: #current entries {Cache - component caching}
1
20
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
38
8975618320
76189
2982186095
236200482.105263
Timer: search cache record structure [ns] {Cache - component caching}
38
17010461
150
6099117
447643.710526
Timer: add cache record structure [ns] {Cache - component caching}
20
8089247
260
3040813
404462.350000
Counter: #empty cache records / #cache records {Cache - component caching}
38
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
38
32010269
224
9743235
842375.500000
Counter: formula size (positive hit) {Cache - component caching}
18
8586972
339
2952585
477054.000000
Counter: formula size (negative hit) {Cache - component caching}
20
23423297
224
9743235
1171164.850000
Counter: #variables (cache record structure) {Cache - component caching}
38
3143503
112
885840
82723.763158
Counter: #variables (positive hit) {Cache - component caching}
18
907344
150
295344
50408.000000
Counter: #variables (negative hit) {Cache - component caching}
20
2236159
112
885840
111807.950000
Counter: #clauses (cache record structure) {Cache - component caching}
38
3142019
76
885805
82684.710526
Counter: #clauses (positive hit) {Cache - component caching}
18
906642
115
295308
50369.000000
Counter: #clauses (negative hit) {Cache - component caching}
20
2235377
76
885805
111768.850000
Counter: #removed clauses / #clauses {Cache - component caching}
38
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
18
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
20
11010
50
1400
550.500000
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
20
20
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
