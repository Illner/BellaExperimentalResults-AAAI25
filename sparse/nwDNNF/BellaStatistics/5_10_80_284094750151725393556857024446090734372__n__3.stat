Number: formula size {Formula representation}
1
3000600
Number: #variables {Formula representation}
1
500150
Number: #clauses {Formula representation}
1
500280
Timer (reduced): initialize [ns] {Formula representation}
1
333290411
Timer: compute connected components [ns] {Formula representation}
199999
10902240357
3080
212651605
54511.474342
Number: circuit size {Circuit}
1
4164930
Number: #nodes {Circuit}
1
2023821
Number: #edges {Circuit}
1
4164930
Number: #variables {Circuit}
1
500150
Timer: copy subcircuit [ns] {Circuit}
0
0
0
0
0.000000
Counter: formula size (copy subcircuit) {Circuit}
0
0
0
0
0.000000
Counter: #variables (copy subcircuit) {Circuit}
0
0
0
0
0.000000
Counter: #clauses (copy subcircuit) {Circuit}
0
0
0
0
0.000000
Timer (reduced): initialize [ns] {Compiler}
1
334849755
Timer (reduced): compile [ns] {Compiler}
1
83827667461
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
0
Number: #decisions {Compiler}
1
99999
Counter: ratio of recomputed hypergraph cuts {Compiler}
99999
85978
0
1
0.859789
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
85978
199
0
1
0.002315
Counter: #connected components {Compiler}
199999
99999
0
1
0.499997
Counter: #monotone residual formulae / #residual formulae {Compiler}
199999
100000
0
1
0.500003
Counter: monotone residual formula size {Compiler}
100000
4038320
40
80
40.383200
Counter: #pure clauses / #clauses {Compiler}
199999
101104.589850
0.000000
1.000000
0.505525
Counter: pure residual formula size / residual formula size {Compiler}
199999
100808.678990
0.000000
1.000000
0.504046
Timer: assign literal [ns] {Compiler}
311549
43631504455
320
10256693768
140047.005303
Timer: unassign literal [ns] {Compiler}
311549
1306691902
170
26317188
4194.177808
Timer: get decision variable [ns] {Decision heuristic}
99999
75518324
39
9788776
755.190792
Counter: #preselected variables {Decision heuristic}
99999
6532968
1
500150
65.330333
Counter: #restricted variables / #preselected variables {Decision heuristic}
199
0.721687
0.000100
0.005871
0.003627
Timer (reduced): initialize [ns] {SAT solver}
1
140675365
Timer (reduced): initial simplification [ns] {SAT solver}
1
1090
Timer (reduced): initially implied literals [ns] {SAT solver}
1
720
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
199999
3558640977
2390
55895766
17793.293851
Timer: unit propagation [ns] {SAT solver}
199999
68286800
120
22429
341.435707
Counter: #implied literals {SAT solver}
199999
619982
0
10
3.099925
Counter: #implied literals / #variables {SAT solver}
199999
4005.381615
0.000000
0.047619
0.020027
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
85779
6902832467
23500
3590346
80472.288870
Counter: #implicit implied literals / #variables {SAT solver}
85779
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
85779
159.918541
0.000000
0.015625
0.001864
Timer: compute cut [ns] {Partitioning hypergraph}
1024
151092230
40779
387256
147551.005859
Counter: cut size {Partitioning hypergraph}
1024
14760
3
24
14.414062
Counter: cut size / #variables {Partitioning hypergraph}
1024
10.314238
0.003823
0.018433
0.010072
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
85779
3868724897
7980
5233769
45101.072489
Counter: #vertices {Partitioning hypergraph}
85779
110996
0
283
1.293976
Counter: #vertices / #clauses {Partitioning hypergraph}
85779
63.428085
0.000000
0.067460
0.000739
Counter: #hyperedges {Partitioning hypergraph}
85779
19901
0
29
0.232003
Counter: #hyperedges / #variables {Partitioning hypergraph}
85779
14.256811
0.000000
0.025346
0.000166
Counter: hypergraph size {Partitioning hypergraph}
85779
237711
0
589
2.771203
Counter: hypergraph size / formula size {Partitioning hypergraph}
85779
38.157559
0.000000
0.040441
0.000445
Timer: create equivalence structure [ns] {Partitioning hypergraph}
85779
1056584620
3620
538675
12317.520838
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
99999
0
0
0
0.000000
Number: #current entries {Cache - component caching}
1
99999
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
99999
7318409660
7730
41065427
73184.828448
Timer: search cache record structure [ns] {Cache - component caching}
99999
61383243
100
199888
613.838568
Timer: add cache record structure [ns] {Cache - component caching}
99999
68976538
130
1416036
689.772278
Counter: #empty cache records / #cache records {Cache - component caching}
99999
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
99999
110347879
128
3000600
1103.489825
Counter: formula size (positive hit) {Cache - component caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - component caching}
99999
110347879
128
3000600
1103.489825
Counter: #variables (cache record structure) {Cache - component caching}
99999
30928668
64
500150
309.289773
Counter: #variables (positive hit) {Cache - component caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - component caching}
99999
30928668
64
500150
309.289773
Counter: #clauses (cache record structure) {Cache - component caching}
99999
30323536
44
500280
303.238392
Counter: #clauses (positive hit) {Cache - component caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - component caching}
99999
30323536
44
500280
303.238392
Counter: #removed clauses / #clauses {Cache - component caching}
99999
13860.450159
0.004460
1.000000
0.138606
Counter: #identical mappings / #mappings {Cache - component caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
99999
4560453
20
4080
45.604986
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
99999
99999
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
