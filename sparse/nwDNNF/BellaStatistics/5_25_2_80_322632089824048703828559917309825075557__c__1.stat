Number: formula size {Formula representation}
1
4840
Number: #variables {Formula representation}
1
870
Number: #clauses {Formula representation}
1
820
Timer (reduced): initialize [ns] {Formula representation}
1
784519
Timer: compute connected components [ns] {Formula representation}
11
1089479
7340
323640
99043.545455
Number: circuit size {Circuit}
1
3394
Number: #nodes {Circuit}
1
2807
Number: #edges {Circuit}
1
3394
Number: #variables {Circuit}
1
870
Timer: copy subcircuit [ns] {Circuit}
4
593619
39550
283049
148404.750000
Counter: formula size (copy subcircuit) {Circuit}
4
4456
212
2480
1114.000000
Counter: #variables (copy subcircuit) {Circuit}
4
1168
106
530
292.000000
Counter: #clauses (copy subcircuit) {Circuit}
4
984
72
480
246.000000
Timer (reduced): initialize [ns] {Compiler}
1
12877586
Timer (reduced): compile [ns] {Compiler}
1
8450821
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
0
Number: #decisions {Compiler}
1
5
Counter: ratio of recomputed hypergraph cuts {Compiler}
9
1
0
1
0.111111
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
1
0
0
0
0.000000
Counter: #connected components {Compiler}
11
9
0
1
0.818182
Counter: #monotone residual formulae / #residual formulae {Compiler}
11
2
0
1
0.181818
Counter: monotone residual formula size {Compiler}
2
136
68
68
68.000000
Counter: #pure clauses / #clauses {Compiler}
11
2.363636
0.000000
1.000000
0.214876
Counter: pure residual formula size / residual formula size {Compiler}
11
2.262295
0.000000
1.000000
0.205663
Timer: assign literal [ns] {Compiler}
20
346129
890
108420
17306.450000
Timer: unassign literal [ns] {Compiler}
20
73370
310
13440
3668.500000
Timer: get decision variable [ns] {Decision heuristic}
5
6110
70
5530
1222.000000
Counter: #preselected variables {Decision heuristic}
5
15
1
5
3.000000
Counter: #restricted variables / #preselected variables {Decision heuristic}
0
0.000000
0.000000
0.000000
0.000000
Timer (reduced): initialize [ns] {SAT solver}
1
436019
Timer (reduced): initial simplification [ns] {SAT solver}
1
640
Timer (reduced): initially implied literals [ns] {SAT solver}
1
450
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
11
293588
5980
64919
26689.818182
Timer: unit propagation [ns] {SAT solver}
11
5070
110
1200
460.909091
Counter: #implied literals {SAT solver}
11
20
0
2
1.818182
Counter: #implied literals / #variables {SAT solver}
11
0.103369
0.000000
0.028571
0.009397
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
1
389649
389649
389649
389649.000000
Counter: #implicit implied literals / #variables {SAT solver}
1
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
1
0.005747
0.005747
0.005747
0.005747
Timer: compute cut [ns] {Partitioning hypergraph}
1
659300
659300
659300
659300.000000
Counter: cut size {Partitioning hypergraph}
1
5
5
5
5.000000
Counter: cut size / #variables {Partitioning hypergraph}
1
0.005747
0.005747
0.005747
0.005747
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
1
1029119
1029119
1029119
1029119.000000
Counter: #vertices {Partitioning hypergraph}
1
5
5
5
5.000000
Counter: #vertices / #clauses {Partitioning hypergraph}
1
0.006098
0.006098
0.006098
0.006098
Counter: #hyperedges {Partitioning hypergraph}
1
5
5
5
5.000000
Counter: #hyperedges / #variables {Partitioning hypergraph}
1
0.005747
0.005747
0.005747
0.005747
Counter: hypergraph size {Partitioning hypergraph}
1
20
20
20
20.000000
Counter: hypergraph size / formula size {Partitioning hypergraph}
1
0.004132
0.004132
0.004132
0.004132
Timer: create equivalence structure [ns] {Partitioning hypergraph}
1
66100
66100
66100
66100.000000
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
9
4
0
1
0.444444
Number: #current entries {Cache - component caching}
1
5
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
9
3333628
67090
1047849
370403.111111
Timer: search cache record structure [ns] {Cache - component caching}
9
13850
160
6960
1538.888889
Timer: add cache record structure [ns] {Cache - component caching}
5
7120
360
3480
1424.000000
Counter: #empty cache records / #cache records {Cache - component caching}
9
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
9
13752
212
4840
1528.000000
Counter: formula size (positive hit) {Cache - component caching}
4
4456
212
2480
1114.000000
Counter: formula size (negative hit) {Cache - component caching}
5
9296
212
4840
1859.200000
Counter: #variables (cache record structure) {Cache - component caching}
9
3206
106
870
356.222222
Counter: #variables (positive hit) {Cache - component caching}
4
1168
106
530
292.000000
Counter: #variables (negative hit) {Cache - component caching}
5
2038
106
870
407.600000
Counter: #clauses (cache record structure) {Cache - component caching}
9
2788
72
820
309.777778
Counter: #clauses (positive hit) {Cache - component caching}
4
984
72
480
246.000000
Counter: #clauses (negative hit) {Cache - component caching}
5
1804
72
820
360.800000
Counter: #removed clauses / #clauses {Cache - component caching}
9
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
4
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
5
800
40
440
160.000000
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
5
5
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
