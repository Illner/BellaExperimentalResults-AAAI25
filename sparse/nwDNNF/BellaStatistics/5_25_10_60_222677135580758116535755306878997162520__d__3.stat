Number: formula size {Formula representation}
1
1253100
Number: #variables {Formula representation}
1
250350
Number: #clauses {Formula representation}
1
251430
Timer (reduced): initialize [ns] {Formula representation}
1
148603567
Timer: compute connected components [ns] {Formula representation}
99
424032368
610
28196841
4283155.232323
Number: circuit size {Circuit}
1
156966430
Number: #nodes {Circuit}
1
52896919
Number: #edges {Circuit}
1
156966430
Number: #variables {Circuit}
1
250350
Timer: copy subcircuit [ns] {Circuit}
285
40101182829
16380
4390372923
140705904.663158
Counter: formula size (copy subcircuit) {Circuit}
285
5541480
120
470980
19443.789474
Counter: #variables (copy subcircuit) {Circuit}
285
1177320
20
97330
4130.947368
Counter: #clauses (copy subcircuit) {Circuit}
285
1217388
56
98374
4271.536842
Timer (reduced): initialize [ns] {Compiler}
1
160204669
Timer (reduced): compile [ns] {Compiler}
1
59662773341
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
10
Number: #splits {Compiler}
1
270
Number: #decisions {Compiler}
1
54
Counter: ratio of recomputed hypergraph cuts {Compiler}
339
311
0
1
0.917404
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
33
30
0
1
0.909091
Counter: #connected components {Compiler}
99
339
1
13
3.424242
Counter: #monotone residual formulae / #residual formulae {Compiler}
99
0
0
0
0.000000
Counter: monotone residual formula size {Compiler}
0
0
0
0
0.000000
Counter: #pure clauses / #clauses {Compiler}
99
0.000000
0.000000
0.000000
0.000000
Counter: pure residual formula size / residual formula size {Compiler}
99
0.000000
0.000000
0.000000
0.000000
Timer: assign literal [ns] {Compiler}
168
8609732308
220
1609952244
51248406.595238
Timer: unassign literal [ns] {Compiler}
168
181268964
240
15915126
1078981.928571
Timer: get decision variable [ns] {Decision heuristic}
54
88820295
60
10237606
1644820.277778
Counter: #preselected variables {Decision heuristic}
54
2397573
2
250350
44399.500000
Counter: #restricted variables / #preselected variables {Decision heuristic}
0
0.000000
0.000000
0.000000
0.000000
Timer (reduced): initialize [ns] {SAT solver}
1
56427270
Timer (reduced): initial simplification [ns] {SAT solver}
1
1100
Timer (reduced): initially implied literals [ns] {SAT solver}
1
620
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
109
617858893
460
41913878
5668430.211009
Timer: unit propagation [ns] {SAT solver}
109
192110
120
44190
1762.477064
Counter: #implied literals {SAT solver}
109
336
0
10
3.082569
Counter: #implied literals / #variables {SAT solver}
109
6.149310
0.000000
1.000000
0.056416
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
254
11885059
10940
3380752
46791.570866
Counter: #implicit implied literals / #variables {SAT solver}
254
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
254
0.000000
0.000000
0.000000
0.000000
Timer: compute cut [ns] {Partitioning hypergraph}
3
467187509
503492
413500078
155729169.666667
Counter: cut size {Partitioning hypergraph}
3
37
10
17
12.333333
Counter: cut size / #variables {Partitioning hypergraph}
3
0.510541
0.003645
0.500000
0.170180
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
3
17904174
42750
15685776
5968058.000000
Counter: #vertices {Partitioning hypergraph}
3
5777
11
4442
1925.666667
Counter: #vertices / #clauses {Partitioning hypergraph}
3
1.675384
0.196429
0.801371
0.558461
Counter: #hyperedges {Partitioning hypergraph}
3
397
10
247
132.333333
Counter: #hyperedges / #variables {Partitioning hypergraph}
3
0.649511
0.052959
0.500000
0.216504
Counter: hypergraph size {Partitioning hypergraph}
3
14634
20
11864
4878.000000
Counter: hypergraph size / formula size {Partitioning hypergraph}
3
1.325471
0.166667
0.641887
0.441824
Timer: create equivalence structure [ns] {Partitioning hypergraph}
3
1231365
5040
928524
410455.000000
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
339
285
0
1
0.840708
Number: #current entries {Cache - component caching}
1
54
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
339
8969127670
2300
960532119
26457603.746313
Timer: search cache record structure [ns] {Cache - component caching}
339
10215396
40
1055484
30133.911504
Timer: add cache record structure [ns] {Cache - component caching}
54
6483606
210
1071264
120066.777778
Counter: #empty cache records / #cache records {Cache - component caching}
339
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
339
17441532
8
1253100
51449.946903
Counter: formula size (positive hit) {Cache - component caching}
285
5541480
120
470980
19443.789474
Counter: formula size (negative hit) {Cache - component caching}
54
11900052
8
1253100
220371.333333
Counter: #variables (cache record structure) {Cache - component caching}
339
3603558
4
250350
10629.964602
Counter: #variables (positive hit) {Cache - component caching}
285
1177320
20
97330
4130.947368
Counter: #variables (negative hit) {Cache - component caching}
54
2426238
4
250350
44930.333333
Counter: #clauses (cache record structure) {Cache - component caching}
339
3683550
4
251430
10865.929204
Counter: #clauses (positive hit) {Cache - component caching}
285
1217388
56
98374
4271.536842
Counter: #clauses (negative hit) {Cache - component caching}
54
2466162
4
251430
45669.666667
Counter: #removed clauses / #clauses {Cache - component caching}
339
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
285
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
54
22180
30
1440
410.740741
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
54
54
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
