Number: formula size {Formula representation}
1
25680
Number: #variables {Formula representation}
1
2610
Number: #clauses {Formula representation}
1
2600
Timer (reduced): initialize [ns] {Formula representation}
1
4673993
Timer: compute connected components [ns] {Formula representation}
21
2872522
1150
1016364
136786.761905
Number: circuit size {Circuit}
1
27890
Number: #nodes {Circuit}
1
16735
Number: #edges {Circuit}
1
27890
Number: #variables {Circuit}
1
2610
Timer: copy subcircuit [ns] {Circuit}
9
3919736
8229
2026718
435526.222222
Counter: formula size (copy subcircuit) {Circuit}
9
21628
44
11592
2403.111111
Counter: #variables (copy subcircuit) {Circuit}
9
2940
22
1326
326.666667
Counter: #clauses (copy subcircuit) {Circuit}
9
2856
16
1316
317.333333
Timer (reduced): initialize [ns] {Compiler}
1
5500698
Timer (reduced): compile [ns] {Compiler}
1
31530799
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
0
Number: #decisions {Compiler}
1
10
Counter: ratio of recomputed hypergraph cuts {Compiler}
19
3
0
1
0.157895
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
2
0
0
0
0.000000
Counter: #connected components {Compiler}
21
19
0
1
0.904762
Counter: #monotone residual formulae / #residual formulae {Compiler}
21
2
0
1
0.095238
Counter: monotone residual formula size {Compiler}
2
24
12
12
12.000000
Counter: #pure clauses / #clauses {Compiler}
21
2.355556
0.000000
1.000000
0.112169
Counter: pure residual formula size / residual formula size {Compiler}
21
2.257576
0.000000
1.000000
0.107504
Timer: assign literal [ns] {Compiler}
40
4873182
400
2046718
121829.550000
Timer: unassign literal [ns] {Compiler}
40
311369
220
69230
7784.225000
Timer: get decision variable [ns] {Decision heuristic}
10
1900
40
860
190.000000
Counter: #preselected variables {Decision heuristic}
10
46
1
9
4.600000
Counter: #restricted variables / #preselected variables {Decision heuristic}
0
0.000000
0.000000
0.000000
0.000000
Timer (reduced): initialize [ns] {SAT solver}
1
982015
Timer (reduced): initial simplification [ns] {SAT solver}
1
410
Timer (reduced): initially implied literals [ns] {SAT solver}
1
210
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
21
601187
1440
135359
28627.952381
Timer: unit propagation [ns] {SAT solver}
21
8880
140
2800
422.857143
Counter: #implied literals {SAT solver}
21
40
0
2
1.904762
Counter: #implied literals / #variables {SAT solver}
21
0.593453
0.000000
0.142857
0.028260
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
3
1392942
10610
1370452
464314.000000
Counter: #implicit implied literals / #variables {SAT solver}
3
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
3
0.094741
0.003831
0.045455
0.031580
Timer: compute cut [ns] {Partitioning hypergraph}
1
661996
661996
661996
661996.000000
Counter: cut size {Partitioning hypergraph}
1
9
9
9
9.000000
Counter: cut size / #variables {Partitioning hypergraph}
1
0.003448
0.003448
0.003448
0.003448
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
2
5426329
5120
5421209
2713164.500000
Counter: #vertices {Partitioning hypergraph}
2
5
0
5
2.500000
Counter: #vertices / #clauses {Partitioning hypergraph}
2
0.001923
0.000000
0.001923
0.000962
Counter: #hyperedges {Partitioning hypergraph}
2
10
0
10
5.000000
Counter: #hyperedges / #variables {Partitioning hypergraph}
2
0.003831
0.000000
0.003831
0.001916
Counter: hypergraph size {Partitioning hypergraph}
2
40
0
40
20.000000
Counter: hypergraph size / formula size {Partitioning hypergraph}
2
0.001558
0.000000
0.001558
0.000779
Timer: create equivalence structure [ns] {Partitioning hypergraph}
2
210249
1840
208409
105124.500000
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
19
9
0
1
0.473684
Number: #current entries {Cache - component caching}
1
10
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
19
10087113
12420
3440330
530900.684211
Timer: search cache record structure [ns] {Cache - component caching}
19
19770
50
8680
1040.526316
Timer: add cache record structure [ns] {Cache - component caching}
10
9120
150
3330
912.000000
Counter: #empty cache records / #cache records {Cache - component caching}
19
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
19
68936
44
25680
3628.210526
Counter: formula size (positive hit) {Cache - component caching}
9
21628
44
11592
2403.111111
Counter: formula size (negative hit) {Cache - component caching}
10
47308
44
25680
4730.800000
Counter: #variables (cache record structure) {Cache - component caching}
19
8490
22
2610
446.842105
Counter: #variables (positive hit) {Cache - component caching}
9
2940
22
1326
326.666667
Counter: #variables (negative hit) {Cache - component caching}
10
5550
22
2610
555.000000
Counter: #clauses (cache record structure) {Cache - component caching}
19
8312
16
2600
437.473684
Counter: #clauses (positive hit) {Cache - component caching}
9
2856
16
1316
317.333333
Counter: #clauses (negative hit) {Cache - component caching}
10
5456
16
2600
545.600000
Counter: #removed clauses / #clauses {Cache - component caching}
19
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
9
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
10
550
20
150
55.000000
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
10
10
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
