Number: formula size {Formula representation}
1
466800
Number: #variables {Formula representation}
1
77880
Number: #clauses {Formula representation}
1
77870
Timer (reduced): initialize [ns] {Formula representation}
1
44807437
Timer: compute connected components [ns] {Formula representation}
51
161218067
7760
25113110
3161138.568627
Number: circuit size {Circuit}
1
606256
Number: #nodes {Circuit}
1
284579
Number: #edges {Circuit}
1
606256
Number: #variables {Circuit}
1
77880
Timer: copy subcircuit [ns] {Circuit}
20
115347579
130469
19919195
5767378.950000
Counter: formula size (copy subcircuit) {Circuit}
20
682800
804
105168
34140.000000
Counter: #variables (copy subcircuit) {Circuit}
20
133470
306
19548
6673.500000
Counter: #clauses (copy subcircuit) {Circuit}
20
132860
274
19528
6643.000000
Timer (reduced): initialize [ns] {Compiler}
1
44331151
Timer (reduced): compile [ns] {Compiler}
1
2438180311
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
0
Number: #decisions {Compiler}
1
25
Counter: ratio of recomputed hypergraph cuts {Compiler}
45
25
0
1
0.555556
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
15
11
0
1
0.733333
Counter: #connected components {Compiler}
51
45
0
1
0.882353
Counter: #monotone residual formulae / #residual formulae {Compiler}
51
6
0
1
0.117647
Counter: monotone residual formula size {Compiler}
6
504
84
84
84.000000
Counter: #pure clauses / #clauses {Compiler}
51
6.369863
0.000000
1.000000
0.124899
Counter: pure residual formula size / residual formula size {Compiler}
51
6.257143
0.000000
1.000000
0.122689
Timer: assign literal [ns] {Compiler}
80
1207209403
880
296187101
15090117.537500
Timer: unassign literal [ns] {Compiler}
80
15571824
340
2651266
194647.800000
Timer: get decision variable [ns] {Decision heuristic}
25
6425305
70
1607856
257012.200000
Counter: #preselected variables {Decision heuristic}
25
347962
1
77880
13918.480000
Counter: #restricted variables / #preselected variables {Decision heuristic}
11
0.014552
0.000385
0.003275
0.001323
Timer (reduced): initialize [ns] {SAT solver}
1
17562485
Timer (reduced): initial simplification [ns] {SAT solver}
1
1220
Timer (reduced): initially implied literals [ns] {SAT solver}
1
890
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
51
58986652
17540
7604874
1156601.019608
Timer: unit propagation [ns] {SAT solver}
51
54729
140
8519
1073.117647
Counter: #implied literals {SAT solver}
51
110
0
6
2.156863
Counter: #implied literals / #variables {SAT solver}
51
0.148822
0.000000
0.023256
0.002918
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
4
2974884
100969
2073152
743721.000000
Counter: #implicit implied literals / #variables {SAT solver}
4
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
4
0.007692
0.000000
0.007692
0.001923
Timer: compute cut [ns] {Partitioning hypergraph}
2
9138051
2799546
6338505
4569025.500000
Counter: cut size {Partitioning hypergraph}
2
21
8
13
10.500000
Counter: cut size / #variables {Partitioning hypergraph}
2
0.008738
0.002786
0.005952
0.004369
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
4
7719883
16720
7053048
1929970.750000
Counter: #vertices {Partitioning hypergraph}
4
221
0
183
55.250000
Counter: #vertices / #clauses {Partitioning hypergraph}
4
0.068649
0.000000
0.039508
0.017162
Counter: #hyperedges {Partitioning hypergraph}
4
29
0
17
7.250000
Counter: #hyperedges / #variables {Partitioning hypergraph}
4
0.012572
0.000000
0.008929
0.003143
Counter: hypergraph size {Partitioning hypergraph}
4
641
0
557
160.250000
Counter: hypergraph size / formula size {Partitioning hypergraph}
4
0.042666
0.000000
0.025717
0.010666
Timer: create equivalence structure [ns] {Partitioning hypergraph}
4
522236
9230
397027
130559.000000
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
45
20
0
1
0.444444
Number: #current entries {Cache - component caching}
1
25
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
45
781249487
77719
167769777
17361099.711111
Timer: search cache record structure [ns] {Cache - component caching}
45
686192
140
176358
15248.711111
Timer: add cache record structure [ns] {Cache - component caching}
25
1106449
250
660794
44257.960000
Counter: #empty cache records / #cache records {Cache - component caching}
45
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
45
2797250
260
466800
62161.111111
Counter: formula size (positive hit) {Cache - component caching}
20
682800
804
105168
34140.000000
Counter: formula size (negative hit) {Cache - component caching}
25
2114450
260
466800
84578.000000
Counter: #variables (cache record structure) {Cache - component caching}
45
500840
130
77880
11129.777778
Counter: #variables (positive hit) {Cache - component caching}
20
133470
306
19548
6673.500000
Counter: #variables (negative hit) {Cache - component caching}
25
367370
130
77880
14694.800000
Counter: #clauses (cache record structure) {Cache - component caching}
45
499420
88
77870
11098.222222
Counter: #clauses (positive hit) {Cache - component caching}
20
132860
274
19528
6643.000000
Counter: #clauses (negative hit) {Cache - component caching}
25
366560
88
77870
14662.400000
Counter: #removed clauses / #clauses {Cache - component caching}
45
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
20
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
25
11060
40
1240
442.400000
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
25
25
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
