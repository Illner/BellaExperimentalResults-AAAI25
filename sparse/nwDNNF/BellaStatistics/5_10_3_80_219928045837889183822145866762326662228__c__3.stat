Number: formula size {Formula representation}
1
14655
Number: #variables {Formula representation}
1
2490
Number: #clauses {Formula representation}
1
2465
Timer (reduced): initialize [ns] {Formula representation}
1
1977903
Timer: compute connected components [ns] {Formula representation}
25
3373019
3650
1133590
134920.760000
Number: circuit size {Circuit}
1
13798
Number: #nodes {Circuit}
1
9188
Number: #edges {Circuit}
1
13798
Number: #variables {Circuit}
1
2490
Timer: copy subcircuit [ns] {Circuit}
8
1626947
13740
610865
203368.375000
Counter: formula size (copy subcircuit) {Circuit}
8
12418
134
4110
1552.250000
Counter: #variables (copy subcircuit) {Circuit}
8
2978
67
864
372.250000
Counter: #clauses (copy subcircuit) {Circuit}
8
2774
46
838
346.750000
Timer (reduced): initialize [ns] {Compiler}
1
4254363
Timer (reduced): compile [ns] {Compiler}
1
36417746
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
0
Number: #decisions {Compiler}
1
12
Counter: ratio of recomputed hypergraph cuts {Compiler}
20
4
0
1
0.200000
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
2
0
0
0
0.000000
Counter: #connected components {Compiler}
25
20
0
1
0.800000
Counter: #monotone residual formulae / #residual formulae {Compiler}
25
5
0
1
0.200000
Counter: monotone residual formula size {Compiler}
5
192
36
42
38.400000
Counter: #pure clauses / #clauses {Compiler}
25
5.655293
0.000000
1.000000
0.226212
Counter: pure residual formula size / residual formula size {Compiler}
25
5.474666
0.000000
1.000000
0.218987
Timer: assign literal [ns] {Compiler}
42
1797175
620
761423
42789.880952
Timer: unassign literal [ns] {Compiler}
42
277619
210
66620
6609.976190
Timer: get decision variable [ns] {Decision heuristic}
12
2590
60
1080
215.833333
Counter: #preselected variables {Decision heuristic}
12
72
1
13
6.000000
Counter: #restricted variables / #preselected variables {Decision heuristic}
0
0.000000
0.000000
0.000000
0.000000
Timer (reduced): initialize [ns] {SAT solver}
1
765903
Timer (reduced): initial simplification [ns] {SAT solver}
1
570
Timer (reduced): initially implied literals [ns] {SAT solver}
1
340
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
25
680036
2440
141209
27201.440000
Timer: unit propagation [ns] {SAT solver}
25
9470
80
3320
378.800000
Counter: #implied literals {SAT solver}
25
42
0
3
1.680000
Counter: #implied literals / #variables {SAT solver}
25
0.322528
0.000000
0.052632
0.012901
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
4
1198760
25230
1119090
299690.000000
Counter: #implicit implied literals / #variables {SAT solver}
4
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
4
0.044776
0.000000
0.014925
0.011194
Timer: compute cut [ns] {Partitioning hypergraph}
1
11555371
11555371
11555371
11555371.000000
Counter: cut size {Partitioning hypergraph}
1
13
13
13
13.000000
Counter: cut size / #variables {Partitioning hypergraph}
1
0.005221
0.005221
0.005221
0.005221
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
2
4380932
10690
4370242
2190466.000000
Counter: #vertices {Partitioning hypergraph}
2
329
0
329
164.500000
Counter: #vertices / #clauses {Partitioning hypergraph}
2
0.133469
0.000000
0.133469
0.066734
Counter: #hyperedges {Partitioning hypergraph}
2
15
0
15
7.500000
Counter: #hyperedges / #variables {Partitioning hypergraph}
2
0.006024
0.000000
0.006024
0.003012
Counter: hypergraph size {Partitioning hypergraph}
2
1311
0
1311
655.500000
Counter: hypergraph size / formula size {Partitioning hypergraph}
2
0.089458
0.000000
0.089458
0.044729
Timer: create equivalence structure [ns] {Partitioning hypergraph}
2
207568
5540
202028
103784.000000
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
20
8
0
1
0.400000
Number: #current entries {Cache - component caching}
1
12
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
20
9887460
35289
2917615
494373.000000
Timer: search cache record structure [ns] {Cache - component caching}
20
19960
120
5030
998.000000
Timer: add cache record structure [ns] {Cache - component caching}
12
9239
140
2230
769.916667
Counter: #empty cache records / #cache records {Cache - component caching}
20
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
20
47957
116
14655
2397.850000
Counter: formula size (positive hit) {Cache - component caching}
8
12418
134
4110
1552.250000
Counter: formula size (negative hit) {Cache - component caching}
12
35539
116
14655
2961.583333
Counter: #variables (cache record structure) {Cache - component caching}
20
9931
58
2490
496.550000
Counter: #variables (positive hit) {Cache - component caching}
8
2978
67
864
372.250000
Counter: #variables (negative hit) {Cache - component caching}
12
6953
58
2490
579.416667
Counter: #clauses (cache record structure) {Cache - component caching}
20
9425
40
2465
471.250000
Counter: #clauses (positive hit) {Cache - component caching}
8
2774
46
838
346.750000
Counter: #clauses (negative hit) {Cache - component caching}
12
6651
40
2465
554.250000
Counter: #removed clauses / #clauses {Cache - component caching}
20
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
8
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
12
740
30
220
61.666667
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
12
12
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
