Number: formula size {Formula representation}
1
1000600
Number: #variables {Formula representation}
1
200300
Number: #clauses {Formula representation}
1
200280
Timer (reduced): initialize [ns] {Formula representation}
1
112929482
Timer: compute connected components [ns] {Formula representation}
199999
34582565710
17090
59205349
172913.693118
Number: circuit size {Circuit}
1
12229384
Number: #nodes {Circuit}
1
1131498
Number: #edges {Circuit}
1
12229384
Number: #variables {Circuit}
1
200300
Timer: copy subcircuit [ns] {Circuit}
0
0
0
0
0.000000
Counter: formula size (copy subcircuit) {Circuit}
0
0
0
0
0.000000
Counter: #variables (copy subcircuit) {Circuit}
0
0
0
0
0.000000
Counter: #clauses (copy subcircuit) {Circuit}
0
0
0
0
0.000000
Timer (reduced): initialize [ns] {Compiler}
1
114573498
Timer (reduced): compile [ns] {Compiler}
1
139429007409
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
0
Number: #decisions {Compiler}
1
99999
Counter: ratio of recomputed hypergraph cuts {Compiler}
99999
83046
0
1
0.830468
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
83046
999
0
1
0.012029
Counter: #connected components {Compiler}
199999
99999
0
1
0.499997
Counter: #monotone residual formulae / #residual formulae {Compiler}
199999
100000
0
1
0.500003
Counter: monotone residual formula size {Compiler}
100000
20000000
200
200
200.000000
Counter: #pure clauses / #clauses {Compiler}
199999
101410.838050
0.000000
1.000000
0.507057
Counter: pure residual formula size / residual formula size {Compiler}
199999
100992.917315
0.000000
1.000000
0.504967
Timer: assign literal [ns] {Compiler}
314633
14107921083
1080
799964420
44839.292391
Timer: unassign literal [ns] {Compiler}
314633
3765646638
270
10284146
11968.377882
Timer: get decision variable [ns] {Decision heuristic}
99999
107450577
50
1448957
1074.516515
Counter: #preselected variables {Decision heuristic}
99999
13526881
1
200300
135.270163
Counter: #restricted variables / #preselected variables {Decision heuristic}
999
2.845318
0.000250
0.003997
0.002848
Timer (reduced): initialize [ns] {SAT solver}
1
47203348
Timer (reduced): initial simplification [ns] {SAT solver}
1
1230
Timer (reduced): initially implied literals [ns] {SAT solver}
1
820
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
199999
10966167400
10110
25796369
54831.111156
Timer: unit propagation [ns] {SAT solver}
199999
86591702
150
188909
432.960675
Counter: #implied literals {SAT solver}
199999
587759
0
10
2.938810
Counter: #implied literals / #variables {SAT solver}
199999
864.719655
0.000000
0.009901
0.004324
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
82047
25635507806
117370
4129281
312449.057321
Counter: #implicit implied literals / #variables {SAT solver}
82047
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
82047
44.409373
0.000000
0.003460
0.000541
Timer: compute cut [ns] {Partitioning hypergraph}
1012
139039324
37580
1359776
137390.636364
Counter: cut size {Partitioning hypergraph}
1012
16143
2
19
15.951581
Counter: cut size / #variables {Partitioning hypergraph}
1012
3.536290
0.002817
0.004225
0.003494
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
82047
10359017211
33690
3715141
126257.111302
Counter: #vertices {Partitioning hypergraph}
82047
102048
0
102
1.243775
Counter: #vertices / #clauses {Partitioning hypergraph}
82047
22.695108
0.000000
0.022606
0.000277
Counter: #hyperedges {Partitioning hypergraph}
82047
20048
0
20
0.244348
Counter: #hyperedges / #variables {Partitioning hypergraph}
82047
4.406000
0.000000
0.005634
0.000054
Counter: hypergraph size {Partitioning hypergraph}
82047
220108
0
220
2.682706
Counter: hypergraph size / formula size {Partitioning hypergraph}
82047
13.442229
0.000000
0.013382
0.000164
Timer: create equivalence structure [ns] {Partitioning hypergraph}
82047
3845812535
16340
689768
46873.286470
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
99999
0
0
0
0.000000
Number: #current entries {Cache - component caching}
1
99999
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
99999
22416826917
42980
13009469
224170.510875
Timer: search cache record structure [ns] {Cache - component caching}
99999
122363254
160
192030
1223.644776
Timer: add cache record structure [ns] {Cache - component caching}
99999
144801588
320
1219427
1448.030360
Counter: #empty cache records / #cache records {Cache - component caching}
99999
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
99999
311359602
608
1000600
3113.627156
Counter: formula size (positive hit) {Cache - component caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - component caching}
99999
311359602
608
1000600
3113.627156
Counter: #variables (cache record structure) {Cache - component caching}
99999
102651954
304
200300
1026.529805
Counter: #variables (positive hit) {Cache - component caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - component caching}
99999
102651954
304
200300
1026.529805
Counter: #clauses (cache record structure) {Cache - component caching}
99999
93201185
204
200280
932.021170
Counter: #clauses (positive hit) {Cache - component caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - component caching}
99999
93201185
204
200280
932.021170
Counter: #removed clauses / #clauses {Cache - component caching}
99999
3101.794275
0.013921
1.000000
0.031018
Counter: #identical mappings / #mappings {Cache - component caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
99999
6451542
20
3780
64.516065
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
99999
99999
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
