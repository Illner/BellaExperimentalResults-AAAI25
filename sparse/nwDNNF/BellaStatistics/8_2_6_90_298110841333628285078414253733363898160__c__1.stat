Number: formula size {Formula representation}
1
30233436
Number: #variables {Formula representation}
1
3359340
Number: #clauses {Formula representation}
1
3359392
Timer (reduced): initialize [ns] {Formula representation}
1
3211019016
Timer: compute connected components [ns] {Formula representation}
71
9625690064
2840
2075303477
135573099.492958
Number: circuit size {Circuit}
1
13660884
Number: #nodes {Circuit}
1
11869507
Number: #edges {Circuit}
1
13660884
Number: #variables {Circuit}
1
3359340
Timer: copy subcircuit [ns] {Circuit}
30
5820694627
524799
1070164095
194023154.233333
Counter: formula size (copy subcircuit) {Circuit}
30
26206920
264
4479264
873564.000000
Counter: #variables (copy subcircuit) {Circuit}
30
3360780
96
559956
112026.000000
Counter: #clauses (copy subcircuit) {Circuit}
30
3361470
94
560004
112049.000000
Timer (reduced): initialize [ns] {Compiler}
1
4787692083
Timer (reduced): compile [ns] {Compiler}
1
3639600064045
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
0
Number: #decisions {Compiler}
1
35
Counter: ratio of recomputed hypergraph cuts {Compiler}
65
42
0
1
0.646154
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
22
20
0
1
0.909091
Counter: #connected components {Compiler}
71
65
0
1
0.915493
Counter: #monotone residual formulae / #residual formulae {Compiler}
71
6
0
1
0.084507
Counter: monotone residual formula size {Compiler}
6
144
24
24
24.000000
Counter: #pure clauses / #clauses {Compiler}
71
6.000002
0.000000
1.000000
0.084507
Counter: pure residual formula size / residual formula size {Compiler}
71
6.000000
0.000000
1.000000
0.084507
Timer: assign literal [ns] {Compiler}
112
3524477209702
650
1690590483112
31468546515.196429
Timer: unassign literal [ns] {Compiler}
112
2374895384
400
514254435
21204423.071429
Timer: get decision variable [ns] {Decision heuristic}
35
580875798
60
167774368
16596451.371429
Counter: #preselected variables {Decision heuristic}
35
13428146
1
3359328
383661.314286
Counter: #restricted variables / #preselected variables {Decision heuristic}
20
0.015094
0.000013
0.003820
0.000755
Timer (reduced): initialize [ns] {SAT solver}
1
1528292117
Timer (reduced): initial simplification [ns] {SAT solver}
1
2160
Timer (reduced): initially implied literals [ns] {SAT solver}
1
1490
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
71
7242808581
103690
1059403087
102011388.464789
Timer: unit propagation [ns] {SAT solver}
71
383780
210
64430
5405.352113
Counter: #implied literals {SAT solver}
71
154
0
6
2.169014
Counter: #implied literals / #variables {SAT solver}
71
0.470580
0.000000
0.076923
0.006628
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
7
32238600
1139788
8498350
4605514.285714
Counter: #implicit implied literals / #variables {SAT solver}
7
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
7
0.025000
0.000000
0.025000
0.003571
Timer: compute cut [ns] {Partitioning hypergraph}
1
8390750
8390750
8390750
8390750.000000
Counter: cut size {Partitioning hypergraph}
1
14
14
14
14.000000
Counter: cut size / #variables {Partitioning hypergraph}
1
0.005303
0.005303
0.005303
0.005303
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
2
3350945
10240
3340705
1675472.500000
Counter: #vertices {Partitioning hypergraph}
2
219
0
219
109.500000
Counter: #vertices / #clauses {Partitioning hypergraph}
2
0.082393
0.000000
0.082393
0.041196
Counter: #hyperedges {Partitioning hypergraph}
2
18
0
18
9.000000
Counter: #hyperedges / #variables {Partitioning hypergraph}
2
0.006818
0.000000
0.006818
0.003409
Counter: hypergraph size {Partitioning hypergraph}
2
666
0
666
333.000000
Counter: hypergraph size / formula size {Partitioning hypergraph}
2
0.050824
0.000000
0.050824
0.025412
Timer: create equivalence structure [ns] {Partitioning hypergraph}
2
408790
4130
404660
204395.000000
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
65
30
0
1
0.461538
Number: #current entries {Cache - component caching}
1
35
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
65
82825218816
26580
20972635358
1274234135.630769
Timer: search cache record structure [ns] {Cache - component caching}
65
55287025
130
7883569
850569.615385
Timer: add cache record structure [ns] {Cache - component caching}
35
50922030
920
10073889
1454915.142857
Counter: #empty cache records / #cache records {Cache - component caching}
65
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
65
144457750
80
30233424
2222426.923077
Counter: formula size (positive hit) {Cache - component caching}
30
26206920
264
4479264
873564.000000
Counter: formula size (negative hit) {Cache - component caching}
35
118250830
80
30233424
3378595.142857
Counter: #variables (cache record structure) {Cache - component caching}
65
16799620
40
3359328
258455.692308
Counter: #variables (positive hit) {Cache - component caching}
30
3360780
96
559956
112026.000000
Counter: #variables (negative hit) {Cache - component caching}
35
13438840
40
3359328
383966.857143
Counter: #clauses (cache record structure) {Cache - component caching}
65
16801080
28
3359386
258478.153846
Counter: #clauses (positive hit) {Cache - component caching}
30
3361470
94
560004
112049.000000
Counter: #clauses (negative hit) {Cache - component caching}
35
13439610
28
3359386
383988.857143
Counter: #removed clauses / #clauses {Cache - component caching}
65
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
30
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
35
18380
40
1410
525.142857
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
35
35
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
