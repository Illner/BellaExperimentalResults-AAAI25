Number: formula size {Formula representation}
1
34640
Number: #variables {Formula representation}
1
3910
Number: #clauses {Formula representation}
1
3880
Timer (reduced): initialize [ns] {Formula representation}
1
4257471
Timer: compute connected components [ns] {Formula representation}
21
4988240
2310
1383717
237535.238095
Number: circuit size {Circuit}
1
43762
Number: #nodes {Circuit}
1
20615
Number: #edges {Circuit}
1
43762
Number: #variables {Circuit}
1
3910
Timer: copy subcircuit [ns] {Circuit}
9
5319321
11110
2385675
591035.666667
Counter: formula size (copy subcircuit) {Circuit}
9
34932
80
16712
3881.333333
Counter: #variables (copy subcircuit) {Circuit}
9
5306
40
2114
589.555556
Counter: #clauses (copy subcircuit) {Circuit}
9
5056
28
2084
561.777778
Timer (reduced): initialize [ns] {Compiler}
1
8406103
Timer (reduced): compile [ns] {Compiler}
1
50974318
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
0
Number: #decisions {Compiler}
1
10
Counter: ratio of recomputed hypergraph cuts {Compiler}
19
3
0
1
0.157895
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
2
0
0
0
0.000000
Counter: #connected components {Compiler}
21
19
0
1
0.904762
Counter: #monotone residual formulae / #residual formulae {Compiler}
21
2
0
1
0.095238
Counter: monotone residual formula size {Compiler}
2
48
24
24
24.000000
Counter: #pure clauses / #clauses {Compiler}
21
2.781327
0.000000
1.000000
0.132444
Counter: pure residual formula size / residual formula size {Compiler}
21
2.606516
0.000000
1.000000
0.124120
Timer: assign literal [ns] {Compiler}
40
7807765
510
3156323
195194.125000
Timer: unassign literal [ns] {Compiler}
40
419538
240
87090
10488.450000
Timer: get decision variable [ns] {Decision heuristic}
10
1940
50
610
194.000000
Counter: #preselected variables {Decision heuristic}
10
46
1
9
4.600000
Counter: #restricted variables / #preselected variables {Decision heuristic}
0
0.000000
0.000000
0.000000
0.000000
Timer (reduced): initialize [ns] {SAT solver}
1
1297158
Timer (reduced): initial simplification [ns] {SAT solver}
1
480
Timer (reduced): initially implied literals [ns] {SAT solver}
1
210
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
21
981848
1800
202020
46754.666667
Timer: unit propagation [ns] {SAT solver}
21
8020
190
1120
381.904762
Counter: #implied literals {SAT solver}
21
40
0
2
1.904762
Counter: #implied literals / #variables {SAT solver}
21
0.273986
0.000000
0.076923
0.013047
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
3
2128286
15510
2095316
709428.666667
Counter: #implicit implied literals / #variables {SAT solver}
3
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
3
0.052558
0.002558
0.025000
0.017519
Timer: compute cut [ns] {Partitioning hypergraph}
1
1579897
1579897
1579897
1579897.000000
Counter: cut size {Partitioning hypergraph}
1
9
9
9
9.000000
Counter: cut size / #variables {Partitioning hypergraph}
1
0.002302
0.002302
0.002302
0.002302
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
2
8598183
7610
8590573
4299091.500000
Counter: #vertices {Partitioning hypergraph}
2
14
0
14
7.000000
Counter: #vertices / #clauses {Partitioning hypergraph}
2
0.003608
0.000000
0.003608
0.001804
Counter: #hyperedges {Partitioning hypergraph}
2
10
0
10
5.000000
Counter: #hyperedges / #variables {Partitioning hypergraph}
2
0.002558
0.000000
0.002558
0.001279
Counter: hypergraph size {Partitioning hypergraph}
2
98
0
98
49.000000
Counter: hypergraph size / formula size {Partitioning hypergraph}
2
0.002829
0.000000
0.002829
0.001415
Timer: create equivalence structure [ns] {Partitioning hypergraph}
2
273059
2750
270309
136529.500000
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
19
9
0
1
0.473684
Number: #current entries {Cache - component caching}
1
10
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
19
16846905
21080
4889800
886679.210526
Timer: search cache record structure [ns] {Cache - component caching}
19
31640
40
10280
1665.263158
Timer: add cache record structure [ns] {Cache - component caching}
10
12010
160
4520
1201.000000
Counter: #empty cache records / #cache records {Cache - component caching}
19
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
19
104504
80
34640
5500.210526
Counter: formula size (positive hit) {Cache - component caching}
9
34932
80
16712
3881.333333
Counter: formula size (negative hit) {Cache - component caching}
10
69572
80
34640
6957.200000
Counter: #variables (cache record structure) {Cache - component caching}
19
14522
40
3910
764.315789
Counter: #variables (positive hit) {Cache - component caching}
9
5306
40
2114
589.555556
Counter: #variables (negative hit) {Cache - component caching}
10
9216
40
3910
921.600000
Counter: #clauses (cache record structure) {Cache - component caching}
19
13992
28
3880
736.421053
Counter: #clauses (positive hit) {Cache - component caching}
9
5056
28
2084
561.777778
Counter: #clauses (negative hit) {Cache - component caching}
10
8936
28
3880
893.600000
Counter: #removed clauses / #clauses {Cache - component caching}
19
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
9
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
10
640
40
160
64.000000
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
10
10
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
