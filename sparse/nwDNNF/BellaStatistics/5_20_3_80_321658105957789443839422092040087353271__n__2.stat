Number: formula size {Formula representation}
1
29235
Number: #variables {Formula representation}
1
4950
Number: #clauses {Formula representation}
1
4895
Timer (reduced): initialize [ns] {Formula representation}
1
3696086
Timer: compute connected components [ns] {Formula representation}
485
27502861
8170
1795409
56706.929897
Number: circuit size {Circuit}
1
24206
Number: #nodes {Circuit}
1
16209
Number: #edges {Circuit}
1
24206
Number: #variables {Circuit}
1
4950
Timer: copy subcircuit [ns] {Circuit}
0
0
0
0
0.000000
Counter: formula size (copy subcircuit) {Circuit}
0
0
0
0
0.000000
Counter: #variables (copy subcircuit) {Circuit}
0
0
0
0
0.000000
Counter: #clauses (copy subcircuit) {Circuit}
0
0
0
0
0.000000
Timer (reduced): initialize [ns] {Compiler}
1
4829602
Timer (reduced): compile [ns] {Compiler}
1
137477871
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
0
Number: #decisions {Compiler}
1
242
Counter: ratio of recomputed hypergraph cuts {Compiler}
242
135
0
1
0.557851
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
135
0
0
0
0.000000
Counter: #connected components {Compiler}
485
242
0
1
0.498969
Counter: #monotone residual formulae / #residual formulae {Compiler}
485
243
0
1
0.501031
Counter: monotone residual formula size {Compiler}
243
21870
90
90
90.000000
Counter: #pure clauses / #clauses {Compiler}
485
250.738854
0.000000
1.000000
0.516987
Counter: pure residual formula size / residual formula size {Compiler}
485
248.400000
0.000000
1.000000
0.512165
Timer: assign literal [ns] {Compiler}
847
14015847
860
2590689
16547.635183
Timer: unassign literal [ns] {Compiler}
847
3309391
220
146088
3907.191263
Timer: get decision variable [ns] {Decision heuristic}
242
24609
40
780
101.690083
Counter: #preselected variables {Decision heuristic}
242
749
1
14
3.095041
Counter: #restricted variables / #preselected variables {Decision heuristic}
0
0.000000
0.000000
0.000000
0.000000
Timer (reduced): initialize [ns] {SAT solver}
1
1169216
Timer (reduced): initial simplification [ns] {SAT solver}
1
620
Timer (reduced): initially implied literals [ns] {SAT solver}
1
210
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
485
7723126
4620
224587
15923.971134
Timer: unit propagation [ns] {SAT solver}
485
85869
80
680
177.049485
Counter: #implied literals {SAT solver}
485
847
0
3
1.746392
Counter: #implied literals / #variables {SAT solver}
485
4.963350
0.000000
0.021739
0.010234
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
135
17837540
52180
2524740
132129.925926
Counter: #implicit implied literals / #variables {SAT solver}
135
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
135
0.388489
0.000000
0.007194
0.002878
Timer: compute cut [ns] {Partitioning hypergraph}
27
2828274
42099
1039638
104750.888889
Counter: cut size {Partitioning hypergraph}
27
152
4
14
5.629630
Counter: cut size / #variables {Partitioning hypergraph}
27
0.228108
0.002828
0.011574
0.008448
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
135
31659970
18230
10901669
234518.296296
Counter: #vertices {Partitioning hypergraph}
135
958
0
410
7.096296
Counter: #vertices / #clauses {Partitioning hypergraph}
135
0.896223
0.000000
0.083759
0.006639
Counter: #hyperedges {Partitioning hypergraph}
135
201
0
15
1.488889
Counter: #hyperedges / #variables {Partitioning hypergraph}
135
0.321314
0.000000
0.013889
0.002380
Counter: hypergraph size {Partitioning hypergraph}
135
3279
0
1635
24.288889
Counter: hypergraph size / formula size {Partitioning hypergraph}
135
0.563779
0.000000
0.055926
0.004176
Timer: create equivalence structure [ns] {Partitioning hypergraph}
135
2906018
8350
403355
21526.059259
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
242
0
0
0
0.000000
Number: #current entries {Cache - component caching}
1
242
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
242
16488825
21979
502514
68135.640496
Timer: search cache record structure [ns] {Cache - component caching}
242
73129
110
2260
302.185950
Timer: add cache record structure [ns] {Cache - component caching}
242
96966
130
6609
400.685950
Counter: #empty cache records / #cache records {Cache - component caching}
242
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
242
289157
278
29235
1194.863636
Counter: formula size (positive hit) {Cache - component caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - component caching}
242
289157
278
29235
1194.863636
Counter: #variables (cache record structure) {Cache - component caching}
242
81226
139
4950
335.644628
Counter: #variables (positive hit) {Cache - component caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - component caching}
242
81226
139
4950
335.644628
Counter: #clauses (cache record structure) {Cache - component caching}
242
69373
94
4895
286.665289
Counter: #clauses (positive hit) {Cache - component caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - component caching}
242
69373
94
4895
286.665289
Counter: #removed clauses / #clauses {Cache - component caching}
242
13.137373
0.023729
1.000000
0.054287
Counter: #identical mappings / #mappings {Cache - component caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
242
11800
20
330
48.760331
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
242
242
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
