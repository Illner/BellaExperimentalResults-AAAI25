Number: formula size {Formula representation}
1
9375350
Number: #variables {Formula representation}
1
1172050
Number: #clauses {Formula representation}
1
1172035
Timer (reduced): initialize [ns] {Formula representation}
1
870223353
Timer: compute connected components [ns] {Formula representation}
105
3166140281
6190
479362263
30153716.961905
Number: circuit size {Circuit}
1
520851550
Number: #nodes {Circuit}
1
70195659
Number: #edges {Circuit}
1
520851550
Number: #variables {Circuit}
1
1172050
Timer: copy subcircuit [ns] {Circuit}
48
69368988864
240889
15462490346
1445187268.000000
Counter: formula size (copy subcircuit) {Circuit}
48
18559226
560
3187815
386650.541667
Counter: #variables (copy subcircuit) {Circuit}
48
2585168
220
422040
53857.666667
Counter: #clauses (copy subcircuit) {Circuit}
48
2583216
191
422019
53817.000000
Timer (reduced): initialize [ns] {Compiler}
1
1036203428
Timer (reduced): compile [ns] {Compiler}
1
376602888110
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
0
Number: #decisions {Compiler}
1
52
Counter: ratio of recomputed hypergraph cuts {Compiler}
100
60
0
1
0.600000
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
30
23
0
1
0.766667
Counter: #connected components {Compiler}
105
100
0
1
0.952381
Counter: #monotone residual formulae / #residual formulae {Compiler}
105
5
0
1
0.047619
Counter: monotone residual formula size {Compiler}
5
350
70
70
70.000000
Counter: #pure clauses / #clauses {Compiler}
105
6.104178
0.000000
1.000000
0.058135
Counter: pure residual formula size / residual formula size {Compiler}
105
5.721052
0.000000
1.000000
0.054486
Timer: assign literal [ns] {Compiler}
169
275447939865
540
92890028084
1629869466.656805
Timer: unassign literal [ns] {Compiler}
169
561503088
270
83418172
3322503.479290
Timer: get decision variable [ns] {Decision heuristic}
52
163022329
80
54108786
3135044.788462
Counter: #preselected variables {Decision heuristic}
52
5487255
1
1172050
105524.134615
Counter: #restricted variables / #preselected variables {Decision heuristic}
23
0.025379
0.000043
0.004147
0.001103
Timer (reduced): initialize [ns] {SAT solver}
1
343498879
Timer (reduced): initial simplification [ns] {SAT solver}
1
1540
Timer (reduced): initially implied literals [ns] {SAT solver}
1
950
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
105
1653460462
4700
204261538
15747242.495238
Timer: unit propagation [ns] {SAT solver}
105
161410
190
16560
1537.238095
Counter: #implied literals {SAT solver}
105
208
0
5
1.980952
Counter: #implied literals / #variables {SAT solver}
105
0.225715
0.000000
0.027778
0.002150
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
17
32445196
40669
13650952
1908540.941176
Counter: #implicit implied literals / #variables {SAT solver}
17
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
17
0.021324
0.000000
0.009174
0.001254
Timer: compute cut [ns] {Partitioning hypergraph}
3
16255712
477218
8863848
5418570.666667
Counter: cut size {Partitioning hypergraph}
3
30
3
14
10.000000
Counter: cut size / #variables {Partitioning hypergraph}
3
0.013714
0.003031
0.007160
0.004571
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
7
13645002
14630
7650573
1949286.000000
Counter: #vertices {Partitioning hypergraph}
7
464
0
254
66.285714
Counter: #vertices / #clauses {Partitioning hypergraph}
7
0.127664
0.000000
0.056059
0.018238
Counter: #hyperedges {Partitioning hypergraph}
7
47
0
21
6.714286
Counter: #hyperedges / #variables {Partitioning hypergraph}
7
0.024286
0.000000
0.014320
0.003469
Counter: hypergraph size {Partitioning hypergraph}
7
1330
0
770
190.000000
Counter: hypergraph size / formula size {Partitioning hypergraph}
7
0.077385
0.000000
0.034416
0.011055
Timer: create equivalence structure [ns] {Partitioning hypergraph}
7
1302765
8010
619168
186109.285714
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
100
48
0
1
0.480000
Number: #current entries {Cache - component caching}
1
52
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
100
24032817686
64260
4884705813
240328176.860000
Timer: search cache record structure [ns] {Cache - component caching}
100
38720070
270
7276714
387200.700000
Timer: add cache record structure [ns] {Cache - component caching}
52
35464275
310
10278453
682005.288462
Counter: #empty cache records / #cache records {Cache - component caching}
100
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
100
61062083
218
9375350
610620.830000
Counter: formula size (positive hit) {Cache - component caching}
48
18559226
560
3187815
386650.541667
Counter: formula size (negative hit) {Cache - component caching}
52
42502857
218
9375350
817362.634615
Counter: #variables (cache record structure) {Cache - component caching}
100
8114040
109
1172050
81140.400000
Counter: #variables (positive hit) {Cache - component caching}
48
2585168
220
422040
53857.666667
Counter: #variables (negative hit) {Cache - component caching}
52
5528872
109
1172050
106324.461538
Counter: #clauses (cache record structure) {Cache - component caching}
100
8109829
74
1172035
81098.290000
Counter: #clauses (positive hit) {Cache - component caching}
48
2583216
191
422019
53817.000000
Counter: #clauses (negative hit) {Cache - component caching}
52
5526613
74
1172035
106281.019231
Counter: #removed clauses / #clauses {Cache - component caching}
100
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
48
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
52
16100
30
1390
309.615385
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
52
52
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
