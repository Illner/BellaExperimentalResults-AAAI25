Number: formula size {Formula representation}
1
9663775
Number: #variables {Formula representation}
1
1610730
Number: #clauses {Formula representation}
1
1610845
Timer (reduced): initialize [ns] {Formula representation}
1
882302512
Timer: compute connected components [ns] {Formula representation}
101
4542115600
14760
544494608
44971441.584158
Number: circuit size {Circuit}
1
18519386
Number: #nodes {Circuit}
1
5845124
Number: #edges {Circuit}
1
18519386
Number: #variables {Circuit}
1
1610730
Timer: copy subcircuit [ns] {Circuit}
40
2720064347
419669
261866891
68001608.675000
Counter: formula size (copy subcircuit) {Circuit}
40
9484970
2684
732622
237124.250000
Counter: #variables (copy subcircuit) {Circuit}
40
1938640
946
146608
48466.000000
Counter: #clauses (copy subcircuit) {Circuit}
40
1939070
914
146678
48476.750000
Timer (reduced): initialize [ns] {Compiler}
1
980520476
Timer (reduced): compile [ns] {Compiler}
1
409259169080
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
0
Number: #decisions {Compiler}
1
50
Counter: ratio of recomputed hypergraph cuts {Compiler}
90
76
0
1
0.844444
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
44
33
0
1
0.750000
Counter: #connected components {Compiler}
101
90
0
1
0.891089
Counter: #monotone residual formulae / #residual formulae {Compiler}
101
11
0
1
0.108911
Counter: monotone residual formula size {Compiler}
11
1694
154
154
154.000000
Counter: #pure clauses / #clauses {Compiler}
101
11.383316
0.000000
1.000000
0.112706
Counter: pure residual formula size / residual formula size {Compiler}
101
11.264000
0.000000
1.000000
0.111525
Timer: assign literal [ns] {Compiler}
155
354954077470
1300
76387953156
2290026306.258065
Timer: unassign literal [ns] {Compiler}
155
1017924145
300
133154923
6567252.548387
Timer: get decision variable [ns] {Decision heuristic}
50
282040050
60
45371400
5640801.000000
Counter: #preselected variables {Decision heuristic}
50
10771289
1
1610730
215425.780000
Counter: #restricted variables / #preselected variables {Decision heuristic}
33
0.029455
0.000034
0.003871
0.000893
Timer (reduced): initialize [ns] {SAT solver}
1
314220586
Timer (reduced): initial simplification [ns] {SAT solver}
1
940
Timer (reduced): initially implied literals [ns] {SAT solver}
1
500
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
101
3459557325
155720
291780995
34253042.821782
Timer: unit propagation [ns] {SAT solver}
101
228849
300
15240
2265.831683
Counter: #implied literals {SAT solver}
101
335
0
11
3.316832
Counter: #implied literals / #variables {SAT solver}
101
0.141628
0.000000
0.012821
0.001402
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
13
29290647
589548
8196561
2253126.692308
Counter: #implicit implied literals / #variables {SAT solver}
13
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
13
0.004255
0.000000
0.004255
0.000327
Timer: compute cut [ns] {Partitioning hypergraph}
1
4766293
4766293
4766293
4766293.000000
Counter: cut size {Partitioning hypergraph}
1
13
13
13
13.000000
Counter: cut size / #variables {Partitioning hypergraph}
1
0.002798
0.002798
0.002798
0.002798
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
11
3866058
27440
2993190
351459.818182
Counter: #vertices {Partitioning hypergraph}
11
90
0
90
8.181818
Counter: #vertices / #clauses {Partitioning hypergraph}
11
0.019552
0.000000
0.019552
0.001777
Counter: #hyperedges {Partitioning hypergraph}
11
19
0
19
1.727273
Counter: #hyperedges / #variables {Partitioning hypergraph}
11
0.004089
0.000000
0.004089
0.000372
Counter: hypergraph size {Partitioning hypergraph}
11
195
0
195
17.727273
Counter: hypergraph size / formula size {Partitioning hypergraph}
11
0.011085
0.000000
0.011085
0.001008
Timer: create equivalence structure [ns] {Partitioning hypergraph}
11
1232575
14500
837297
112052.272727
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
90
40
0
1
0.444444
Number: #current entries {Cache - component caching}
1
50
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
90
39271242904
144439
6278948133
436347143.377778
Timer: search cache record structure [ns] {Cache - component caching}
90
29859977
140
4772623
331777.522222
Timer: add cache record structure [ns] {Cache - component caching}
50
18396396
300
2729541
367927.920000
Counter: #empty cache records / #cache records {Cache - component caching}
90
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
90
72845615
470
9663775
809395.722222
Counter: formula size (positive hit) {Cache - component caching}
40
9484970
2684
732622
237124.250000
Counter: formula size (negative hit) {Cache - component caching}
50
63360645
470
9663775
1267212.900000
Counter: #variables (cache record structure) {Cache - component caching}
90
12737330
235
1610730
141525.888889
Counter: #variables (positive hit) {Cache - component caching}
40
1938640
946
146608
48466.000000
Counter: #variables (negative hit) {Cache - component caching}
50
10798690
235
1610730
215973.800000
Counter: #clauses (cache record structure) {Cache - component caching}
90
12737915
158
1610845
141532.388889
Counter: #clauses (positive hit) {Cache - component caching}
40
1939070
914
146678
48476.750000
Counter: #clauses (negative hit) {Cache - component caching}
50
10798845
158
1610845
215976.900000
Counter: #removed clauses / #clauses {Cache - component caching}
90
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
40
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
50
20869
30
3740
417.380000
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
50
50
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
