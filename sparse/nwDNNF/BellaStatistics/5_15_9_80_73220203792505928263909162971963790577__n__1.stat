Number: formula size {Formula representation}
1
5314905
Number: #variables {Formula representation}
1
885960
Number: #clauses {Formula representation}
1
885965
Timer (reduced): initialize [ns] {Formula representation}
1
471454188
Timer: compute connected components [ns] {Formula representation}
118097
25121589548
15600
311339324
212719.963657
Number: circuit size {Circuit}
1
8426971
Number: #nodes {Circuit}
1
2971458
Number: #edges {Circuit}
1
8426971
Number: #variables {Circuit}
1
885960
Timer: copy subcircuit [ns] {Circuit}
0
0
0
0
0.000000
Counter: formula size (copy subcircuit) {Circuit}
0
0
0
0
0.000000
Counter: #variables (copy subcircuit) {Circuit}
0
0
0
0
0.000000
Counter: #clauses (copy subcircuit) {Circuit}
0
0
0
0
0.000000
Timer (reduced): initialize [ns] {Compiler}
1
472144001
Timer (reduced): compile [ns] {Compiler}
1
218390040681
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
0
Number: #decisions {Compiler}
1
59048
Counter: ratio of recomputed hypergraph cuts {Compiler}
59048
50943
0
1
0.862739
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
50943
2186
0
1
0.042911
Counter: #connected components {Compiler}
118097
59048
0
1
0.499996
Counter: #monotone residual formulae / #residual formulae {Compiler}
118097
59049
0
1
0.500004
Counter: monotone residual formula size {Compiler}
59049
11691702
198
198
198.000000
Counter: #pure clauses / #clauses {Compiler}
118097
59652.554985
0.000000
1.000000
0.505115
Counter: pure residual formula size / residual formula size {Compiler}
118097
59470.323626
0.000000
1.000000
0.503572
Timer: assign literal [ns] {Compiler}
186494
124972134250
1020
25867083401
670113.431263
Timer: unassign literal [ns] {Compiler}
186494
2959413459
250
34125631
15868.679201
Timer: get decision variable [ns] {Decision heuristic}
59048
240451254
40
16299489
4072.132062
Counter: #preselected variables {Decision heuristic}
59048
29834162
1
885960
505.252710
Counter: #restricted variables / #preselected variables {Decision heuristic}
2186
5.490403
0.000051
0.003197
0.002512
Timer (reduced): initialize [ns] {SAT solver}
1
158512252
Timer (reduced): initial simplification [ns] {SAT solver}
1
810
Timer (reduced): initially implied literals [ns] {SAT solver}
1
510
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
118097
8886813837
9420
104619089
75250.123517
Timer: unit propagation [ns] {SAT solver}
118097
42505526
160
157578
359.920455
Counter: #implied literals {SAT solver}
118097
335468
0
9
2.840614
Counter: #implied literals / #variables {SAT solver}
118097
515.553891
0.000000
0.010000
0.004366
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
48757
16387743133
108369
15135290
336110.571467
Counter: #implicit implied literals / #variables {SAT solver}
48757
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
48757
29.273935
0.000000
0.003711
0.000600
Timer: compute cut [ns] {Partitioning hypergraph}
729
92690489
102389
636834
127147.447188
Counter: cut size {Partitioning hypergraph}
729
8895
12
13
12.201646
Counter: cut size / #variables {Partitioning hypergraph}
729
1.887733
0.002547
0.002759
0.002589
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
48757
6658555861
30480
14763365
136566.151753
Counter: #vertices {Partitioning hypergraph}
48757
47385
0
65
0.971860
Counter: #vertices / #clauses {Partitioning hypergraph}
48757
10.256494
0.000000
0.014069
0.000210
Counter: #hyperedges {Partitioning hypergraph}
48757
11664
0
16
0.239227
Counter: #hyperedges / #variables {Partitioning hypergraph}
48757
2.475382
0.000000
0.003396
0.000051
Counter: hypergraph size {Partitioning hypergraph}
48757
103518
0
142
2.123141
Counter: hypergraph size / formula size {Partitioning hypergraph}
48757
5.826748
0.000000
0.007993
0.000120
Timer: create equivalence structure [ns] {Partitioning hypergraph}
48757
2177372479
14450
2359395
44657.638472
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
59048
0
0
0
0.000000
Number: #current entries {Cache - component caching}
1
59048
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
59048
20486906477
41050
67472991
346953.435798
Timer: search cache record structure [ns] {Cache - component caching}
59048
82597619
110
169658
1398.821620
Timer: add cache record structure [ns] {Cache - component caching}
59048
103753938
270
1156588
1757.111807
Counter: #empty cache records / #cache records {Cache - component caching}
59048
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
59048
277753222
602
5314905
4703.854864
Counter: formula size (positive hit) {Cache - component caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - component caching}
59048
277753222
602
5314905
4703.854864
Counter: #variables (cache record structure) {Cache - component caching}
59048
77722330
301
885960
1316.256774
Counter: #variables (positive hit) {Cache - component caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - component caching}
59048
77722330
301
885960
1316.256774
Counter: #clauses (cache record structure) {Cache - component caching}
59048
72364002
202
885965
1225.511482
Counter: #clauses (positive hit) {Cache - component caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - component caching}
59048
72364002
202
885965
1225.511482
Counter: #removed clauses / #clauses {Cache - component caching}
59048
1727.076231
0.001866
1.000000
0.029249
Counter: #identical mappings / #mappings {Cache - component caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
59048
2903566
30
1020
49.172978
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
59048
59048
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
