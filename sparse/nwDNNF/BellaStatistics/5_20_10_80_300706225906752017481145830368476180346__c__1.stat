Number: formula size {Formula representation}
1
12000600
Number: #variables {Formula representation}
1
2000300
Number: #clauses {Formula representation}
1
2000280
Timer (reduced): initialize [ns] {Formula representation}
1
1238830632
Timer: compute connected components [ns] {Formula representation}
91
5372729741
26539
907188672
59040986.164835
Number: circuit size {Circuit}
1
19154430
Number: #nodes {Circuit}
1
6632819
Number: #edges {Circuit}
1
19154430
Number: #variables {Circuit}
1
2000300
Timer: copy subcircuit [ns] {Circuit}
36
2993554547
538884
404121972
83154292.972222
Counter: formula size (copy subcircuit) {Circuit}
36
10433700
4020
1000480
289825.000000
Counter: #variables (copy subcircuit) {Circuit}
36
2147670
1450
200280
59657.500000
Counter: #clauses (copy subcircuit) {Circuit}
36
2144340
1356
200224
59565.000000
Timer (reduced): initialize [ns] {Compiler}
1
1273660585
Timer (reduced): compile [ns] {Compiler}
1
671466149794
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
0
Number: #decisions {Compiler}
1
45
Counter: ratio of recomputed hypergraph cuts {Compiler}
81
71
0
1
0.876543
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
41
31
0
1
0.756098
Counter: #connected components {Compiler}
91
81
0
1
0.890110
Counter: #monotone residual formulae / #residual formulae {Compiler}
91
10
0
1
0.109890
Counter: monotone residual formula size {Compiler}
10
2600
260
260
260.000000
Counter: #pure clauses / #clauses {Compiler}
91
10.490884
0.000000
1.000000
0.115284
Counter: pure residual formula size / residual formula size {Compiler}
91
10.336538
0.000000
1.000000
0.113588
Timer: assign literal [ns] {Compiler}
140
606231572217
2240
179734347485
4330225515.835714
Timer: unassign literal [ns] {Compiler}
140
667843704
500
90468720
4770312.171429
Timer: get decision variable [ns] {Decision heuristic}
45
319319936
100
61485068
7095998.577778
Counter: #preselected variables {Decision heuristic}
45
12124570
1
2000300
269434.888889
Counter: #restricted variables / #preselected variables {Decision heuristic}
31
0.027635
0.000025
0.003023
0.000891
Timer (reduced): initialize [ns] {SAT solver}
1
381379418
Timer (reduced): initial simplification [ns] {SAT solver}
1
1270
Timer (reduced): initially implied literals [ns] {SAT solver}
1
650
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
91
3716586594
38050
400131460
40841610.923077
Timer: unit propagation [ns] {SAT solver}
91
221689
280
35000
2436.142857
Counter: #implied literals {SAT solver}
91
280
0
10
3.076923
Counter: #implied literals / #variables {SAT solver}
91
0.079716
0.000000
0.007634
0.000876
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
13
10655492
256317
2726030
819653.230769
Counter: #implicit implied literals / #variables {SAT solver}
13
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
13
0.002538
0.000000
0.002538
0.000195
Timer: compute cut [ns] {Partitioning hypergraph}
1
4630170
4630170
4630170
4630170.000000
Counter: cut size {Partitioning hypergraph}
1
11
11
11
11.000000
Counter: cut size / #variables {Partitioning hypergraph}
1
0.002221
0.002221
0.002221
0.002221
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
10
4284963
54100
2831158
428496.300000
Counter: #vertices {Partitioning hypergraph}
10
62
0
62
6.200000
Counter: #vertices / #clauses {Partitioning hypergraph}
10
0.012922
0.000000
0.012922
0.001292
Counter: #hyperedges {Partitioning hypergraph}
10
16
0
16
1.600000
Counter: #hyperedges / #variables {Partitioning hypergraph}
10
0.003231
0.000000
0.003231
0.000323
Counter: hypergraph size {Partitioning hypergraph}
10
136
0
136
13.600000
Counter: hypergraph size / formula size {Partitioning hypergraph}
10
0.007586
0.000000
0.007586
0.000759
Timer: create equivalence structure [ns] {Partitioning hypergraph}
10
1105096
25540
449325
110509.600000
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
81
36
0
1
0.444444
Number: #current entries {Cache - component caching}
1
45
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
81
48669262347
321086
7952240910
600855090.703704
Timer: search cache record structure [ns] {Cache - component caching}
81
31544558
140
2946048
389438.987654
Timer: add cache record structure [ns] {Cache - component caching}
45
42355399
460
9725032
941231.088889
Counter: #empty cache records / #cache records {Cache - component caching}
81
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
81
81760260
788
12000600
1009385.925926
Counter: formula size (positive hit) {Cache - component caching}
36
10433700
4020
1000480
289825.000000
Counter: formula size (negative hit) {Cache - component caching}
45
71326560
788
12000600
1585034.666667
Counter: #variables (cache record structure) {Cache - component caching}
81
14298480
394
2000300
176524.444444
Counter: #variables (positive hit) {Cache - component caching}
36
2147670
1450
200280
59657.500000
Counter: #variables (negative hit) {Cache - component caching}
45
12150810
394
2000300
270018.000000
Counter: #clauses (cache record structure) {Cache - component caching}
81
14290620
264
2000280
176427.407407
Counter: #clauses (positive hit) {Cache - component caching}
36
2144340
1356
200224
59565.000000
Counter: #clauses (negative hit) {Cache - component caching}
45
12146280
264
2000280
269917.333333
Counter: #removed clauses / #clauses {Cache - component caching}
81
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
36
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
45
15790
40
1380
350.888889
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
45
45
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
