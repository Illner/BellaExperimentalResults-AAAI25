Number: formula size {Formula representation}
1
3000600
Number: #variables {Formula representation}
1
500150
Number: #clauses {Formula representation}
1
500280
Timer (reduced): initialize [ns] {Formula representation}
1
267507031
Timer: compute connected components [ns] {Formula representation}
199999
9166927107
2580
171685469
45834.864709
Number: circuit size {Circuit}
1
4167426
Number: #nodes {Circuit}
1
2023765
Number: #edges {Circuit}
1
4167426
Number: #variables {Circuit}
1
500150
Timer: copy subcircuit [ns] {Circuit}
0
0
0
0
0.000000
Counter: formula size (copy subcircuit) {Circuit}
0
0
0
0
0.000000
Counter: #variables (copy subcircuit) {Circuit}
0
0
0
0
0.000000
Counter: #clauses (copy subcircuit) {Circuit}
0
0
0
0
0.000000
Timer (reduced): initialize [ns] {Compiler}
1
287972776
Timer (reduced): compile [ns] {Compiler}
1
69569294559
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
0
Number: #decisions {Compiler}
1
99999
Counter: ratio of recomputed hypergraph cuts {Compiler}
99999
85965
0
1
0.859659
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
85965
199
0
1
0.002315
Counter: #connected components {Compiler}
199999
99999
0
1
0.499997
Counter: #monotone residual formulae / #residual formulae {Compiler}
199999
100000
0
1
0.500003
Counter: monotone residual formula size {Compiler}
100000
4043920
40
80
40.439200
Counter: #pure clauses / #clauses {Compiler}
199999
101111.199202
0.000000
1.000000
0.505559
Counter: pure residual formula size / residual formula size {Compiler}
199999
100813.440319
0.000000
1.000000
0.504070
Timer: assign literal [ns] {Compiler}
311572
36371019614
300
8642234944
116733.915801
Timer: unassign literal [ns] {Compiler}
311572
1094116067
150
20743594
3511.599460
Timer: get decision variable [ns] {Decision heuristic}
99999
60802386
30
7372415
608.029940
Counter: #preselected variables {Decision heuristic}
99999
6534146
1
500150
65.342113
Counter: #restricted variables / #preselected variables {Decision heuristic}
199
0.721687
0.000100
0.005871
0.003627
Timer (reduced): initialize [ns] {SAT solver}
1
112869454
Timer (reduced): initial simplification [ns] {SAT solver}
1
850
Timer (reduced): initially implied literals [ns] {SAT solver}
1
470
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
199999
2902929228
2090
44187924
14514.718714
Timer: unit propagation [ns] {SAT solver}
199999
57389906
110
153589
286.950965
Counter: #implied literals {SAT solver}
199999
619855
0
10
3.099290
Counter: #implied literals / #variables {SAT solver}
199999
4003.602694
0.000000
0.047619
0.020018
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
85766
5514581964
20350
3847943
64297.996455
Counter: #implicit implied literals / #variables {SAT solver}
85766
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
85766
160.177011
0.000000
0.015625
0.001868
Timer: compute cut [ns] {Partitioning hypergraph}
1012
125297547
34470
336038
123811.805336
Counter: cut size {Partitioning hypergraph}
1012
14706
2
25
14.531621
Counter: cut size / #variables {Partitioning hypergraph}
1012
10.071518
0.003823
0.017588
0.009952
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
85766
3239412702
7090
4200701
37770.360073
Counter: #vertices {Partitioning hypergraph}
85766
110784
0
283
1.291701
Counter: #vertices / #clauses {Partitioning hypergraph}
85766
63.032518
0.000000
0.067460
0.000735
Counter: #hyperedges {Partitioning hypergraph}
85766
19722
0
29
0.229951
Counter: #hyperedges / #variables {Partitioning hypergraph}
85766
13.930308
0.000000
0.024876
0.000162
Counter: hypergraph size {Partitioning hypergraph}
85766
237148
0
589
2.765058
Counter: hypergraph size / formula size {Partitioning hypergraph}
85766
37.847725
0.000000
0.040441
0.000441
Timer: create equivalence structure [ns] {Partitioning hypergraph}
85766
873591418
3280
544307
10185.754471
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
99999
0
0
0
0.000000
Number: #current entries {Cache - component caching}
1
99999
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
99999
6002581650
6970
32093721
60026.416764
Timer: search cache record structure [ns] {Cache - component caching}
99999
50934337
100
198279
509.348463
Timer: add cache record structure [ns] {Cache - component caching}
99999
54968199
110
1096825
549.687487
Counter: #empty cache records / #cache records {Cache - component caching}
99999
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
99999
110386837
128
3000600
1103.879409
Counter: formula size (positive hit) {Cache - component caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - component caching}
99999
110386837
128
3000600
1103.879409
Counter: #variables (cache record structure) {Cache - component caching}
99999
30943618
64
500150
309.439274
Counter: #variables (positive hit) {Cache - component caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - component caching}
99999
30943618
64
500150
309.439274
Counter: #clauses (cache record structure) {Cache - component caching}
99999
30334528
44
500280
303.348313
Counter: #clauses (positive hit) {Cache - component caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - component caching}
99999
30334528
44
500280
303.348313
Counter: #removed clauses / #clauses {Cache - component caching}
99999
13847.728085
0.004460
1.000000
0.138479
Counter: #identical mappings / #mappings {Cache - component caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
99999
3957101
19
11880
39.571406
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
99999
99999
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
