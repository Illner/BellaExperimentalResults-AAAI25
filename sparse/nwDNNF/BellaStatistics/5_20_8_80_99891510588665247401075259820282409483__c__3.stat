Number: formula size {Formula representation}
1
3932560
Number: #variables {Formula representation}
1
655600
Number: #clauses {Formula representation}
1
655545
Timer (reduced): initialize [ns] {Formula representation}
1
406332049
Timer: compute connected components [ns] {Formula representation}
71
2067573630
24460
255580508
29120755.352113
Number: circuit size {Circuit}
1
5855511
Number: #nodes {Circuit}
1
2176623
Number: #edges {Circuit}
1
5855511
Number: #variables {Circuit}
1
655600
Timer: copy subcircuit [ns] {Circuit}
28
1335423122
620602
180374826
47693682.928571
Counter: formula size (copy subcircuit) {Circuit}
28
7809312
2960
938304
278904.000000
Counter: #variables (copy subcircuit) {Circuit}
28
1450120
1096
168160
51790.000000
Counter: #clauses (copy subcircuit) {Circuit}
28
1447390
997
168084
51692.500000
Timer (reduced): initialize [ns] {Compiler}
1
427536438
Timer (reduced): compile [ns] {Compiler}
1
117811205212
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
0
Number: #decisions {Compiler}
1
35
Counter: ratio of recomputed hypergraph cuts {Compiler}
63
53
0
1
0.841270
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
31
23
0
1
0.741935
Counter: #connected components {Compiler}
71
63
0
1
0.887324
Counter: #monotone residual formulae / #residual formulae {Compiler}
71
8
0
1
0.112676
Counter: monotone residual formula size {Compiler}
8
1920
240
240
240.000000
Counter: #pure clauses / #clauses {Compiler}
71
8.308582
0.000000
1.000000
0.117022
Counter: pure residual formula size / residual formula size {Compiler}
71
8.210526
0.000000
1.000000
0.115641
Timer: assign literal [ns] {Compiler}
110
95022637629
1460
27535832447
863842160.263636
Timer: unassign literal [ns] {Compiler}
110
277981756
510
39697820
2527106.872727
Timer: get decision variable [ns] {Decision heuristic}
35
101530633
110
19141414
2900875.228571
Counter: #preselected variables {Decision heuristic}
35
4052354
1
655600
115781.542857
Counter: #restricted variables / #preselected variables {Decision heuristic}
23
0.016186
0.000061
0.002846
0.000704
Timer (reduced): initialize [ns] {SAT solver}
1
142154407
Timer (reduced): initial simplification [ns] {SAT solver}
1
1220
Timer (reduced): initially implied literals [ns] {SAT solver}
1
860
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
71
1130888249
17239
108247285
15928003.507042
Timer: unit propagation [ns] {SAT solver}
71
154919
250
14980
2181.957746
Counter: #implied literals {SAT solver}
71
185
0
8
2.605634
Counter: #implied literals / #variables {SAT solver}
71
0.067862
0.000000
0.008264
0.000956
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
9
6354142
149698
3497397
706015.777778
Counter: #implicit implied literals / #variables {SAT solver}
9
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
9
0.002747
0.000000
0.002747
0.000305
Timer: compute cut [ns] {Partitioning hypergraph}
1
3785424
3785424
3785424
3785424.000000
Counter: cut size {Partitioning hypergraph}
1
10
10
10
10.000000
Counter: cut size / #variables {Partitioning hypergraph}
1
0.002180
0.002180
0.002180
0.002180
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
8
2858496
44290
2105404
357312.000000
Counter: #vertices {Partitioning hypergraph}
8
50
0
50
6.250000
Counter: #vertices / #clauses {Partitioning hypergraph}
8
0.011213
0.000000
0.011213
0.001402
Counter: #hyperedges {Partitioning hypergraph}
8
14
0
14
1.750000
Counter: #hyperedges / #variables {Partitioning hypergraph}
8
0.003051
0.000000
0.003051
0.000381
Counter: hypergraph size {Partitioning hypergraph}
8
110
0
110
13.750000
Counter: hypergraph size / formula size {Partitioning hypergraph}
8
0.006407
0.000000
0.006407
0.000801
Timer: create equivalence structure [ns] {Partitioning hypergraph}
8
813108
21259
448074
101638.500000
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
63
28
0
1
0.444444
Number: #current entries {Cache - component caching}
1
35
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
63
16617734429
267317
2562211774
263773562.365079
Timer: search cache record structure [ns] {Cache - component caching}
63
12677280
140
1367693
201226.666667
Timer: add cache record structure [ns] {Cache - component caching}
35
8662225
470
1416603
247492.142857
Counter: #empty cache records / #cache records {Cache - component caching}
63
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
63
31630389
728
3932560
502069.666667
Counter: formula size (positive hit) {Cache - component caching}
28
7809312
2960
938304
278904.000000
Counter: formula size (negative hit) {Cache - component caching}
35
23821077
728
3932560
680602.200000
Counter: #variables (cache record structure) {Cache - component caching}
63
5523630
364
655600
87676.666667
Counter: #variables (positive hit) {Cache - component caching}
28
1450120
1096
168160
51790.000000
Counter: #variables (negative hit) {Cache - component caching}
35
4073510
364
655600
116386.000000
Counter: #clauses (cache record structure) {Cache - component caching}
63
5517330
244
655545
87576.666667
Counter: #clauses (positive hit) {Cache - component caching}
28
1447390
997
168084
51692.500000
Counter: #clauses (negative hit) {Cache - component caching}
35
4069940
244
655545
116284.000000
Counter: #removed clauses / #clauses {Cache - component caching}
63
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
28
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
35
29690
50
5230
848.285714
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
35
35
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
