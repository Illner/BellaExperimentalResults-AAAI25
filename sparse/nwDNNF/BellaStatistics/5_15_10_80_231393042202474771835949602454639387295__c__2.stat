Number: formula size {Formula representation}
1
9000600
Number: #variables {Formula representation}
1
1500250
Number: #clauses {Formula representation}
1
1500280
Timer (reduced): initialize [ns] {Formula representation}
1
884667792
Timer: compute connected components [ns] {Formula representation}
91
4540156240
19620
629880511
49891826.813187
Number: circuit size {Circuit}
1
14954430
Number: #nodes {Circuit}
1
5132719
Number: #edges {Circuit}
1
14954430
Number: #variables {Circuit}
1
1500250
Timer: copy subcircuit [ns] {Circuit}
36
2882555658
547568
340667773
80070990.500000
Counter: formula size (copy subcircuit) {Circuit}
36
13760100
3120
1300480
382225.000000
Counter: #variables (copy subcircuit) {Circuit}
36
2615850
1120
240230
72662.500000
Counter: #clauses (copy subcircuit) {Circuit}
36
2614140
1056
240224
72615.000000
Timer (reduced): initialize [ns] {Compiler}
1
1069291350
Timer (reduced): compile [ns] {Compiler}
1
382110229691
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
0
Number: #decisions {Compiler}
1
45
Counter: ratio of recomputed hypergraph cuts {Compiler}
81
71
0
1
0.876543
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
41
31
0
1
0.756098
Counter: #connected components {Compiler}
91
81
0
1
0.890110
Counter: #monotone residual formulae / #residual formulae {Compiler}
91
10
0
1
0.109890
Counter: monotone residual formula size {Compiler}
10
2000
200
200
200.000000
Counter: #pure clauses / #clauses {Compiler}
91
10.452080
0.000000
1.000000
0.114858
Counter: pure residual formula size / residual formula size {Compiler}
91
10.310559
0.000000
1.000000
0.113303
Timer: assign literal [ns] {Compiler}
140
329512707538
2050
82140788902
2353662196.700000
Timer: unassign literal [ns] {Compiler}
140
566070831
450
71583192
4043363.078571
Timer: get decision variable [ns] {Decision heuristic}
45
275849455
90
57532922
6129987.888889
Counter: #preselected variables {Decision heuristic}
45
10096140
1
1500250
224358.666667
Counter: #restricted variables / #preselected variables {Decision heuristic}
31
0.025230
0.000033
0.003311
0.000814
Timer (reduced): initialize [ns] {SAT solver}
1
311808555
Timer (reduced): initial simplification [ns] {SAT solver}
1
4260
Timer (reduced): initially implied literals [ns] {SAT solver}
1
3610
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
91
2969785763
68100
328804342
32635008.384615
Timer: unit propagation [ns] {SAT solver}
91
214729
280
47020
2359.659341
Counter: #implied literals {SAT solver}
91
280
0
10
3.076923
Counter: #implied literals / #variables {SAT solver}
91
0.099653
0.000000
0.009901
0.001095
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
13
23143558
557409
3908039
1780273.692308
Counter: #implicit implied literals / #variables {SAT solver}
13
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
13
0.003289
0.000000
0.003289
0.000253
Timer: compute cut [ns] {Partitioning hypergraph}
1
4291589
4291589
4291589
4291589.000000
Counter: cut size {Partitioning hypergraph}
1
11
11
11
11.000000
Counter: cut size / #variables {Partitioning hypergraph}
1
0.002454
0.002454
0.002454
0.002454
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
10
3730920
43070
2713502
373092.000000
Counter: #vertices {Partitioning hypergraph}
10
62
0
62
6.200000
Counter: #vertices / #clauses {Partitioning hypergraph}
10
0.014162
0.000000
0.014162
0.001416
Counter: #hyperedges {Partitioning hypergraph}
10
16
0
16
1.600000
Counter: #hyperedges / #variables {Partitioning hypergraph}
10
0.003570
0.000000
0.003570
0.000357
Counter: hypergraph size {Partitioning hypergraph}
10
136
0
136
13.600000
Counter: hypergraph size / formula size {Partitioning hypergraph}
10
0.008159
0.000000
0.008159
0.000816
Timer: create equivalence structure [ns] {Partitioning hypergraph}
10
925307
22890
466109
92530.700000
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
81
36
0
1
0.444444
Number: #current entries {Cache - component caching}
1
45
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
81
38439805922
216039
6756023049
474565505.209877
Timer: search cache record structure [ns] {Cache - component caching}
81
29548629
160
2568563
364797.888889
Timer: add cache record structure [ns] {Cache - component caching}
45
20087394
480
2722332
446386.533333
Counter: #empty cache records / #cache records {Cache - component caching}
81
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
81
73190460
608
9000600
903585.925926
Counter: formula size (positive hit) {Cache - component caching}
36
13760100
3120
1300480
382225.000000
Counter: formula size (negative hit) {Cache - component caching}
45
59430360
608
9000600
1320674.666667
Counter: #variables (cache record structure) {Cache - component caching}
81
12734190
304
1500250
157212.222222
Counter: #variables (positive hit) {Cache - component caching}
36
2615850
1120
240230
72662.500000
Counter: #variables (negative hit) {Cache - component caching}
45
10118340
304
1500250
224852.000000
Counter: #clauses (cache record structure) {Cache - component caching}
81
12730020
204
1500280
157160.740741
Counter: #clauses (positive hit) {Cache - component caching}
36
2614140
1056
240224
72615.000000
Counter: #clauses (negative hit) {Cache - component caching}
45
10115880
204
1500280
224797.333333
Counter: #removed clauses / #clauses {Cache - component caching}
81
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
36
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
45
18170
50
1280
403.777778
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
45
45
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
