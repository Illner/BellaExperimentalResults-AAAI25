Number: formula size {Formula representation}
1
10374
Number: #variables {Formula representation}
1
1764
Number: #clauses {Formula representation}
1
1778
Timer (reduced): initialize [ns] {Formula representation}
1
1666525
Timer: compute connected components [ns] {Formula representation}
30
1005676
830
175460
33522.533333
Number: circuit size {Circuit}
1
175798
Number: #nodes {Circuit}
1
84443
Number: #edges {Circuit}
1
175798
Number: #variables {Circuit}
1
1764
Timer: copy subcircuit [ns] {Circuit}
32
34152350
3400
12766859
1067260.937500
Counter: formula size (copy subcircuit) {Circuit}
32
18732
15
5094
585.375000
Counter: #variables (copy subcircuit) {Circuit}
32
3984
6
948
124.500000
Counter: #clauses (copy subcircuit) {Circuit}
32
4110
7
961
128.437500
Timer (reduced): initialize [ns] {Compiler}
1
6930457
Timer (reduced): compile [ns] {Compiler}
1
152061155
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
3
Number: #splits {Compiler}
1
27
Number: #decisions {Compiler}
1
16
Counter: ratio of recomputed hypergraph cuts {Compiler}
48
25
0
1
0.520833
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
3
0
0
0
0.000000
Counter: #connected components {Compiler}
30
48
1
4
1.600000
Counter: #monotone residual formulae / #residual formulae {Compiler}
30
0
0
0
0.000000
Counter: monotone residual formula size {Compiler}
0
0
0
0
0.000000
Counter: #pure clauses / #clauses {Compiler}
30
0.000000
0.000000
0.000000
0.000000
Counter: pure residual formula size / residual formula size {Compiler}
30
0.000000
0.000000
0.000000
0.000000
Timer: assign literal [ns] {Compiler}
56
1369794
260
391139
24460.607143
Timer: unassign literal [ns] {Compiler}
56
345098
220
51499
6162.464286
Timer: get decision variable [ns] {Decision heuristic}
16
7000
70
2880
437.500000
Counter: #preselected variables {Decision heuristic}
16
90
2
12
5.625000
Counter: #restricted variables / #preselected variables {Decision heuristic}
0
0.000000
0.000000
0.000000
0.000000
Timer (reduced): initialize [ns] {SAT solver}
1
842657
Timer (reduced): initial simplification [ns] {SAT solver}
1
610
Timer (reduced): initially implied literals [ns] {SAT solver}
1
330
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
33
1590437
380
441158
48195.060606
Timer: unit propagation [ns] {SAT solver}
33
12070
120
1390
365.757576
Counter: #implied literals {SAT solver}
33
56
0
3
1.696970
Counter: #implied literals / #variables {SAT solver}
33
2.741059
0.000000
1.000000
0.083062
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
25
1231286
2550
886957
49251.440000
Counter: #implicit implied literals / #variables {SAT solver}
25
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
25
0.000000
0.000000
0.000000
0.000000
Timer: compute cut [ns] {Partitioning hypergraph}
3
88597352
360829
78718204
29532450.666667
Counter: cut size {Partitioning hypergraph}
3
23
3
12
7.666667
Counter: cut size / #variables {Partitioning hypergraph}
3
0.552780
0.006803
0.500000
0.184260
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
3
10672486
7530
10432886
3557495.333333
Counter: #vertices {Partitioning hypergraph}
3
1900
4
1736
633.333333
Counter: #vertices / #clauses {Partitioning hypergraph}
3
2.431784
0.571429
0.976378
0.810595
Counter: #hyperedges {Partitioning hypergraph}
3
66
3
42
22.000000
Counter: #hyperedges / #variables {Partitioning hypergraph}
3
0.644499
0.023810
0.500000
0.214833
Counter: hypergraph size {Partitioning hypergraph}
3
9108
6
8568
3036.000000
Counter: hypergraph size / formula size {Partitioning hypergraph}
3
1.958421
0.400000
0.825911
0.652807
Timer: create equivalence structure [ns] {Partitioning hypergraph}
3
553427
1560
521918
184475.666667
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
48
32
0
1
0.666667
Number: #current entries {Cache - component caching}
1
16
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
48
11699650
3090
2161183
243742.708333
Timer: search cache record structure [ns] {Cache - component caching}
48
39370
60
7010
820.208333
Timer: add cache record structure [ns] {Cache - component caching}
16
37170
160
17230
2323.125000
Counter: #empty cache records / #cache records {Cache - component caching}
48
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
48
53224
8
10374
1108.833333
Counter: formula size (positive hit) {Cache - component caching}
32
18732
15
5094
585.375000
Counter: formula size (negative hit) {Cache - component caching}
16
34492
8
10374
2155.750000
Counter: #variables (cache record structure) {Cache - component caching}
48
10532
4
1764
219.416667
Counter: #variables (positive hit) {Cache - component caching}
32
3984
6
948
124.500000
Counter: #variables (negative hit) {Cache - component caching}
16
6548
4
1764
409.250000
Counter: #clauses (cache record structure) {Cache - component caching}
48
10786
4
1778
224.708333
Counter: #clauses (positive hit) {Cache - component caching}
32
4110
7
961
128.437500
Counter: #clauses (negative hit) {Cache - component caching}
16
6676
4
1778
417.250000
Counter: #removed clauses / #clauses {Cache - component caching}
48
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
32
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
16
1350
30
370
84.375000
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
16
16
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
