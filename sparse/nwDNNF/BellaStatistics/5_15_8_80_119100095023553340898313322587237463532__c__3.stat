Number: formula size {Formula representation}
1
2949520
Number: #variables {Formula representation}
1
491720
Number: #clauses {Formula representation}
1
491705
Timer (reduced): initialize [ns] {Formula representation}
1
320789265
Timer: compute connected components [ns] {Formula representation}
71
1780734093
14990
371393777
25080761.873239
Number: circuit size {Circuit}
1
3987735
Number: #nodes {Circuit}
1
1685023
Number: #edges {Circuit}
1
3987735
Number: #variables {Circuit}
1
491720
Timer: copy subcircuit [ns] {Circuit}
28
1120384737
737878
246238049
40013740.607143
Counter: formula size (copy subcircuit) {Circuit}
28
5463136
1808
659776
195112.000000
Counter: #variables (copy subcircuit) {Circuit}
28
1019312
664
118968
36404.000000
Counter: #clauses (copy subcircuit) {Circuit}
28
1017758
613
118932
36348.500000
Timer (reduced): initialize [ns] {Compiler}
1
676692684
Timer (reduced): compile [ns] {Compiler}
1
60909553452
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
0
Number: #decisions {Compiler}
1
35
Counter: ratio of recomputed hypergraph cuts {Compiler}
63
47
0
1
0.746032
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
26
21
0
1
0.807692
Counter: #connected components {Compiler}
71
63
0
1
0.887324
Counter: #monotone residual formulae / #residual formulae {Compiler}
71
8
0
1
0.112676
Counter: monotone residual formula size {Compiler}
8
1152
144
144
144.000000
Counter: #pure clauses / #clauses {Compiler}
71
8.580938
0.000000
1.000000
0.120858
Counter: pure residual formula size / residual formula size {Compiler}
71
8.403361
0.000000
1.000000
0.118357
Timer: assign literal [ns] {Compiler}
110
42721970037
1610
11576671047
388381545.790909
Timer: unassign literal [ns] {Compiler}
110
159564187
410
18669539
1450583.518182
Timer: get decision variable [ns] {Decision heuristic}
35
106833620
130
38832425
3052389.142857
Counter: #preselected variables {Decision heuristic}
35
2966437
1
491720
84755.342857
Counter: #restricted variables / #preselected variables {Decision heuristic}
21
0.015469
0.000081
0.002800
0.000737
Timer (reduced): initialize [ns] {SAT solver}
1
186376051
Timer (reduced): initial simplification [ns] {SAT solver}
1
3110
Timer (reduced): initially implied literals [ns] {SAT solver}
1
2200
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
71
831377935
21659
165334829
11709548.380282
Timer: unit propagation [ns] {SAT solver}
71
243950
220
70050
3435.915493
Counter: #implied literals {SAT solver}
71
185
0
8
2.605634
Counter: #implied literals / #variables {SAT solver}
71
0.110808
0.000000
0.013699
0.001561
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
12
25009571
138380
4150678
2084130.916667
Counter: #implicit implied literals / #variables {SAT solver}
12
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
12
0.004545
0.000000
0.004545
0.000379
Timer: compute cut [ns] {Partitioning hypergraph}
1
4233898
4233898
4233898
4233898.000000
Counter: cut size {Partitioning hypergraph}
1
11
11
11
11.000000
Counter: cut size / #variables {Partitioning hypergraph}
1
0.002895
0.002895
0.002895
0.002895
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
5
2094705
31520
1890275
418941.000000
Counter: #vertices {Partitioning hypergraph}
5
66
0
66
13.200000
Counter: #vertices / #clauses {Partitioning hypergraph}
5
0.017732
0.000000
0.017732
0.003546
Counter: #hyperedges {Partitioning hypergraph}
5
16
0
16
3.200000
Counter: #hyperedges / #variables {Partitioning hypergraph}
5
0.004211
0.000000
0.004211
0.000842
Counter: hypergraph size {Partitioning hypergraph}
5
144
0
144
28.800000
Counter: hypergraph size / formula size {Partitioning hypergraph}
5
0.010158
0.000000
0.010158
0.002032
Timer: create equivalence structure [ns] {Partitioning hypergraph}
5
463179
21510
347379
92635.800000
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
63
28
0
1
0.444444
Number: #current entries {Cache - component caching}
1
35
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
63
13078370652
171709
2757620389
207593184.952381
Timer: search cache record structure [ns] {Cache - component caching}
63
13776579
430
1941105
218675.857143
Timer: add cache record structure [ns] {Cache - component caching}
35
9428286
1140
1595916
269379.600000
Counter: #empty cache records / #cache records {Cache - component caching}
63
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
63
22935437
440
2949520
364054.555556
Counter: formula size (positive hit) {Cache - component caching}
28
5463136
1808
659776
195112.000000
Counter: formula size (negative hit) {Cache - component caching}
35
17472301
440
2949520
499208.600000
Counter: #variables (cache record structure) {Cache - component caching}
63
4006254
220
491720
63591.333333
Counter: #variables (positive hit) {Cache - component caching}
28
1019312
664
118968
36404.000000
Counter: #variables (negative hit) {Cache - component caching}
35
2986942
220
491720
85341.200000
Counter: #clauses (cache record structure) {Cache - component caching}
63
4002586
148
491705
63533.111111
Counter: #clauses (positive hit) {Cache - component caching}
28
1017758
613
118932
36348.500000
Counter: #clauses (negative hit) {Cache - component caching}
35
2984828
148
491705
85280.800000
Counter: #removed clauses / #clauses {Cache - component caching}
63
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
28
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
35
21420
60
3580
612.000000
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
35
35
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
