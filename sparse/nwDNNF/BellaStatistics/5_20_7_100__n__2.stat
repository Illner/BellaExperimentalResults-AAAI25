Number: formula size {Formula representation}
1
16471175
Number: #variables {Formula representation}
1
2353190
Number: #clauses {Formula representation}
1
2353125
Timer (reduced): initialize [ns] {Formula representation}
1
1786142871
Timer: compute connected components [ns] {Formula representation}
33613
18011096647
27050
1139763197
535837.225091
Number: circuit size {Circuit}
1
7199687
Number: #nodes {Circuit}
1
7146384
Number: #edges {Circuit}
1
7199687
Number: #variables {Circuit}
1
2353190
Timer: copy subcircuit [ns] {Circuit}
0
0
0
0
0.000000
Counter: formula size (copy subcircuit) {Circuit}
0
0
0
0
0.000000
Counter: #variables (copy subcircuit) {Circuit}
0
0
0
0
0.000000
Counter: #clauses (copy subcircuit) {Circuit}
0
0
0
0
0.000000
Timer (reduced): initialize [ns] {Compiler}
1
1858410066
Timer (reduced): compile [ns] {Compiler}
1
1486068324549
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
0
Number: #decisions {Compiler}
1
16806
Counter: ratio of recomputed hypergraph cuts {Compiler}
16806
14686
0
1
0.873855
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
14686
1371
0
1
0.093354
Counter: #connected components {Compiler}
33613
16806
0
1
0.499985
Counter: #monotone residual formulae / #residual formulae {Compiler}
33613
16807
0
1
0.500015
Counter: monotone residual formula size {Compiler}
16807
4705960
280
280
280.000000
Counter: #pure clauses / #clauses {Compiler}
33613
16807.000000
0.000000
1.000000
0.500015
Counter: pure residual formula size / residual formula size {Compiler}
33613
16807.000000
0.000000
1.000000
0.500015
Timer: assign literal [ns] {Compiler}
53219
1420200185935
1840
479106512105
26685961.516282
Timer: unassign literal [ns] {Compiler}
53219
2474445041
390
113786184
46495.519288
Timer: get decision variable [ns] {Decision heuristic}
16806
682931225
50
107266698
40636.155242
Counter: #preselected variables {Decision heuristic}
16806
33575601
1
2353190
1997.834166
Counter: #restricted variables / #preselected variables {Decision heuristic}
1371
2.440036
0.000015
0.002370
0.001780
Timer (reduced): initialize [ns] {SAT solver}
1
528960166
Timer (reduced): initial simplification [ns] {SAT solver}
1
1630
Timer (reduced): initially implied literals [ns] {SAT solver}
1
1260
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
33613
8998263468
16660
628604438
267701.885223
Timer: unit propagation [ns] {SAT solver}
33613
13632795
180
142050
405.581025
Counter: #implied literals {SAT solver}
33613
81229
0
7
2.416595
Counter: #implied literals / #variables {SAT solver}
33613
100.899221
0.000000
0.007092
0.003002
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
13315
6198604913
170699
2796829
465535.479760
Counter: #implicit implied literals / #variables {SAT solver}
13315
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
13315
5.662736
0.000000
0.002358
0.000425
Timer: compute cut [ns] {Partitioning hypergraph}
343
34620803
83330
306940
100935.285714
Counter: cut size {Partitioning hypergraph}
343
2744
8
8
8.000000
Counter: cut size / #variables {Partitioning hypergraph}
343
0.672220
0.001960
0.001960
0.001960
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
13315
2333204888
50530
2495929
175231.309651
Counter: #vertices {Partitioning hypergraph}
13315
10290
0
30
0.772813
Counter: #vertices / #clauses {Partitioning hypergraph}
13315
2.598485
0.000000
0.007576
0.000195
Counter: #hyperedges {Partitioning hypergraph}
13315
3773
0
11
0.283365
Counter: #hyperedges / #variables {Partitioning hypergraph}
13315
0.924302
0.000000
0.002695
0.000069
Counter: hypergraph size {Partitioning hypergraph}
13315
22981
0
67
1.725948
Counter: hypergraph size / formula size {Partitioning hypergraph}
13315
1.457538
0.000000
0.004249
0.000109
Timer: create equivalence structure [ns] {Partitioning hypergraph}
13315
867346129
26870
546170
65140.527901
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
16806
0
0
0
0.000000
Number: #current entries {Cache - component caching}
1
16806
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
16806
15956360074
73130
194181887
949444.250506
Timer: search cache record structure [ns] {Cache - component caching}
16806
63292411
170
805070
3766.060395
Timer: add cache record structure [ns] {Cache - component caching}
16806
89589807
430
2863979
5330.822742
Counter: #empty cache records / #cache records {Cache - component caching}
16806
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
16806
227611241
848
16471175
13543.451208
Counter: formula size (positive hit) {Cache - component caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - component caching}
16806
227611241
848
16471175
13543.451208
Counter: #variables (cache record structure) {Cache - component caching}
16806
47922138
424
2353190
2851.489825
Counter: #variables (positive hit) {Cache - component caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - component caching}
16806
47922138
424
2353190
2851.489825
Counter: #clauses (cache record structure) {Cache - component caching}
16806
45709273
284
2353125
2719.818696
Counter: #clauses (positive hit) {Cache - component caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - component caching}
16806
45709273
284
2353125
2719.818696
Counter: #removed clauses / #clauses {Cache - component caching}
16806
307.488206
0.000345
1.000000
0.018296
Counter: #identical mappings / #mappings {Cache - component caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
16806
959180
30
1800
57.073664
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
16806
16806
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
