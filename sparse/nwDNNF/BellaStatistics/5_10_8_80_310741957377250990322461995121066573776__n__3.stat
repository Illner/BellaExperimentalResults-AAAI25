Number: formula size {Formula representation}
1
1966480
Number: #variables {Formula representation}
1
327840
Number: #clauses {Formula representation}
1
327865
Timer (reduced): initialize [ns] {Formula representation}
1
191449595
Timer: compute connected components [ns] {Formula representation}
65535
7891952803
9350
103643492
120423.480629
Number: circuit size {Circuit}
1
2929018
Number: #nodes {Circuit}
1
1161209
Number: #edges {Circuit}
1
2929018
Number: #variables {Circuit}
1
327840
Timer: copy subcircuit [ns] {Circuit}
0
0
0
0
0.000000
Counter: formula size (copy subcircuit) {Circuit}
0
0
0
0
0.000000
Counter: #variables (copy subcircuit) {Circuit}
0
0
0
0
0.000000
Counter: #clauses (copy subcircuit) {Circuit}
0
0
0
0
0.000000
Timer (reduced): initialize [ns] {Compiler}
1
196847355
Timer (reduced): compile [ns] {Compiler}
1
57553347525
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
0
Number: #decisions {Compiler}
1
32767
Counter: ratio of recomputed hypergraph cuts {Compiler}
32767
27111
0
1
0.827387
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
27111
447
0
1
0.016488
Counter: #connected components {Compiler}
65535
32767
0
1
0.499992
Counter: #monotone residual formulae / #residual formulae {Compiler}
65535
32768
0
1
0.500008
Counter: monotone residual formula size {Compiler}
32768
3670016
112
112
112.000000
Counter: #pure clauses / #clauses {Compiler}
65535
33428.508501
0.000000
1.000000
0.510086
Counter: pure residual formula size / residual formula size {Compiler}
65535
33235.314649
0.000000
1.000000
0.507138
Timer: assign literal [ns] {Compiler}
105286
28107297582
630
4173594222
266961.396406
Timer: unassign literal [ns] {Compiler}
105286
1106601232
200
16918884
10510.430940
Timer: get decision variable [ns] {Decision heuristic}
32767
95716171
40
6132664
2921.114872
Counter: #preselected variables {Decision heuristic}
32767
7617860
1
327840
232.485733
Counter: #restricted variables / #preselected variables {Decision heuristic}
447
1.026188
0.000122
0.003541
0.002296
Timer (reduced): initialize [ns] {SAT solver}
1
74530162
Timer (reduced): initial simplification [ns] {SAT solver}
1
1090
Timer (reduced): initially implied literals [ns] {SAT solver}
1
670
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
65535
3586952471
5580
50473101
54733.386297
Timer: unit propagation [ns] {SAT solver}
65535
20652007
130
41600
315.129427
Counter: #implied literals {SAT solver}
65535
167863
0
8
2.561425
Counter: #implied literals / #variables {SAT solver}
65535
510.742714
0.000000
0.017544
0.007793
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
26664
4618077812
63410
2359769
173195.237474
Counter: #implicit implied literals / #variables {SAT solver}
26664
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
26664
39.091980
0.000000
0.006410
0.001466
Timer: compute cut [ns] {Partitioning hypergraph}
536
78484586
47610
212541
146426.466418
Counter: cut size {Partitioning hypergraph}
536
6276
2
13
11.708955
Counter: cut size / #variables {Partitioning hypergraph}
536
2.496042
0.003033
0.007463
0.004657
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
26664
2219274984
18450
4595227
83231.135014
Counter: #vertices {Partitioning hypergraph}
26664
33888
0
66
1.270927
Counter: #vertices / #clauses {Partitioning hypergraph}
26664
13.174197
0.000000
0.026337
0.000494
Counter: #hyperedges {Partitioning hypergraph}
26664
8352
0
17
0.313231
Counter: #hyperedges / #variables {Partitioning hypergraph}
26664
3.331441
0.000000
0.009950
0.000125
Counter: hypergraph size {Partitioning hypergraph}
26664
78040
0
208
2.926793
Counter: hypergraph size / formula size {Partitioning hypergraph}
26664
7.732938
0.000000
0.015152
0.000290
Timer: create equivalence structure [ns] {Partitioning hypergraph}
26664
631619682
8660
323401
23688.106886
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
32767
0
0
0
0.000000
Number: #current entries {Cache - component caching}
1
32767
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
32767
5540764245
22100
21553511
169095.866115
Timer: search cache record structure [ns] {Cache - component caching}
32767
33490782
140
78860
1022.088748
Timer: add cache record structure [ns] {Cache - component caching}
32767
42899381
210
486632
1309.225166
Counter: #empty cache records / #cache records {Cache - component caching}
32767
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
32767
87130119
344
1966480
2659.081362
Counter: formula size (positive hit) {Cache - component caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - component caching}
32767
87130119
344
1966480
2659.081362
Counter: #variables (cache record structure) {Cache - component caching}
32767
23581738
172
327840
719.679495
Counter: #variables (positive hit) {Cache - component caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - component caching}
32767
23581738
172
327840
719.679495
Counter: #clauses (cache record structure) {Cache - component caching}
32767
21915500
116
327865
668.828394
Counter: #clauses (positive hit) {Cache - component caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - component caching}
32767
21915500
116
327865
668.828394
Counter: #removed clauses / #clauses {Cache - component caching}
32767
1480.851981
0.008952
1.000000
0.045193
Counter: #identical mappings / #mappings {Cache - component caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
32767
2230689
30
1040
68.077303
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
32767
32767
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
