Number: formula size {Formula representation}
1
1000600
Number: #variables {Formula representation}
1
200300
Number: #clauses {Formula representation}
1
200280
Timer (reduced): initialize [ns] {Formula representation}
1
147131242
Timer: compute connected components [ns] {Formula representation}
199999
37016804797
17750
86726789
185084.949410
Number: circuit size {Circuit}
1
12223952
Number: #nodes {Circuit}
1
1131213
Number: #edges {Circuit}
1
12223952
Number: #variables {Circuit}
1
200300
Timer: copy subcircuit [ns] {Circuit}
0
0
0
0
0.000000
Counter: formula size (copy subcircuit) {Circuit}
0
0
0
0
0.000000
Counter: #variables (copy subcircuit) {Circuit}
0
0
0
0
0.000000
Counter: #clauses (copy subcircuit) {Circuit}
0
0
0
0
0.000000
Timer (reduced): initialize [ns] {Compiler}
1
181847557
Timer (reduced): compile [ns] {Compiler}
1
150652243725
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
0
Number: #decisions {Compiler}
1
99999
Counter: ratio of recomputed hypergraph cuts {Compiler}
99999
83198
0
1
0.831988
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
83198
999
0
1
0.012008
Counter: #connected components {Compiler}
199999
99999
0
1
0.499997
Counter: #monotone residual formulae / #residual formulae {Compiler}
199999
100000
0
1
0.500003
Counter: monotone residual formula size {Compiler}
100000
20000000
200
200
200.000000
Counter: #pure clauses / #clauses {Compiler}
199999
101387.486824
0.000000
1.000000
0.506940
Counter: pure residual formula size / residual formula size {Compiler}
199999
100975.772417
0.000000
1.000000
0.504881
Timer: assign literal [ns] {Compiler}
314568
15199414496
1100
836408787
48318.374711
Timer: unassign literal [ns] {Compiler}
314568
4386625616
260
14247722
13944.920068
Timer: get decision variable [ns] {Decision heuristic}
99999
126516966
50
8120161
1265.182312
Counter: #preselected variables {Decision heuristic}
99999
13525738
1
200300
135.258733
Counter: #restricted variables / #preselected variables {Decision heuristic}
999
2.845318
0.000250
0.003997
0.002848
Timer (reduced): initialize [ns] {SAT solver}
1
65112848
Timer (reduced): initial simplification [ns] {SAT solver}
1
1620
Timer (reduced): initially implied literals [ns] {SAT solver}
1
1030
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
199999
12620711418
10359
40800014
63103.872609
Timer: unit propagation [ns] {SAT solver}
199999
94017345
180
200868
470.089075
Counter: #implied literals {SAT solver}
199999
587187
0
10
2.935950
Counter: #implied literals / #variables {SAT solver}
199999
864.153880
0.000000
0.009901
0.004321
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
82199
27009792827
119239
3288788
328590.284882
Counter: #implicit implied literals / #variables {SAT solver}
82199
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
82199
44.159041
0.000000
0.003460
0.000537
Timer: compute cut [ns] {Partitioning hypergraph}
1005
177811455
56990
373986
176926.820896
Counter: cut size {Partitioning hypergraph}
1005
16054
2
19
15.974129
Counter: cut size / #variables {Partitioning hypergraph}
1005
3.497919
0.002817
0.004225
0.003481
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
82199
10966921868
33920
3583085
133419.164077
Counter: #vertices {Partitioning hypergraph}
82199
102020
0
102
1.241134
Counter: #vertices / #clauses {Partitioning hypergraph}
82199
22.643352
0.000000
0.022606
0.000275
Counter: #hyperedges {Partitioning hypergraph}
82199
20020
0
20
0.243555
Counter: #hyperedges / #variables {Partitioning hypergraph}
82199
4.366564
0.000000
0.005634
0.000053
Counter: hypergraph size {Partitioning hypergraph}
82199
220045
0
220
2.676979
Counter: hypergraph size / formula size {Partitioning hypergraph}
82199
13.407093
0.000000
0.013382
0.000163
Timer: create equivalence structure [ns] {Partitioning hypergraph}
82199
4130102874
16590
627974
50245.171766
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
99999
0
0
0
0.000000
Number: #current entries {Cache - component caching}
1
99999
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
99999
24021177011
43540
14580338
240214.172252
Timer: search cache record structure [ns] {Cache - component caching}
99999
156623054
300
199648
1566.246202
Timer: add cache record structure [ns] {Cache - component caching}
99999
196813428
340
1334177
1968.153962
Counter: #empty cache records / #cache records {Cache - component caching}
99999
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
99999
311246967
608
1000600
3112.500795
Counter: formula size (positive hit) {Cache - component caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - component caching}
99999
311246967
608
1000600
3112.500795
Counter: #variables (cache record structure) {Cache - component caching}
99999
102610900
304
200300
1026.119261
Counter: #variables (positive hit) {Cache - component caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - component caching}
99999
102610900
304
200300
1026.119261
Counter: #clauses (cache record structure) {Cache - component caching}
99999
93161331
204
200280
931.622626
Counter: #clauses (positive hit) {Cache - component caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - component caching}
99999
93161331
204
200280
931.622626
Counter: #removed clauses / #clauses {Cache - component caching}
99999
3099.789397
0.013921
1.000000
0.030998
Counter: #identical mappings / #mappings {Cache - component caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
99999
6894411
30
34100
68.944799
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
99999
99999
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
