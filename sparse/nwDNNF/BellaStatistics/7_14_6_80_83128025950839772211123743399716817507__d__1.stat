Number: formula size {Formula representation}
1
4573128
Number: #variables {Formula representation}
1
653352
Number: #clauses {Formula representation}
1
653562
Timer (reduced): initialize [ns] {Formula representation}
1
424644352
Timer: compute connected components [ns] {Formula representation}
75
417705443
540
53067545
5569405.906667
Number: circuit size {Circuit}
1
171863584
Number: #nodes {Circuit}
1
69606419
Number: #edges {Circuit}
1
171863584
Number: #variables {Circuit}
1
653352
Timer: copy subcircuit [ns] {Circuit}
113
42010421738
8180
8012818560
371773643.699115
Counter: formula size (copy subcircuit) {Circuit}
113
8378304
48
1213848
74144.283186
Counter: #variables (copy subcircuit) {Circuit}
113
1347456
12
186780
11924.389381
Counter: #clauses (copy subcircuit) {Circuit}
113
1353336
22
186980
11976.424779
Timer (reduced): initialize [ns] {Compiler}
1
369925602
Timer (reduced): compile [ns] {Compiler}
1
157959985718
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
6
Number: #splits {Compiler}
1
96
Number: #decisions {Compiler}
1
40
Counter: ratio of recomputed hypergraph cuts {Compiler}
153
107
0
1
0.699346
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
22
20
0
1
0.909091
Counter: #connected components {Compiler}
75
153
1
11
2.040000
Counter: #monotone residual formulae / #residual formulae {Compiler}
75
0
0
0
0.000000
Counter: monotone residual formula size {Compiler}
0
0
0
0
0.000000
Counter: #pure clauses / #clauses {Compiler}
75
0.000000
0.000000
0.000000
0.000000
Counter: pure residual formula size / residual formula size {Compiler}
75
0.000000
0.000000
0.000000
0.000000
Timer: assign literal [ns] {Compiler}
128
102832642660
210
37121175408
803380020.781250
Timer: unassign literal [ns] {Compiler}
128
179229520
210
30496813
1400230.625000
Timer: get decision variable [ns] {Decision heuristic}
40
104494427
60
23640220
2612360.675000
Counter: #preselected variables {Decision heuristic}
40
3281340
2
653352
82033.500000
Counter: #restricted variables / #preselected variables {Decision heuristic}
0
0.000000
0.000000
0.000000
0.000000
Timer (reduced): initialize [ns] {SAT solver}
1
140401484
Timer (reduced): initial simplification [ns] {SAT solver}
1
1020
Timer (reduced): initially implied literals [ns] {SAT solver}
1
520
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
81
784514626
390
98190201
9685365.753086
Timer: unit propagation [ns] {SAT solver}
81
144840
110
31400
1788.148148
Counter: #implied literals {SAT solver}
81
176
0
6
2.172840
Counter: #implied literals / #variables {SAT solver}
81
4.041712
0.000000
1.000000
0.049898
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
72
25708177
4810
6683263
357058.013889
Counter: #implicit implied literals / #variables {SAT solver}
72
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
72
0.000000
0.000000
0.000000
0.000000
Timer: compute cut [ns] {Partitioning hypergraph}
2
469123909
409829
468714080
234561954.500000
Counter: cut size {Partitioning hypergraph}
2
30
6
24
15.000000
Counter: cut size / #variables {Partitioning hypergraph}
2
0.504854
0.004854
0.500000
0.252427
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
2
7553420
20179
7533241
3776710.000000
Counter: #vertices {Partitioning hypergraph}
2
4866
7
4859
2433.000000
Counter: #vertices / #clauses {Partitioning hypergraph}
2
1.268319
0.318182
0.950137
0.634159
Counter: #hyperedges {Partitioning hypergraph}
2
108
6
102
54.000000
Counter: #hyperedges / #variables {Partitioning hypergraph}
2
0.520631
0.020631
0.500000
0.260316
Counter: hypergraph size {Partitioning hypergraph}
2
17124
12
17112
8562.000000
Counter: hypergraph size / formula size {Partitioning hypergraph}
2
1.011752
0.250000
0.761752
0.505876
Timer: create equivalence structure [ns] {Partitioning hypergraph}
2
901067
3030
898037
450533.500000
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
153
113
0
1
0.738562
Number: #current entries {Cache - component caching}
1
40
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
153
10980545896
2020
2210219069
71768273.830065
Timer: search cache record structure [ns] {Cache - component caching}
153
12244819
40
1233996
80031.496732
Timer: add cache record structure [ns] {Cache - component caching}
40
7305288
270
1370206
182632.200000
Counter: #empty cache records / #cache records {Cache - component caching}
153
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
153
30734624
8
4573128
200879.895425
Counter: formula size (positive hit) {Cache - component caching}
113
8378304
48
1213848
74144.283186
Counter: formula size (negative hit) {Cache - component caching}
40
22356320
8
4573128
558908.000000
Counter: #variables (cache record structure) {Cache - component caching}
153
4654376
4
653352
30420.758170
Counter: #variables (positive hit) {Cache - component caching}
113
1347456
12
186780
11924.389381
Counter: #variables (negative hit) {Cache - component caching}
40
3306920
4
653352
82673.000000
Counter: #clauses (cache record structure) {Cache - component caching}
153
4666166
4
653562
30497.816993
Counter: #clauses (positive hit) {Cache - component caching}
113
1353336
22
186980
11976.424779
Counter: #clauses (negative hit) {Cache - component caching}
40
3312830
4
653562
82820.750000
Counter: #removed clauses / #clauses {Cache - component caching}
153
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
113
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
40
12030
30
1000
300.750000
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
40
40
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
