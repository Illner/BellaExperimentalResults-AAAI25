Number: formula size {Formula representation}
1
25680
Number: #variables {Formula representation}
1
2610
Number: #clauses {Formula representation}
1
2600
Timer (reduced): initialize [ns] {Formula representation}
1
3507404
Timer: compute connected components [ns] {Formula representation}
21
3152995
1250
1125031
150142.619048
Number: circuit size {Circuit}
1
27890
Number: #nodes {Circuit}
1
16735
Number: #edges {Circuit}
1
27890
Number: #variables {Circuit}
1
2610
Timer: copy subcircuit [ns] {Circuit}
9
5477849
21210
2848138
608649.888889
Counter: formula size (copy subcircuit) {Circuit}
9
22688
44
11592
2520.888889
Counter: #variables (copy subcircuit) {Circuit}
9
3072
22
1326
341.333333
Counter: #clauses (copy subcircuit) {Circuit}
9
2988
16
1316
332.000000
Timer (reduced): initialize [ns] {Compiler}
1
6744479
Timer (reduced): compile [ns] {Compiler}
1
35147707
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
0
Number: #decisions {Compiler}
1
10
Counter: ratio of recomputed hypergraph cuts {Compiler}
19
3
0
1
0.157895
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
2
0
0
0
0.000000
Counter: #connected components {Compiler}
21
19
0
1
0.904762
Counter: #monotone residual formulae / #residual formulae {Compiler}
21
2
0
1
0.095238
Counter: monotone residual formula size {Compiler}
2
24
12
12
12.000000
Counter: #pure clauses / #clauses {Compiler}
21
2.339869
0.000000
1.000000
0.111422
Counter: pure residual formula size / residual formula size {Compiler}
21
2.240741
0.000000
1.000000
0.106702
Timer: assign literal [ns] {Compiler}
40
5119885
520
2236973
127997.125000
Timer: unassign literal [ns] {Compiler}
40
312806
230
72940
7820.150000
Timer: get decision variable [ns] {Decision heuristic}
10
2400
50
1440
240.000000
Counter: #preselected variables {Decision heuristic}
10
46
1
9
4.600000
Counter: #restricted variables / #preselected variables {Decision heuristic}
0
0.000000
0.000000
0.000000
0.000000
Timer (reduced): initialize [ns] {SAT solver}
1
1188332
Timer (reduced): initial simplification [ns] {SAT solver}
1
4240
Timer (reduced): initially implied literals [ns] {SAT solver}
1
870
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
21
739433
1520
165989
35211.095238
Timer: unit propagation [ns] {SAT solver}
21
10510
140
4560
500.476190
Counter: #implied literals {SAT solver}
21
40
0
2
1.904762
Counter: #implied literals / #variables {SAT solver}
21
0.564907
0.000000
0.142857
0.026900
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
3
1489559
11090
1465649
496519.666667
Counter: #implicit implied literals / #variables {SAT solver}
3
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
3
0.094741
0.003831
0.045455
0.031580
Timer: compute cut [ns] {Partitioning hypergraph}
1
809064
809064
809064
809064.000000
Counter: cut size {Partitioning hypergraph}
1
9
9
9
9.000000
Counter: cut size / #variables {Partitioning hypergraph}
1
0.003448
0.003448
0.003448
0.003448
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
2
5617279
5330
5611949
2808639.500000
Counter: #vertices {Partitioning hypergraph}
2
5
0
5
2.500000
Counter: #vertices / #clauses {Partitioning hypergraph}
2
0.001923
0.000000
0.001923
0.000962
Counter: #hyperedges {Partitioning hypergraph}
2
10
0
10
5.000000
Counter: #hyperedges / #variables {Partitioning hypergraph}
2
0.003831
0.000000
0.003831
0.001916
Counter: hypergraph size {Partitioning hypergraph}
2
40
0
40
20.000000
Counter: hypergraph size / formula size {Partitioning hypergraph}
2
0.001558
0.000000
0.001558
0.000779
Timer: create equivalence structure [ns] {Partitioning hypergraph}
2
223278
2040
221238
111639.000000
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
19
9
0
1
0.473684
Number: #current entries {Cache - component caching}
1
10
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
19
10821917
15010
3762432
569574.578947
Timer: search cache record structure [ns] {Cache - component caching}
19
27100
60
9500
1426.315789
Timer: add cache record structure [ns] {Cache - component caching}
10
27600
150
13760
2760.000000
Counter: #empty cache records / #cache records {Cache - component caching}
19
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
19
71056
44
25680
3739.789474
Counter: formula size (positive hit) {Cache - component caching}
9
22688
44
11592
2520.888889
Counter: formula size (negative hit) {Cache - component caching}
10
48368
44
25680
4836.800000
Counter: #variables (cache record structure) {Cache - component caching}
19
8754
22
2610
460.736842
Counter: #variables (positive hit) {Cache - component caching}
9
3072
22
1326
341.333333
Counter: #variables (negative hit) {Cache - component caching}
10
5682
22
2610
568.200000
Counter: #clauses (cache record structure) {Cache - component caching}
19
8576
16
2600
451.368421
Counter: #clauses (positive hit) {Cache - component caching}
9
2988
16
1316
332.000000
Counter: #clauses (negative hit) {Cache - component caching}
10
5588
16
2600
558.800000
Counter: #removed clauses / #clauses {Cache - component caching}
19
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
9
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
10
520
30
120
52.000000
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
10
10
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
