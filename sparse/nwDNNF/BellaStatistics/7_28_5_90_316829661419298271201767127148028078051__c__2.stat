Number: formula size {Formula representation}
1
17500245
Number: #variables {Formula representation}
1
2187710
Number: #clauses {Formula representation}
1
2187612
Timer (reduced): initialize [ns] {Formula representation}
1
1571581463
Timer: compute connected components [ns] {Formula representation}
57
5032552466
24620
1135609732
88290394.140351
Number: circuit size {Circuit}
1
14429675
Number: #nodes {Circuit}
1
7086354
Number: #edges {Circuit}
1
14429675
Number: #variables {Circuit}
1
2187710
Timer: copy subcircuit [ns] {Circuit}
24
4211114083
4201673
871070854
175463086.791667
Counter: formula size (copy subcircuit) {Circuit}
24
18941340
1685
3578335
789222.500000
Counter: #variables (copy subcircuit) {Circuit}
24
2753880
670
500200
114745.000000
Counter: #clauses (copy subcircuit) {Circuit}
24
2751144
566
500096
114631.000000
Timer (reduced): initialize [ns] {Compiler}
1
2139694717
Timer (reduced): compile [ns] {Compiler}
1
1403947178778
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
0
Number: #decisions {Compiler}
1
28
Counter: ratio of recomputed hypergraph cuts {Compiler}
52
40
0
1
0.769231
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
22
19
0
1
0.863636
Counter: #connected components {Compiler}
57
52
0
1
0.912281
Counter: #monotone residual formulae / #residual formulae {Compiler}
57
5
0
1
0.087719
Counter: monotone residual formula size {Compiler}
5
1100
220
220
220.000000
Counter: #pure clauses / #clauses {Compiler}
57
5.251678
0.000000
1.000000
0.092135
Counter: pure residual formula size / residual formula size {Compiler}
57
5.171920
0.000000
1.000000
0.090735
Timer: assign literal [ns] {Compiler}
91
1344458958554
2600
584927769053
14774274269.824176
Timer: unassign literal [ns] {Compiler}
91
611751967
660
101418866
6722549.087912
Timer: get decision variable [ns] {Decision heuristic}
28
256570861
220
87134785
9163245.035714
Counter: #preselected variables {Decision heuristic}
28
8209788
1
2187710
293206.714286
Counter: #restricted variables / #preselected variables {Decision heuristic}
19
0.009820
0.000016
0.002126
0.000517
Timer (reduced): initialize [ns] {SAT solver}
1
654188516
Timer (reduced): initial simplification [ns] {SAT solver}
1
1190
Timer (reduced): initially implied literals [ns] {SAT solver}
1
820
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
57
3668025784
430977
894459951
64351329.543860
Timer: unit propagation [ns] {SAT solver}
57
255329
220
28740
4479.456140
Counter: #implied literals {SAT solver}
57
112
0
5
1.964912
Counter: #implied literals / #variables {SAT solver}
57
0.050237
0.000000
0.009009
0.000881
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
5
49112522
2578873
28713085
9822504.400000
Counter: #implicit implied literals / #variables {SAT solver}
5
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
5
0.003224
0.000000
0.002994
0.000645
Timer: compute cut [ns] {Partitioning hypergraph}
2
5039007
2418934
2620073
2519503.500000
Counter: cut size {Partitioning hypergraph}
2
15
7
8
7.500000
Counter: cut size / #variables {Partitioning hypergraph}
2
0.004578
0.001844
0.002734
0.002289
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
3
5723702
50219
3496587
1907900.666667
Counter: #vertices {Partitioning hypergraph}
3
54
0
27
18.000000
Counter: #vertices / #clauses {Partitioning hypergraph}
3
0.017514
0.000000
0.011102
0.005838
Counter: #hyperedges {Partitioning hypergraph}
3
21
0
11
7.000000
Counter: #hyperedges / #variables {Partitioning hypergraph}
3
0.006441
0.000000
0.003906
0.002147
Counter: hypergraph size {Partitioning hypergraph}
3
145
0
85
48.333333
Counter: hypergraph size / formula size {Partitioning hypergraph}
3
0.010684
0.000000
0.006386
0.003561
Timer: create equivalence structure [ns] {Partitioning hypergraph}
3
2276366
29090
1128143
758788.666667
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
52
24
0
1
0.461538
Number: #current entries {Cache - component caching}
1
28
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
52
42362766590
243109
13979752436
814668588.269231
Timer: search cache record structure [ns] {Cache - component caching}
52
34912955
600
5236477
671402.980769
Timer: add cache record structure [ns] {Cache - component caching}
28
33657363
1530
19848651
1202048.678571
Counter: #empty cache records / #cache records {Cache - component caching}
52
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
52
82453934
668
17500245
1585652.576923
Counter: formula size (positive hit) {Cache - component caching}
24
18941340
1685
3578335
789222.500000
Counter: formula size (negative hit) {Cache - component caching}
28
63512594
668
17500245
2268306.928571
Counter: #variables (cache record structure) {Cache - component caching}
52
10977476
334
2187710
211105.307692
Counter: #variables (positive hit) {Cache - component caching}
24
2753880
670
500200
114745.000000
Counter: #variables (negative hit) {Cache - component caching}
28
8223596
334
2187710
293699.857143
Counter: #clauses (cache record structure) {Cache - component caching}
52
10971514
224
2187612
210990.653846
Counter: #clauses (positive hit) {Cache - component caching}
24
2751144
566
500096
114631.000000
Counter: #clauses (negative hit) {Cache - component caching}
28
8220370
224
2187612
293584.642857
Counter: #removed clauses / #clauses {Cache - component caching}
52
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
24
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
28
12600
50
1610
450.000000
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
28
28
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
