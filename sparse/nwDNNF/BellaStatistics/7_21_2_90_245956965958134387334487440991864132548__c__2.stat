Number: formula size {Formula representation}
1
21560
Number: #variables {Formula representation}
1
2758
Number: #clauses {Formula representation}
1
2716
Timer (reduced): initialize [ns] {Formula representation}
1
3164228
Timer: compute connected components [ns] {Formula representation}
15
3462278
7760
1153053
230818.533333
Number: circuit size {Circuit}
1
12082
Number: #nodes {Circuit}
1
9287
Number: #edges {Circuit}
1
12082
Number: #variables {Circuit}
1
2758
Timer: copy subcircuit [ns] {Circuit}
6
2010896
38410
867172
335149.333333
Counter: formula size (copy subcircuit) {Circuit}
6
18756
212
10032
3126.000000
Counter: #variables (copy subcircuit) {Circuit}
6
3332
106
1474
555.333333
Counter: #clauses (copy subcircuit) {Circuit}
6
3088
72
1432
514.666667
Timer (reduced): initialize [ns] {Compiler}
1
7564487
Timer (reduced): compile [ns] {Compiler}
1
33374648
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
0
Number: #decisions {Compiler}
1
7
Counter: ratio of recomputed hypergraph cuts {Compiler}
13
1
0
1
0.076923
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
1
0
0
0
0.000000
Counter: #connected components {Compiler}
15
13
0
1
0.866667
Counter: #monotone residual formulae / #residual formulae {Compiler}
15
2
0
1
0.133333
Counter: monotone residual formula size {Compiler}
2
136
68
68
68.000000
Counter: #pure clauses / #clauses {Compiler}
15
2.200000
0.000000
1.000000
0.146667
Counter: pure residual formula size / residual formula size {Compiler}
15
2.140351
0.000000
1.000000
0.142690
Timer: assign literal [ns] {Compiler}
28
4655881
860
1898695
166281.464286
Timer: unassign literal [ns] {Compiler}
28
347790
340
75190
12421.071429
Timer: get decision variable [ns] {Decision heuristic}
7
1360
60
630
194.285714
Counter: #preselected variables {Decision heuristic}
7
28
1
7
4.000000
Counter: #restricted variables / #preselected variables {Decision heuristic}
0
0.000000
0.000000
0.000000
0.000000
Timer (reduced): initialize [ns] {SAT solver}
1
931362
Timer (reduced): initial simplification [ns] {SAT solver}
1
550
Timer (reduced): initially implied literals [ns] {SAT solver}
1
250
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
15
751471
6290
163270
50098.066667
Timer: unit propagation [ns] {SAT solver}
15
9940
160
3960
662.666667
Counter: #implied literals {SAT solver}
15
28
0
2
1.866667
Counter: #implied literals / #variables {SAT solver}
15
0.115658
0.000000
0.028571
0.007711
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
1
1603274
1603274
1603274
1603274.000000
Counter: #implicit implied literals / #variables {SAT solver}
1
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
1
0.002538
0.002538
0.002538
0.002538
Timer: compute cut [ns] {Partitioning hypergraph}
1
963922
963922
963922
963922.000000
Counter: cut size {Partitioning hypergraph}
1
7
7
7
7.000000
Counter: cut size / #variables {Partitioning hypergraph}
1
0.002538
0.002538
0.002538
0.002538
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
1
5238653
5238653
5238653
5238653.000000
Counter: #vertices {Partitioning hypergraph}
1
7
7
7
7.000000
Counter: #vertices / #clauses {Partitioning hypergraph}
1
0.002577
0.002577
0.002577
0.002577
Counter: #hyperedges {Partitioning hypergraph}
1
7
7
7
7.000000
Counter: #hyperedges / #variables {Partitioning hypergraph}
1
0.002538
0.002538
0.002538
0.002538
Counter: hypergraph size {Partitioning hypergraph}
1
42
42
42
42.000000
Counter: hypergraph size / formula size {Partitioning hypergraph}
1
0.001948
0.001948
0.001948
0.001948
Timer: create equivalence structure [ns] {Partitioning hypergraph}
1
239950
239950
239950
239950.000000
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
13
6
0
1
0.461538
Number: #current entries {Cache - component caching}
1
7
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
13
12597308
74131
4294630
969023.692308
Timer: search cache record structure [ns] {Cache - component caching}
13
20180
150
7110
1552.307692
Timer: add cache record structure [ns] {Cache - component caching}
7
8690
330
3630
1241.428571
Counter: #empty cache records / #cache records {Cache - component caching}
13
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
13
59072
212
21560
4544.000000
Counter: formula size (positive hit) {Cache - component caching}
6
18756
212
10032
3126.000000
Counter: formula size (negative hit) {Cache - component caching}
7
40316
212
21560
5759.428571
Counter: #variables (cache record structure) {Cache - component caching}
13
9422
106
2758
724.769231
Counter: #variables (positive hit) {Cache - component caching}
6
3332
106
1474
555.333333
Counter: #variables (negative hit) {Cache - component caching}
7
6090
106
2758
870.000000
Counter: #clauses (cache record structure) {Cache - component caching}
13
8892
72
2716
684.000000
Counter: #clauses (positive hit) {Cache - component caching}
6
3088
72
1432
514.666667
Counter: #clauses (negative hit) {Cache - component caching}
7
5804
72
2716
829.142857
Counter: #removed clauses / #clauses {Cache - component caching}
13
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
6
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
7
550
40
140
78.571429
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
7
7
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
