Number: formula size {Formula representation}
1
9663775
Number: #variables {Formula representation}
1
1610730
Number: #clauses {Formula representation}
1
1610845
Timer (reduced): initialize [ns] {Formula representation}
1
929085232
Timer: compute connected components [ns] {Formula representation}
101
5206340659
12710
561169027
51547927.316832
Number: circuit size {Circuit}
1
16908876
Number: #nodes {Circuit}
1
5845124
Number: #edges {Circuit}
1
16908876
Number: #variables {Circuit}
1
1610730
Timer: copy subcircuit [ns] {Circuit}
40
3306897051
358489
310424512
82672426.275000
Counter: formula size (copy subcircuit) {Circuit}
40
18362740
2321
1625723
459068.500000
Counter: #variables (copy subcircuit) {Circuit}
40
3389320
814
293018
84733.000000
Counter: #clauses (copy subcircuit) {Circuit}
40
3389860
793
293088
84746.500000
Timer (reduced): initialize [ns] {Compiler}
1
949012967
Timer (reduced): compile [ns] {Compiler}
1
559639965692
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
0
Number: #decisions {Compiler}
1
50
Counter: ratio of recomputed hypergraph cuts {Compiler}
90
66
0
1
0.733333
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
36
30
0
1
0.833333
Counter: #connected components {Compiler}
101
90
0
1
0.891089
Counter: #monotone residual formulae / #residual formulae {Compiler}
101
11
0
1
0.108911
Counter: monotone residual formula size {Compiler}
11
1452
132
132
132.000000
Counter: #pure clauses / #clauses {Compiler}
101
11.578256
0.000000
1.000000
0.114636
Counter: pure residual formula size / residual formula size {Compiler}
101
11.401826
0.000000
1.000000
0.112889
Timer: assign literal [ns] {Compiler}
155
496133875101
1190
136675928293
3200863710.329032
Timer: unassign literal [ns] {Compiler}
155
630758397
340
71478635
4069409.012903
Timer: get decision variable [ns] {Decision heuristic}
50
303813437
60
49095115
6076268.740000
Counter: #preselected variables {Decision heuristic}
50
12212904
1
1610730
244258.080000
Counter: #restricted variables / #preselected variables {Decision heuristic}
30
0.017207
0.000034
0.002821
0.000574
Timer (reduced): initialize [ns] {SAT solver}
1
302481414
Timer (reduced): initial simplification [ns] {SAT solver}
1
1040
Timer (reduced): initially implied literals [ns] {SAT solver}
1
690
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
101
3301623672
25470
285888359
32689343.287129
Timer: unit propagation [ns] {SAT solver}
101
214950
250
23460
2128.217822
Counter: #implied literals {SAT solver}
101
335
0
11
3.316832
Counter: #implied literals / #variables {SAT solver}
101
0.164866
0.000000
0.014925
0.001632
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
16
55343049
150980
5539135
3458940.562500
Counter: #implicit implied literals / #variables {SAT solver}
16
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
16
0.004950
0.000000
0.004950
0.000309
Timer: compute cut [ns] {Partitioning hypergraph}
1
5371176
5371176
5371176
5371176.000000
Counter: cut size {Partitioning hypergraph}
1
16
16
16
16.000000
Counter: cut size / #variables {Partitioning hypergraph}
1
0.003204
0.003204
0.003204
0.003204
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
6
2941722
25930
2690872
490287.000000
Counter: #vertices {Partitioning hypergraph}
6
123
0
123
20.500000
Counter: #vertices / #clauses {Partitioning hypergraph}
6
0.024729
0.000000
0.024729
0.004121
Counter: #hyperedges {Partitioning hypergraph}
6
22
0
22
3.666667
Counter: #hyperedges / #variables {Partitioning hypergraph}
6
0.004405
0.000000
0.004405
0.000734
Counter: hypergraph size {Partitioning hypergraph}
6
264
0
264
44.000000
Counter: hypergraph size / formula size {Partitioning hypergraph}
6
0.014043
0.000000
0.014043
0.002341
Timer: create equivalence structure [ns] {Partitioning hypergraph}
6
530889
12420
427389
88481.500000
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
90
40
0
1
0.444444
Number: #current entries {Cache - component caching}
1
50
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
90
47268230338
145779
6323815943
525202559.311111
Timer: search cache record structure [ns] {Cache - component caching}
90
43497452
140
3273220
483305.022222
Timer: add cache record structure [ns] {Cache - component caching}
50
30854835
280
4619857
617096.700000
Counter: #empty cache records / #cache records {Cache - component caching}
90
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
90
90601155
404
9663775
1006679.500000
Counter: formula size (positive hit) {Cache - component caching}
40
18362740
2321
1625723
459068.500000
Counter: formula size (negative hit) {Cache - component caching}
50
72238415
404
9663775
1444768.300000
Counter: #variables (cache record structure) {Cache - component caching}
90
15638690
202
1610730
173763.222222
Counter: #variables (positive hit) {Cache - component caching}
40
3389320
814
293018
84733.000000
Counter: #variables (negative hit) {Cache - component caching}
50
12249370
202
1610730
244987.400000
Counter: #clauses (cache record structure) {Cache - component caching}
90
15639495
136
1610845
173772.166667
Counter: #clauses (positive hit) {Cache - component caching}
40
3389860
793
293088
84746.500000
Counter: #clauses (negative hit) {Cache - component caching}
50
12249635
136
1610845
244992.700000
Counter: #removed clauses / #clauses {Cache - component caching}
90
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
40
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
50
17470
50
1140
349.400000
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
50
50
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
