Number: formula size {Formula representation}
1
51280
Number: #variables {Formula representation}
1
5180
Number: #clauses {Formula representation}
1
5160
Timer (reduced): initialize [ns] {Formula representation}
1
9041171
Timer: compute connected components [ns] {Formula representation}
21
6359168
2200
2140716
302817.523810
Number: circuit size {Circuit}
1
39666
Number: #nodes {Circuit}
1
24435
Number: #edges {Circuit}
1
39666
Number: #variables {Circuit}
1
5180
Timer: copy subcircuit [ns] {Circuit}
9
5644673
12400
2707572
627185.888889
Counter: formula size (copy subcircuit) {Circuit}
9
43484
68
23112
4831.555556
Counter: #variables (copy subcircuit) {Circuit}
9
5758
34
2616
639.777778
Counter: #clauses (copy subcircuit) {Circuit}
9
5592
24
2596
621.333333
Timer (reduced): initialize [ns] {Compiler}
1
5009547
Timer (reduced): compile [ns] {Compiler}
1
67899832
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
0
Number: #decisions {Compiler}
1
10
Counter: ratio of recomputed hypergraph cuts {Compiler}
19
5
0
1
0.263158
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
3
1
0
1
0.333333
Counter: #connected components {Compiler}
21
19
0
1
0.904762
Counter: #monotone residual formulae / #residual formulae {Compiler}
21
2
0
1
0.095238
Counter: monotone residual formula size {Compiler}
2
40
20
20
20.000000
Counter: #pure clauses / #clauses {Compiler}
21
2.553846
0.000000
1.000000
0.121612
Counter: pure residual formula size / residual formula size {Compiler}
21
2.400000
0.000000
1.000000
0.114286
Timer: assign literal [ns] {Compiler}
40
19698451
570
8771503
492461.275000
Timer: unassign literal [ns] {Compiler}
40
619767
210
146859
15494.175000
Timer: get decision variable [ns] {Decision heuristic}
10
34120
50
32750
3412.000000
Counter: #preselected variables {Decision heuristic}
10
5217
1
5180
521.700000
Counter: #restricted variables / #preselected variables {Decision heuristic}
1
0.003861
0.003861
0.003861
0.003861
Timer (reduced): initialize [ns] {SAT solver}
1
1598449
Timer (reduced): initial simplification [ns] {SAT solver}
1
640
Timer (reduced): initially implied literals [ns] {SAT solver}
1
250
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
21
1284742
2030
298878
61178.190476
Timer: unit propagation [ns] {SAT solver}
21
9660
140
3000
460.000000
Counter: #implied literals {SAT solver}
21
40
0
2
1.904762
Counter: #implied literals / #variables {SAT solver}
21
0.349249
0.000000
0.090909
0.016631
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
4
2954821
14990
1465870
738705.250000
Counter: #implicit implied literals / #variables {SAT solver}
4
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
4
0.065704
0.003440
0.029412
0.016426
Timer: compute cut [ns] {Partitioning hypergraph}
1
1125403
1125403
1125403
1125403.000000
Counter: cut size {Partitioning hypergraph}
1
8
8
8
8.000000
Counter: cut size / #variables {Partitioning hypergraph}
1
0.003058
0.003058
0.003058
0.003058
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
2
5019417
7820
5011597
2509708.500000
Counter: #vertices {Partitioning hypergraph}
2
8
0
8
4.000000
Counter: #vertices / #clauses {Partitioning hypergraph}
2
0.003082
0.000000
0.003082
0.001541
Counter: #hyperedges {Partitioning hypergraph}
2
9
0
9
4.500000
Counter: #hyperedges / #variables {Partitioning hypergraph}
2
0.003440
0.000000
0.003440
0.001720
Counter: hypergraph size {Partitioning hypergraph}
2
56
0
56
28.000000
Counter: hypergraph size / formula size {Partitioning hypergraph}
2
0.002423
0.000000
0.002423
0.001211
Timer: create equivalence structure [ns] {Partitioning hypergraph}
2
206219
2850
203369
103109.500000
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
19
9
0
1
0.473684
Number: #current entries {Cache - component caching}
1
10
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
19
22576218
21730
7917228
1188222.000000
Timer: search cache record structure [ns] {Cache - component caching}
19
39010
110
16090
2053.157895
Timer: add cache record structure [ns] {Cache - component caching}
10
16580
150
7220
1658.000000
Counter: #empty cache records / #cache records {Cache - component caching}
19
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
19
138248
68
51280
7276.210526
Counter: formula size (positive hit) {Cache - component caching}
9
43484
68
23112
4831.555556
Counter: formula size (negative hit) {Cache - component caching}
10
94764
68
51280
9476.400000
Counter: #variables (cache record structure) {Cache - component caching}
19
16696
34
5180
878.736842
Counter: #variables (positive hit) {Cache - component caching}
9
5758
34
2616
639.777778
Counter: #variables (negative hit) {Cache - component caching}
10
10938
34
5180
1093.800000
Counter: #clauses (cache record structure) {Cache - component caching}
19
16344
24
5160
860.210526
Counter: #clauses (positive hit) {Cache - component caching}
9
5592
24
2596
621.333333
Counter: #clauses (negative hit) {Cache - component caching}
10
10752
24
5160
1075.200000
Counter: #removed clauses / #clauses {Cache - component caching}
19
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
9
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
10
580
20
140
58.000000
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
10
10
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
