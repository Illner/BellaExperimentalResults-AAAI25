Number: formula size {Formula representation}
1
1000600
Number: #variables {Formula representation}
1
200300
Number: #clauses {Formula representation}
1
200280
Timer (reduced): initialize [ns] {Formula representation}
1
529993835
Timer: compute connected components [ns] {Formula representation}
199999
33599953685
14100
71346555
168000.608428
Number: circuit size {Circuit}
1
11178360
Number: #nodes {Circuit}
1
1130040
Number: #edges {Circuit}
1
11178360
Number: #variables {Circuit}
1
200300
Timer: copy subcircuit [ns] {Circuit}
0
0
0
0
0.000000
Counter: formula size (copy subcircuit) {Circuit}
0
0
0
0
0.000000
Counter: #variables (copy subcircuit) {Circuit}
0
0
0
0
0.000000
Counter: #clauses (copy subcircuit) {Circuit}
0
0
0
0
0.000000
Timer (reduced): initialize [ns] {Compiler}
1
404830328
Timer (reduced): compile [ns] {Compiler}
1
144471173389
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
0
Number: #decisions {Compiler}
1
99999
Counter: ratio of recomputed hypergraph cuts {Compiler}
99999
82745
0
1
0.827458
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
82745
999
0
1
0.012073
Counter: #connected components {Compiler}
199999
99999
0
1
0.499997
Counter: #monotone residual formulae / #residual formulae {Compiler}
199999
100000
0
1
0.500003
Counter: monotone residual formula size {Compiler}
100000
17698800
160
260
176.988000
Counter: #pure clauses / #clauses {Compiler}
199999
101333.741598
0.000000
1.000000
0.506671
Counter: pure residual formula size / residual formula size {Compiler}
199999
100934.231123
0.000000
1.000000
0.504674
Timer: assign literal [ns] {Compiler}
313960
14723064370
1220
845987115
46894.713881
Timer: unassign literal [ns] {Compiler}
313960
4873956492
240
14572174
15524.132030
Timer: get decision variable [ns] {Decision heuristic}
99999
175087615
50
3637701
1750.893659
Counter: #preselected variables {Decision heuristic}
99999
13080718
1
200300
130.808488
Counter: #restricted variables / #preselected variables {Decision heuristic}
999
2.838300
0.000250
0.003940
0.002841
Timer (reduced): initialize [ns] {SAT solver}
1
49370758
Timer (reduced): initial simplification [ns] {SAT solver}
1
1160
Timer (reduced): initially implied literals [ns] {SAT solver}
1
410
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
199999
13404220480
8210
37212822
67021.437507
Timer: unit propagation [ns] {SAT solver}
199999
96204067
170
534461
481.022740
Counter: #implied literals {SAT solver}
199999
595495
0
10
2.977490
Counter: #implied literals / #variables {SAT solver}
199999
1002.652215
0.000000
0.012346
0.005013
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
81746
24977110751
97110
5319976
305545.356972
Counter: #implicit implied literals / #variables {SAT solver}
81746
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
81746
45.608502
0.000000
0.004098
0.000558
Timer: compute cut [ns] {Partitioning hypergraph}
1010
156981572
44380
579222
155427.299010
Counter: cut size {Partitioning hypergraph}
1010
15981
2
18
15.822772
Counter: cut size / #variables {Partitioning hypergraph}
1010
3.412479
0.002597
0.003896
0.003379
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
81746
10013191806
28480
3534260
122491.520148
Counter: #vertices {Partitioning hypergraph}
81746
102041
0
102
1.248269
Counter: #vertices / #clauses {Partitioning hypergraph}
81746
22.184380
0.000000
0.022116
0.000271
Counter: #hyperedges {Partitioning hypergraph}
81746
20041
0
20
0.245162
Counter: #hyperedges / #variables {Partitioning hypergraph}
81746
4.289767
0.000000
0.005556
0.000052
Counter: hypergraph size {Partitioning hypergraph}
81746
220093
0
220
2.692401
Counter: hypergraph size / formula size {Partitioning hypergraph}
81746
13.189065
0.000000
0.013142
0.000161
Timer: create equivalence structure [ns] {Partitioning hypergraph}
81746
3464514181
14040
758202
42381.452071
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
99999
0
0
0
0.000000
Number: #current entries {Cache - component caching}
1
99999
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
99999
24610588072
38310
13429520
246108.341803
Timer: search cache record structure [ns] {Cache - component caching}
99999
128892076
140
191661
1288.933649
Timer: add cache record structure [ns] {Cache - component caching}
99999
174878581
320
1369485
1748.803298
Counter: #empty cache records / #cache records {Cache - component caching}
99999
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
99999
286808661
488
1000600
2868.115291
Counter: formula size (positive hit) {Cache - component caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - component caching}
99999
286808661
488
1000600
2868.115291
Counter: #variables (cache record structure) {Cache - component caching}
99999
93887712
244
200300
938.886509
Counter: #variables (positive hit) {Cache - component caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - component caching}
99999
93887712
244
200300
938.886509
Counter: #clauses (cache record structure) {Cache - component caching}
99999
85530427
164
200280
855.312823
Counter: #clauses (positive hit) {Cache - component caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - component caching}
99999
85530427
164
200280
855.312823
Counter: #removed clauses / #clauses {Cache - component caching}
99999
3701.224969
0.011364
1.000000
0.037013
Counter: #identical mappings / #mappings {Cache - component caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
99999
6809047
30
7780
68.091151
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
99999
99999
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
