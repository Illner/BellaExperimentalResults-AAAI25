Number: formula size {Formula representation}
1
62675
Number: #variables {Formula representation}
1
12650
Number: #clauses {Formula representation}
1
12580
Timer (reduced): initialize [ns] {Formula representation}
1
9080627
Timer: compute connected components [ns] {Formula representation}
41
34761775
9280
3891412
847848.170732
Number: circuit size {Circuit}
1
229800
Number: #nodes {Circuit}
1
58859
Number: #edges {Circuit}
1
229800
Number: #variables {Circuit}
1
12650
Timer: copy subcircuit [ns] {Circuit}
16
22450020
83189
5303975
1403126.250000
Counter: formula size (copy subcircuit) {Circuit}
16
146800
710
25890
9175.000000
Counter: #variables (copy subcircuit) {Circuit}
16
35000
280
5640
2187.500000
Counter: #clauses (copy subcircuit) {Circuit}
16
33940
241
5564
2121.250000
Timer (reduced): initialize [ns] {Compiler}
1
13375746
Timer (reduced): compile [ns] {Compiler}
1
276697887
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
0
Number: #decisions {Compiler}
1
20
Counter: ratio of recomputed hypergraph cuts {Compiler}
36
19
0
1
0.527778
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
11
5
0
1
0.454545
Counter: #connected components {Compiler}
41
36
0
1
0.878049
Counter: #monotone residual formulae / #residual formulae {Compiler}
41
5
0
1
0.121951
Counter: monotone residual formula size {Compiler}
5
450
90
90
90.000000
Counter: #pure clauses / #clauses {Compiler}
41
5.751429
0.000000
1.000000
0.140279
Counter: pure residual formula size / residual formula size {Compiler}
41
5.515163
0.000000
1.000000
0.134516
Timer: assign literal [ns] {Compiler}
65
22372494
980
5995361
344192.215385
Timer: unassign literal [ns] {Compiler}
65
2244980
270
362118
34538.153846
Timer: get decision variable [ns] {Decision heuristic}
20
311397
60
82189
15569.850000
Counter: #preselected variables {Decision heuristic}
20
45828
1
12650
2291.400000
Counter: #restricted variables / #preselected variables {Decision heuristic}
5
0.013215
0.001976
0.003546
0.002643
Timer (reduced): initialize [ns] {SAT solver}
1
3356495
Timer (reduced): initial simplification [ns] {SAT solver}
1
540
Timer (reduced): initially implied literals [ns] {SAT solver}
1
310
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
41
6506547
7660
594927
158696.268293
Timer: unit propagation [ns] {SAT solver}
41
20970
180
3770
511.463415
Counter: #implied literals {SAT solver}
41
80
0
5
1.951220
Counter: #implied literals / #variables {SAT solver}
41
0.129848
0.000000
0.021739
0.003167
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
10
4479679
63539
2510098
447967.900000
Counter: #implicit implied literals / #variables {SAT solver}
10
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
10
0.007194
0.000000
0.007194
0.000719
Timer: compute cut [ns] {Partitioning hypergraph}
2
15581465
4294339
11287126
7790732.500000
Counter: cut size {Partitioning hypergraph}
2
24
10
14
12.000000
Counter: cut size / #variables {Partitioning hypergraph}
2
0.008152
0.002971
0.005181
0.004076
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
6
12885699
23560
11097527
2147616.500000
Counter: #vertices {Partitioning hypergraph}
6
382
0
304
63.666667
Counter: #vertices / #clauses {Partitioning hypergraph}
6
0.107810
0.000000
0.065602
0.017968
Counter: #hyperedges {Partitioning hypergraph}
6
34
0
19
5.666667
Counter: #hyperedges / #variables {Partitioning hypergraph}
6
0.011803
0.000000
0.007772
0.001967
Counter: hypergraph size {Partitioning hypergraph}
6
1084
0
919
180.666667
Counter: hypergraph size / formula size {Partitioning hypergraph}
6
0.066027
0.000000
0.042886
0.011005
Timer: create equivalence structure [ns] {Partitioning hypergraph}
6
678997
9580
447638
113166.166667
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
36
16
0
1
0.444444
Number: #current entries {Cache - component caching}
1
20
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
36
139871841
103770
21287118
3885328.916667
Timer: search cache record structure [ns] {Cache - component caching}
36
163489
140
23810
4541.361111
Timer: add cache record structure [ns] {Cache - component caching}
20
51560
320
10120
2578.000000
Counter: #empty cache records / #cache records {Cache - component caching}
36
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
36
455210
278
62675
12644.722222
Counter: formula size (positive hit) {Cache - component caching}
16
146800
710
25890
9175.000000
Counter: formula size (negative hit) {Cache - component caching}
20
308410
278
62675
15420.500000
Counter: #variables (cache record structure) {Cache - component caching}
36
101940
139
12650
2831.666667
Counter: #variables (positive hit) {Cache - component caching}
16
35000
280
5640
2187.500000
Counter: #variables (negative hit) {Cache - component caching}
20
66940
139
12650
3347.000000
Counter: #clauses (cache record structure) {Cache - component caching}
36
99470
94
12580
2763.055556
Counter: #clauses (positive hit) {Cache - component caching}
16
33940
241
5564
2121.250000
Counter: #clauses (negative hit) {Cache - component caching}
20
65530
94
12580
3276.500000
Counter: #removed clauses / #clauses {Cache - component caching}
36
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
16
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
20
1650
40
130
82.500000
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
20
20
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
