Number: formula size {Formula representation}
1
17294844
Number: #variables {Formula representation}
1
2470874
Number: #clauses {Formula representation}
1
2470832
Timer (reduced): initialize [ns] {Formula representation}
1
1818621008
Timer: compute connected components [ns] {Formula representation}
85
9483457837
19110
1323115039
111570092.200000
Number: circuit size {Circuit}
1
91802622
Number: #nodes {Circuit}
1
12762602
Number: #edges {Circuit}
1
91802622
Number: #variables {Circuit}
1
2470874
Timer: copy subcircuit [ns] {Circuit}
36
13307051858
243250
1968294267
369640329.388889
Counter: formula size (copy subcircuit) {Circuit}
36
32957988
1827
4286163
915499.666667
Counter: #variables (copy subcircuit) {Circuit}
36
5239248
686
655704
145534.666667
Counter: #clauses (copy subcircuit) {Circuit}
36
5236266
617
655647
145451.833333
Timer (reduced): initialize [ns] {Compiler}
1
2018251805
Timer (reduced): compile [ns] {Compiler}
1
1631851937276
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
0
Number: #decisions {Compiler}
1
42
Counter: ratio of recomputed hypergraph cuts {Compiler}
78
62
0
1
0.794872
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
34
29
0
1
0.852941
Counter: #connected components {Compiler}
85
78
0
1
0.917647
Counter: #monotone residual formulae / #residual formulae {Compiler}
85
7
0
1
0.082353
Counter: monotone residual formula size {Compiler}
7
1176
168
168
168.000000
Counter: #pure clauses / #clauses {Compiler}
85
7.604529
0.000000
1.000000
0.089465
Counter: pure residual formula size / residual formula size {Compiler}
85
7.416613
0.000000
1.000000
0.087254
Timer: assign literal [ns] {Compiler}
133
1499788760880
1950
539956097582
11276607224.661654
Timer: unassign literal [ns] {Compiler}
133
811879030
410
128202273
6104353.609023
Timer: get decision variable [ns] {Decision heuristic}
42
502883936
60
96915566
11973427.047619
Counter: #preselected variables {Decision heuristic}
42
13871514
1
2470874
330274.142857
Counter: #restricted variables / #preselected variables {Decision heuristic}
29
0.021857
0.000020
0.003397
0.000754
Timer (reduced): initialize [ns] {SAT solver}
1
557292290
Timer (reduced): initial simplification [ns] {SAT solver}
1
1400
Timer (reduced): initially implied literals [ns] {SAT solver}
1
860
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
85
6170346919
31690
691317737
72592316.694118
Timer: unit propagation [ns] {SAT solver}
85
326322
310
30080
3839.082353
Counter: #implied literals {SAT solver}
85
203
0
7
2.388235
Counter: #implied literals / #variables {SAT solver}
85
0.091861
0.000000
0.011765
0.001081
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
9
34845055
538561
8928702
3871672.777778
Counter: #implicit implied literals / #variables {SAT solver}
9
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
9
0.004179
0.000000
0.003906
0.000464
Timer: compute cut [ns] {Partitioning hypergraph}
2
8416130
3938319
4477811
4208065.000000
Counter: cut size {Partitioning hypergraph}
2
20
10
10
10.000000
Counter: cut size / #variables {Partitioning hypergraph}
2
0.007026
0.002723
0.004303
0.003513
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
5
5938535
42561
4542840
1187707.000000
Counter: #vertices {Partitioning hypergraph}
5
102
0
51
20.400000
Counter: #vertices / #clauses {Partitioning hypergraph}
5
0.037381
0.000000
0.023035
0.007476
Counter: #hyperedges {Partitioning hypergraph}
5
29
0
15
5.800000
Counter: #hyperedges / #variables {Partitioning hypergraph}
5
0.010109
0.000000
0.006024
0.002022
Counter: hypergraph size {Partitioning hypergraph}
5
273
0
161
54.600000
Counter: hypergraph size / formula size {Partitioning hypergraph}
5
0.024571
0.000000
0.014060
0.004914
Timer: create equivalence structure [ns] {Partitioning hypergraph}
5
827762
21530
377151
165552.400000
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
78
36
0
1
0.461538
Number: #current entries {Cache - component caching}
1
42
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
78
94873358017
206610
14528140432
1216325102.782051
Timer: search cache record structure [ns] {Cache - component caching}
78
61175332
150
5220492
784299.128205
Timer: add cache record structure [ns] {Cache - component caching}
42
31535125
650
6050455
750836.309524
Counter: #empty cache records / #cache records {Cache - component caching}
78
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
78
127477840
512
17294844
1634331.282051
Counter: formula size (positive hit) {Cache - component caching}
36
32957988
1827
4286163
915499.666667
Counter: formula size (negative hit) {Cache - component caching}
42
94519852
512
17294844
2250472.666667
Counter: #variables (cache record structure) {Cache - component caching}
78
19127325
256
2470874
245222.115385
Counter: #variables (positive hit) {Cache - component caching}
36
5239248
686
655704
145534.666667
Counter: #variables (negative hit) {Cache - component caching}
42
13888077
256
2470874
330668.500000
Counter: #clauses (cache record structure) {Cache - component caching}
78
19120724
172
2470832
245137.487179
Counter: #clauses (positive hit) {Cache - component caching}
36
5236266
617
655647
145451.833333
Counter: #clauses (negative hit) {Cache - component caching}
42
13884458
172
2470832
330582.333333
Counter: #removed clauses / #clauses {Cache - component caching}
78
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
36
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
42
17910
30
1200
426.428571
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
42
42
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
