Number: formula size {Formula representation}
1
16515240
Number: #variables {Formula representation}
1
1835176
Number: #clauses {Formula representation}
1
1835085
Timer (reduced): initialize [ns] {Formula representation}
1
1479737056
Timer: compute connected components [ns] {Formula representation}
32767
11310277988
22199
865463653
345172.825953
Number: circuit size {Circuit}
1
5648073
Number: #nodes {Circuit}
1
5593251
Number: #edges {Circuit}
1
5648073
Number: #variables {Circuit}
1
1835176
Timer: copy subcircuit [ns] {Circuit}
0
0
0
0
0.000000
Counter: formula size (copy subcircuit) {Circuit}
0
0
0
0
0.000000
Counter: #variables (copy subcircuit) {Circuit}
0
0
0
0
0.000000
Counter: #clauses (copy subcircuit) {Circuit}
0
0
0
0
0.000000
Timer (reduced): initialize [ns] {Compiler}
1
1280710090
Timer (reduced): compile [ns] {Compiler}
1
2148165291246
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
0
Number: #decisions {Compiler}
1
16383
Counter: ratio of recomputed hypergraph cuts {Compiler}
16383
11803
0
1
0.720442
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
11803
767
0
1
0.064983
Counter: #connected components {Compiler}
32767
16383
0
1
0.499985
Counter: #monotone residual formulae / #residual formulae {Compiler}
32767
16384
0
1
0.500015
Counter: monotone residual formula size {Compiler}
16384
3670016
224
224
224.000000
Counter: #pure clauses / #clauses {Compiler}
32767
16384.000000
0.000000
1.000000
0.500015
Counter: pure residual formula size / residual formula size {Compiler}
32767
16384.000000
0.000000
1.000000
0.500015
Timer: assign literal [ns] {Compiler}
55058
2086540684145
1680
667942805313
37897139.092321
Timer: unassign literal [ns] {Compiler}
55058
2352688608
700
81739130
42731.094627
Timer: get decision variable [ns] {Decision heuristic}
16383
344507558
50
53659839
21028.356101
Counter: #preselected variables {Decision heuristic}
16383
19877922
1
1835176
1213.326131
Counter: #restricted variables / #preselected variables {Decision heuristic}
767
1.085691
0.000015
0.001996
0.001416
Timer (reduced): initialize [ns] {SAT solver}
1
456755962
Timer (reduced): initial simplification [ns] {SAT solver}
1
1060
Timer (reduced): initially implied literals [ns] {SAT solver}
1
650
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
32767
13186772818
14790
351391015
402440.651204
Timer: unit propagation [ns] {SAT solver}
32767
11872360
150
32989
362.326731
Counter: #implied literals {SAT solver}
32767
60295
0
4
1.840114
Counter: #implied literals / #variables {SAT solver}
32767
130.075578
0.000000
0.008850
0.003970
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
11036
12830652935
145769
6737655
1162618.062251
Counter: #implicit implied literals / #variables {SAT solver}
11036
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
11036
12.763009
0.000000
0.002941
0.001156
Timer: compute cut [ns] {Partitioning hypergraph}
1024
68022310
49949
176999
66428.037109
Counter: cut size {Partitioning hypergraph}
1024
6400
6
7
6.250000
Counter: cut size / #variables {Partitioning hypergraph}
1024
2.882239
0.001884
0.003125
0.002815
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
11036
1916929099
41290
2880670
173697.816147
Counter: #vertices {Partitioning hypergraph}
11036
18432
0
18
1.670170
Counter: #vertices / #clauses {Partitioning hypergraph}
11036
8.897182
0.000000
0.009923
0.000806
Counter: #hyperedges {Partitioning hypergraph}
11036
8448
0
9
0.765495
Counter: #hyperedges / #variables {Partitioning hypergraph}
11036
3.820022
0.000000
0.004167
0.000346
Counter: hypergraph size {Partitioning hypergraph}
11036
45056
0
56
4.082639
Counter: hypergraph size / formula size {Partitioning hypergraph}
11036
5.054714
0.000000
0.005543
0.000458
Timer: create equivalence structure [ns] {Partitioning hypergraph}
11036
490295558
18710
346489
44426.926241
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
16383
0
0
0
0.000000
Number: #current entries {Cache - component caching}
1
16383
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
16383
12972773449
61030
344304707
791843.584752
Timer: search cache record structure [ns] {Cache - component caching}
16383
41399195
320
1067126
2526.960569
Timer: add cache record structure [ns] {Cache - component caching}
16383
57813317
330
1330675
3528.860221
Counter: #empty cache records / #cache records {Cache - component caching}
16383
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
16383
174041547
680
16515240
10623.301410
Counter: formula size (positive hit) {Cache - component caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - component caching}
16383
174041547
680
16515240
10623.301410
Counter: #variables (cache record structure) {Cache - component caching}
16383
30877754
340
1835176
1884.743576
Counter: #variables (positive hit) {Cache - component caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - component caching}
16383
30877754
340
1835176
1884.743576
Counter: #clauses (cache record structure) {Cache - component caching}
16383
29079496
228
1835085
1774.979918
Counter: #clauses (positive hit) {Cache - component caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - component caching}
16383
29079496
228
1835085
1774.979918
Counter: #removed clauses / #clauses {Cache - component caching}
16383
265.542279
0.000144
1.000000
0.016208
Counter: #identical mappings / #mappings {Cache - component caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
16383
1232806
30
1270
75.249100
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
16383
16383
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
