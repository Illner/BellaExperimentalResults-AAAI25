Number: formula size {Formula representation}
1
262368
Number: #variables {Formula representation}
1
32840
Number: #clauses {Formula representation}
1
32870
Timer (reduced): initialize [ns] {Formula representation}
1
26196909
Timer: compute connected components [ns] {Formula representation}
45
13890356
560
3361157
308674.577778
Number: circuit size {Circuit}
1
352585
Number: #nodes {Circuit}
1
212023
Number: #edges {Circuit}
1
352585
Number: #variables {Circuit}
1
32840
Timer: copy subcircuit [ns] {Circuit}
25
63653844
5290
19116260
2546153.760000
Counter: formula size (copy subcircuit) {Circuit}
25
220799
32
57544
8831.960000
Counter: #variables (copy subcircuit) {Circuit}
25
33489
12
8256
1339.560000
Counter: #clauses (copy subcircuit) {Circuit}
25
33798
15
8283
1351.920000
Timer (reduced): initialize [ns] {Compiler}
1
20174770
Timer (reduced): compile [ns] {Compiler}
1
765123748
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
4
Number: #splits {Compiler}
1
8
Number: #decisions {Compiler}
1
24
Counter: ratio of recomputed hypergraph cuts {Compiler}
49
19
0
1
0.387755
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
8
5
0
1
0.625000
Counter: #connected components {Compiler}
45
49
1
2
1.088889
Counter: #monotone residual formulae / #residual formulae {Compiler}
45
0
0
0
0.000000
Counter: monotone residual formula size {Compiler}
0
0
0
0
0.000000
Counter: #pure clauses / #clauses {Compiler}
45
0.000000
0.000000
0.000000
0.000000
Counter: pure residual formula size / residual formula size {Compiler}
45
0.000000
0.000000
0.000000
0.000000
Timer: assign literal [ns] {Compiler}
80
190663110
190
81703187
2383288.875000
Timer: unassign literal [ns] {Compiler}
80
8729153
180
1644704
109114.412500
Timer: get decision variable [ns] {Decision heuristic}
24
2611454
50
888041
108810.583333
Counter: #preselected variables {Decision heuristic}
24
88506
1
32840
3687.750000
Counter: #restricted variables / #preselected variables {Decision heuristic}
0
0.000000
0.000000
0.000000
0.000000
Timer (reduced): initialize [ns] {SAT solver}
1
7800992
Timer (reduced): initial simplification [ns] {SAT solver}
1
780
Timer (reduced): initially implied literals [ns] {SAT solver}
1
470
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
49
21358077
730
5201518
435879.122449
Timer: unit propagation [ns] {SAT solver}
49
29900
100
6500
610.204082
Counter: #implied literals {SAT solver}
49
87
0
5
1.775510
Counter: #implied literals / #variables {SAT solver}
49
3.589921
0.000000
1.000000
0.073264
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
11
6004781
42989
2799482
545889.181818
Counter: #implicit implied literals / #variables {SAT solver}
11
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
11
0.000241
0.000000
0.000241
0.000022
Timer: compute cut [ns] {Partitioning hypergraph}
3
236426747
4001310
127571460
78808915.666667
Counter: cut size {Partitioning hypergraph}
3
27
8
10
9.000000
Counter: cut size / #variables {Partitioning hypergraph}
3
0.125015
0.002166
0.119048
0.041672
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
3
24800354
102859
18604646
8266784.666667
Counter: #vertices {Partitioning hypergraph}
3
6285
75
4130
2095.000000
Counter: #vertices / #clauses {Partitioning hypergraph}
3
2.771933
0.806452
0.988038
0.923978
Counter: #hyperedges {Partitioning hypergraph}
3
77
12
33
25.666667
Counter: #hyperedges / #variables {Partitioning hypergraph}
3
0.166007
0.007940
0.142857
0.055336
Counter: hypergraph size {Partitioning hypergraph}
3
35142
212
24634
11714.000000
Counter: hypergraph size / formula size {Partitioning hypergraph}
3
2.342246
0.662500
0.853687
0.780749
Timer: create equivalence structure [ns] {Partitioning hypergraph}
3
1413124
14479
1058249
471041.333333
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
49
25
0
1
0.510204
Number: #current entries {Cache - component caching}
1
24
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
49
190810062
2800
50103111
3894082.897959
Timer: search cache record structure [ns] {Cache - component caching}
49
220297
30
46229
4495.857143
Timer: add cache record structure [ns] {Cache - component caching}
24
158568
80
74349
6607.000000
Counter: #empty cache records / #cache records {Cache - component caching}
49
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
49
976512
12
262368
19928.816327
Counter: formula size (positive hit) {Cache - component caching}
25
220799
32
57544
8831.960000
Counter: formula size (negative hit) {Cache - component caching}
24
755713
12
262368
31488.041667
Counter: #variables (cache record structure) {Cache - component caching}
49
132489
6
32840
2703.857143
Counter: #variables (positive hit) {Cache - component caching}
25
33489
12
8256
1339.560000
Counter: #variables (negative hit) {Cache - component caching}
24
99000
6
32840
4125.000000
Counter: #clauses (cache record structure) {Cache - component caching}
49
133133
6
32870
2717.000000
Counter: #clauses (positive hit) {Cache - component caching}
25
33798
15
8283
1351.920000
Counter: #clauses (negative hit) {Cache - component caching}
24
99335
6
32870
4138.958333
Counter: #removed clauses / #clauses {Cache - component caching}
49
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
25
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
24
4200
20
680
175.000000
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
24
24
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
