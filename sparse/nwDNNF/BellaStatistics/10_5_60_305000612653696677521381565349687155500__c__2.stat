Number: formula size {Formula representation}
1
6250350
Number: #variables {Formula representation}
1
781400
Number: #clauses {Formula representation}
1
781410
Timer (reduced): initialize [ns] {Formula representation}
1
576181402
Timer: compute connected components [ns] {Formula representation}
81
1697539031
2800
294032420
20957271.987654
Number: circuit size {Circuit}
1
117460925
Number: #nodes {Circuit}
1
26054984
Number: #edges {Circuit}
1
117460925
Number: #variables {Circuit}
1
781400
Timer: copy subcircuit [ns] {Circuit}
36
17914016651
42480
3875806994
497611573.638889
Counter: formula size (copy subcircuit) {Circuit}
36
11835560
260
2125315
328765.555556
Counter: #variables (copy subcircuit) {Circuit}
36
1641560
100
281390
45598.888889
Counter: #clauses (copy subcircuit) {Circuit}
36
1641116
91
281394
45586.555556
Timer (reduced): initialize [ns] {Compiler}
1
497815161
Timer (reduced): compile [ns] {Compiler}
1
176032064754
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
10
Number: #decisions {Compiler}
1
40
Counter: ratio of recomputed hypergraph cuts {Compiler}
76
52
0
1
0.684211
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
28
20
0
1
0.714286
Counter: #connected components {Compiler}
81
76
0
2
0.938272
Counter: #monotone residual formulae / #residual formulae {Compiler}
81
10
0
1
0.123457
Counter: monotone residual formula size {Compiler}
10
350
30
40
35.000000
Counter: #pure clauses / #clauses {Compiler}
81
10.193912
0.000000
1.000000
0.125851
Counter: pure residual formula size / residual formula size {Compiler}
81
10.123882
0.000000
1.000000
0.124986
Timer: assign literal [ns] {Compiler}
130
142040770936
410
43362759393
1092621314.892308
Timer: unassign literal [ns] {Compiler}
130
185067529
220
32364218
1423596.376923
Timer: get decision variable [ns] {Decision heuristic}
40
59859577
60
12832626
1496489.425000
Counter: #preselected variables {Decision heuristic}
40
3576676
1
781400
89416.900000
Counter: #restricted variables / #preselected variables {Decision heuristic}
20
0.025514
0.000064
0.005290
0.001276
Timer (reduced): initialize [ns] {SAT solver}
1
187450963
Timer (reduced): initial simplification [ns] {SAT solver}
1
1160
Timer (reduced): initially implied literals [ns] {SAT solver}
1
770
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
81
693474751
2270
96605616
8561416.679012
Timer: unit propagation [ns] {SAT solver}
81
136340
150
18880
1683.209877
Counter: #implied literals {SAT solver}
81
160
0
5
1.975309
Counter: #implied literals / #variables {SAT solver}
81
0.498933
0.000000
0.062500
0.006160
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
16
14377444
20080
3253124
898590.250000
Counter: #implicit implied literals / #variables {SAT solver}
16
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
16
0.036033
0.000000
0.020408
0.002252
Timer: compute cut [ns] {Partitioning hypergraph}
1
15003191
15003191
15003191
15003191.000000
Counter: cut size {Partitioning hypergraph}
1
16
16
16
16.000000
Counter: cut size / #variables {Partitioning hypergraph}
1
0.004776
0.004776
0.004776
0.004776
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
8
5235671
8250
5129451
654458.875000
Counter: #vertices {Partitioning hypergraph}
8
405
0
405
50.625000
Counter: #vertices / #clauses {Partitioning hypergraph}
8
0.121622
0.000000
0.121622
0.015203
Counter: #hyperedges {Partitioning hypergraph}
8
25
0
25
3.125000
Counter: #hyperedges / #variables {Partitioning hypergraph}
8
0.007463
0.000000
0.007463
0.000933
Counter: hypergraph size {Partitioning hypergraph}
8
1200
0
1200
150.000000
Counter: hypergraph size / formula size {Partitioning hypergraph}
8
0.076555
0.000000
0.076555
0.009569
Timer: create equivalence structure [ns] {Partitioning hypergraph}
8
261888
3920
219159
32736.000000
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
76
36
0
1
0.473684
Number: #current entries {Cache - component caching}
1
40
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
76
12452323659
30600
2634699479
163846363.934211
Timer: search cache record structure [ns] {Cache - component caching}
76
16499338
120
2923625
217096.552632
Timer: add cache record structure [ns] {Cache - component caching}
40
9699141
180
2406586
242478.525000
Counter: #empty cache records / #cache records {Cache - component caching}
76
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
76
39590040
98
6250350
520921.578947
Counter: formula size (positive hit) {Cache - component caching}
36
11835560
260
2125315
328765.555556
Counter: formula size (negative hit) {Cache - component caching}
40
27754480
98
6250350
693862.000000
Counter: #variables (cache record structure) {Cache - component caching}
76
5236800
49
781400
68905.263158
Counter: #variables (positive hit) {Cache - component caching}
36
1641560
100
281390
45598.888889
Counter: #variables (negative hit) {Cache - component caching}
40
3595240
49
781400
89881.000000
Counter: #clauses (cache record structure) {Cache - component caching}
76
5235812
34
781410
68892.263158
Counter: #clauses (positive hit) {Cache - component caching}
36
1641116
91
281394
45586.555556
Counter: #clauses (negative hit) {Cache - component caching}
40
3594696
34
781410
89867.400000
Counter: #removed clauses / #clauses {Cache - component caching}
76
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
36
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
40
12410
30
1080
310.250000
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
40
40
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
