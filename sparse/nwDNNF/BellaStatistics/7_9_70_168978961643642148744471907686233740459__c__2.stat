Number: formula size {Formula representation}
1
2480751
Number: #variables {Formula representation}
1
413532
Number: #clauses {Formula representation}
1
413665
Timer (reduced): initialize [ns] {Formula representation}
1
260245084
Timer: compute connected components [ns] {Formula representation}
113
1414607809
1820
146897934
12518653.176991
Number: circuit size {Circuit}
1
122651320
Number: #nodes {Circuit}
1
31731011
Number: #edges {Circuit}
1
122651320
Number: #variables {Circuit}
1
413532
Timer: copy subcircuit [ns] {Circuit}
48
20505444591
104929
2848822636
427196762.312500
Counter: formula size (copy subcircuit) {Circuit}
48
5531760
342
551718
115245.000000
Counter: #variables (copy subcircuit) {Circuit}
48
1031040
108
98586
21480.000000
Counter: #clauses (copy subcircuit) {Circuit}
48
1033512
127
98691
21531.500000
Timer (reduced): initialize [ns] {Compiler}
1
240008750
Timer (reduced): compile [ns] {Compiler}
1
56725707668
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
0
Number: #decisions {Compiler}
1
56
Counter: ratio of recomputed hypergraph cuts {Compiler}
104
63
0
1
0.605769
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
31
24
0
1
0.774194
Counter: #connected components {Compiler}
113
104
0
1
0.920354
Counter: #monotone residual formulae / #residual formulae {Compiler}
113
9
0
1
0.079646
Counter: monotone residual formula size {Compiler}
9
162
18
18
18.000000
Counter: #pure clauses / #clauses {Compiler}
113
10.399826
0.000000
1.000000
0.092034
Counter: pure residual formula size / residual formula size {Compiler}
113
10.012904
0.000000
1.000000
0.088610
Timer: assign literal [ns] {Compiler}
175
24293157124
380
7010306694
138818040.708571
Timer: unassign literal [ns] {Compiler}
175
190941700
290
26418162
1091095.428571
Timer: get decision variable [ns] {Decision heuristic}
56
59534700
70
8969130
1063119.642857
Counter: #preselected variables {Decision heuristic}
56
2847921
1
413532
50855.732143
Counter: #restricted variables / #preselected variables {Decision heuristic}
24
0.034279
0.000152
0.005538
0.001428
Timer (reduced): initialize [ns] {SAT solver}
1
101112692
Timer (reduced): initial simplification [ns] {SAT solver}
1
740
Timer (reduced): initially implied literals [ns] {SAT solver}
1
440
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
113
569022263
1690
42019987
5035595.247788
Timer: unit propagation [ns] {SAT solver}
113
128210
170
13720
1134.601770
Counter: #implied literals {SAT solver}
113
322
0
9
2.849558
Counter: #implied literals / #variables {SAT solver}
113
0.860397
0.000000
0.100000
0.007614
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
23
38205366
13290
4890497
1661102.869565
Counter: #implicit implied literals / #variables {SAT solver}
23
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
23
0.032258
0.000000
0.032258
0.001403
Timer: compute cut [ns] {Partitioning hypergraph}
2
15550467
4295802
11254665
7775233.500000
Counter: cut size {Partitioning hypergraph}
2
29
12
17
14.500000
Counter: cut size / #variables {Partitioning hypergraph}
2
0.016282
0.003704
0.012579
0.008141
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
7
5995120
5820
5334744
856445.714286
Counter: #vertices {Partitioning hypergraph}
7
411
0
328
58.714286
Counter: #vertices / #clauses {Partitioning hypergraph}
7
0.155140
0.000000
0.084435
0.022163
Counter: #hyperedges {Partitioning hypergraph}
7
54
0
36
7.714286
Counter: #hyperedges / #variables {Partitioning hypergraph}
7
0.026711
0.000000
0.018868
0.003816
Counter: hypergraph size {Partitioning hypergraph}
7
864
0
684
123.428571
Counter: hypergraph size / formula size {Partitioning hypergraph}
7
0.087717
0.000000
0.050000
0.012531
Timer: create equivalence structure [ns] {Partitioning hypergraph}
7
714645
2220
606366
102092.142857
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
104
48
0
1
0.461538
Number: #current entries {Cache - component caching}
1
56
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
104
8899152442
18910
1307677057
85568773.480769
Timer: search cache record structure [ns] {Cache - component caching}
104
10283714
140
1669999
98881.865385
Timer: add cache record structure [ns] {Cache - component caching}
56
6469780
200
1065622
115531.785714
Counter: #empty cache records / #cache records {Cache - component caching}
104
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
104
22407636
62
2480751
215458.038462
Counter: formula size (positive hit) {Cache - component caching}
48
5531760
342
551718
115245.000000
Counter: formula size (negative hit) {Cache - component caching}
56
16875876
62
2480751
301354.928571
Counter: #variables (cache record structure) {Cache - component caching}
104
3923464
31
413532
37725.615385
Counter: #variables (positive hit) {Cache - component caching}
48
1031040
108
98586
21480.000000
Counter: #variables (negative hit) {Cache - component caching}
56
2892424
31
413532
51650.428571
Counter: #clauses (cache record structure) {Cache - component caching}
104
3928492
22
413665
37773.961538
Counter: #clauses (positive hit) {Cache - component caching}
48
1033512
127
98691
21531.500000
Counter: #clauses (negative hit) {Cache - component caching}
56
2894980
22
413665
51696.071429
Counter: #removed clauses / #clauses {Cache - component caching}
104
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
48
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
56
22050
40
1790
393.750000
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
56
56
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
