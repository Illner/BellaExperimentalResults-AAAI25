Number: formula size {Formula representation}
1
14655
Number: #variables {Formula representation}
1
2490
Number: #clauses {Formula representation}
1
2465
Timer (reduced): initialize [ns] {Formula representation}
1
2074113
Timer: compute connected components [ns] {Formula representation}
21
3093339
3590
1084946
147301.857143
Number: circuit size {Circuit}
1
13312
Number: #nodes {Circuit}
1
9188
Number: #edges {Circuit}
1
13312
Number: #variables {Circuit}
1
2490
Timer: copy subcircuit [ns] {Circuit}
8
1614323
21330
618118
201790.375000
Counter: formula size (copy subcircuit) {Circuit}
8
11910
177
4110
1488.750000
Counter: #variables (copy subcircuit) {Circuit}
8
2892
78
864
361.500000
Counter: #clauses (copy subcircuit) {Circuit}
8
2696
61
838
337.000000
Timer (reduced): initialize [ns] {Compiler}
1
3803227
Timer (reduced): compile [ns] {Compiler}
1
33636352
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
0
Number: #decisions {Compiler}
1
10
Counter: ratio of recomputed hypergraph cuts {Compiler}
18
1
0
1
0.055556
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
1
0
0
0
0.000000
Counter: #connected components {Compiler}
21
18
0
1
0.857143
Counter: #monotone residual formulae / #residual formulae {Compiler}
21
3
0
1
0.142857
Counter: monotone residual formula size {Compiler}
3
108
36
36
36.000000
Counter: #pure clauses / #clauses {Compiler}
21
3.493151
0.000000
1.000000
0.166341
Counter: pure residual formula size / residual formula size {Compiler}
21
3.358209
0.000000
1.000000
0.159915
Timer: assign literal [ns] {Compiler}
35
1835114
530
687098
52431.828571
Timer: unassign literal [ns] {Compiler}
35
240740
250
59520
6878.285714
Timer: get decision variable [ns] {Decision heuristic}
10
2470
60
1050
247.000000
Counter: #preselected variables {Decision heuristic}
10
71
2
13
7.100000
Counter: #restricted variables / #preselected variables {Decision heuristic}
0
0.000000
0.000000
0.000000
0.000000
Timer (reduced): initialize [ns] {SAT solver}
1
688257
Timer (reduced): initial simplification [ns] {SAT solver}
1
730
Timer (reduced): initially implied literals [ns] {SAT solver}
1
310
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
21
608638
2990
125080
28982.761905
Timer: unit propagation [ns] {SAT solver}
21
11630
100
5640
553.809524
Counter: #implied literals {SAT solver}
21
35
0
3
1.666667
Counter: #implied literals / #variables {SAT solver}
21
0.221872
0.000000
0.052632
0.010565
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
1
1402915
1402915
1402915
1402915.000000
Counter: #implicit implied literals / #variables {SAT solver}
1
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
1
0.000000
0.000000
0.000000
0.000000
Timer: compute cut [ns] {Partitioning hypergraph}
1
8671090
8671090
8671090
8671090.000000
Counter: cut size {Partitioning hypergraph}
1
13
13
13
13.000000
Counter: cut size / #variables {Partitioning hypergraph}
1
0.005221
0.005221
0.005221
0.005221
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
1
4487854
4487854
4487854
4487854.000000
Counter: #vertices {Partitioning hypergraph}
1
248
248
248
248.000000
Counter: #vertices / #clauses {Partitioning hypergraph}
1
0.100609
0.100609
0.100609
0.100609
Counter: #hyperedges {Partitioning hypergraph}
1
15
15
15
15.000000
Counter: #hyperedges / #variables {Partitioning hypergraph}
1
0.006024
0.006024
0.006024
0.006024
Counter: hypergraph size {Partitioning hypergraph}
1
987
987
987
987.000000
Counter: hypergraph size / formula size {Partitioning hypergraph}
1
0.067349
0.067349
0.067349
0.067349
Timer: create equivalence structure [ns] {Partitioning hypergraph}
1
258689
258689
258689
258689.000000
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
18
8
0
1
0.444444
Number: #current entries {Cache - component caching}
1
10
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
18
10090223
33930
3792157
560567.944444
Timer: search cache record structure [ns] {Cache - component caching}
18
19260
140
4730
1070.000000
Timer: add cache record structure [ns] {Cache - component caching}
10
12710
220
4140
1271.000000
Counter: #empty cache records / #cache records {Cache - component caching}
18
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
18
46435
116
14655
2579.722222
Counter: formula size (positive hit) {Cache - component caching}
8
11910
177
4110
1488.750000
Counter: formula size (negative hit) {Cache - component caching}
10
34525
116
14655
3452.500000
Counter: #variables (cache record structure) {Cache - component caching}
18
9554
58
2490
530.777778
Counter: #variables (positive hit) {Cache - component caching}
8
2892
78
864
361.500000
Counter: #variables (negative hit) {Cache - component caching}
10
6662
58
2490
666.200000
Counter: #clauses (cache record structure) {Cache - component caching}
18
9107
40
2465
505.944444
Counter: #clauses (positive hit) {Cache - component caching}
8
2696
61
838
337.000000
Counter: #clauses (negative hit) {Cache - component caching}
10
6411
40
2465
641.100000
Counter: #removed clauses / #clauses {Cache - component caching}
18
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
8
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
10
680
40
230
68.000000
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
10
10
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
