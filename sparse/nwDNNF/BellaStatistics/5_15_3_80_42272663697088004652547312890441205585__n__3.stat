Number: formula size {Formula representation}
1
21945
Number: #variables {Formula representation}
1
3720
Number: #clauses {Formula representation}
1
3680
Timer (reduced): initialize [ns] {Formula representation}
1
2634389
Timer: compute connected components [ns] {Formula representation}
485
17640607
4880
1476505
36372.385567
Number: circuit size {Circuit}
1
17723
Number: #nodes {Circuit}
1
12538
Number: #edges {Circuit}
1
17723
Number: #variables {Circuit}
1
3720
Timer: copy subcircuit [ns] {Circuit}
0
0
0
0
0.000000
Counter: formula size (copy subcircuit) {Circuit}
0
0
0
0
0.000000
Counter: #variables (copy subcircuit) {Circuit}
0
0
0
0
0.000000
Counter: #clauses (copy subcircuit) {Circuit}
0
0
0
0
0.000000
Timer (reduced): initialize [ns] {Compiler}
1
4138466
Timer (reduced): compile [ns] {Compiler}
1
78409802
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
0
Number: #decisions {Compiler}
1
242
Counter: ratio of recomputed hypergraph cuts {Compiler}
242
131
0
1
0.541322
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
131
0
0
0
0.000000
Counter: #connected components {Compiler}
485
242
0
1
0.498969
Counter: #monotone residual formulae / #residual formulae {Compiler}
485
243
0
1
0.501031
Counter: monotone residual formula size {Compiler}
243
13266
54
66
54.592593
Counter: #pure clauses / #clauses {Compiler}
485
256.953520
0.000000
1.000000
0.529801
Counter: pure residual formula size / residual formula size {Compiler}
485
253.054658
0.000000
1.000000
0.521762
Timer: assign literal [ns] {Compiler}
849
7032561
520
1547865
8283.346290
Timer: unassign literal [ns] {Compiler}
849
1921912
190
93440
2263.736160
Timer: get decision variable [ns] {Decision heuristic}
242
22490
40
880
92.933884
Counter: #preselected variables {Decision heuristic}
242
724
1
13
2.991736
Counter: #restricted variables / #preselected variables {Decision heuristic}
0
0.000000
0.000000
0.000000
0.000000
Timer (reduced): initialize [ns] {SAT solver}
1
1091664
Timer (reduced): initial simplification [ns] {SAT solver}
1
500
Timer (reduced): initially implied literals [ns] {SAT solver}
1
260
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
485
4686486
2821
208611
9662.857732
Timer: unit propagation [ns] {SAT solver}
485
79541
80
3690
164.002062
Counter: #implied literals {SAT solver}
485
849
0
3
1.750515
Counter: #implied literals / #variables {SAT solver}
485
8.040676
0.000000
0.035714
0.016579
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
131
9764572
29740
1852507
74538.717557
Counter: #implicit implied literals / #variables {SAT solver}
131
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
131
0.705311
0.000000
0.011765
0.005384
Timer: compute cut [ns] {Partitioning hypergraph}
18
2076017
39250
843643
115334.277778
Counter: cut size {Partitioning hypergraph}
18
119
4
13
6.611111
Counter: cut size / #variables {Partitioning hypergraph}
18
0.252792
0.003495
0.017730
0.014044
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
131
16042407
11320
7139666
122461.122137
Counter: #vertices {Partitioning hypergraph}
131
832
0
329
6.351145
Counter: #vertices / #clauses {Partitioning hypergraph}
131
1.058837
0.000000
0.090105
0.008083
Counter: #hyperedges {Partitioning hypergraph}
131
147
0
15
1.122137
Counter: #hyperedges / #variables {Partitioning hypergraph}
131
0.317661
0.000000
0.021277
0.002425
Counter: hypergraph size {Partitioning hypergraph}
131
2739
0
1311
20.908397
Counter: hypergraph size / formula size {Partitioning hypergraph}
131
0.701648
0.000000
0.059740
0.005356
Timer: create equivalence structure [ns] {Partitioning hypergraph}
131
1632438
4740
246091
12461.358779
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
242
0
0
0
0.000000
Number: #current entries {Cache - component caching}
1
242
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
242
9267312
12580
366032
38294.677686
Timer: search cache record structure [ns] {Cache - component caching}
242
43760
80
1000
180.826446
Timer: add cache record structure [ns] {Cache - component caching}
242
239561
90
177451
989.921488
Counter: #empty cache records / #cache records {Cache - component caching}
242
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
242
172427
170
21945
712.508264
Counter: formula size (positive hit) {Cache - component caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - component caching}
242
172427
170
21945
712.508264
Counter: #variables (cache record structure) {Cache - component caching}
242
50872
85
3720
210.214876
Counter: #variables (positive hit) {Cache - component caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - component caching}
242
50872
85
3720
210.214876
Counter: #clauses (cache record structure) {Cache - component caching}
242
43059
58
3680
177.929752
Counter: #clauses (positive hit) {Cache - component caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - component caching}
242
43059
58
3680
177.929752
Counter: #removed clauses / #clauses {Cache - component caching}
242
16.570384
0.022526
1.000000
0.068473
Counter: #identical mappings / #mappings {Cache - component caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
242
9280
20
280
38.347107
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
242
242
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
