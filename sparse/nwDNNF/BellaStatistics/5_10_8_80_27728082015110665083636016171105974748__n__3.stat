Number: formula size {Formula representation}
1
1966480
Number: #variables {Formula representation}
1
327840
Number: #clauses {Formula representation}
1
327865
Timer (reduced): initialize [ns] {Formula representation}
1
189800415
Timer: compute connected components [ns] {Formula representation}
65535
8680484391
9560
98210850
132455.701396
Number: circuit size {Circuit}
1
2943633
Number: #nodes {Circuit}
1
1160633
Number: #edges {Circuit}
1
2943633
Number: #variables {Circuit}
1
327840
Timer: copy subcircuit [ns] {Circuit}
0
0
0
0
0.000000
Counter: formula size (copy subcircuit) {Circuit}
0
0
0
0
0.000000
Counter: #variables (copy subcircuit) {Circuit}
0
0
0
0
0.000000
Counter: #clauses (copy subcircuit) {Circuit}
0
0
0
0
0.000000
Timer (reduced): initialize [ns] {Compiler}
1
163763452
Timer (reduced): compile [ns] {Compiler}
1
58016943642
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
0
Number: #decisions {Compiler}
1
32767
Counter: ratio of recomputed hypergraph cuts {Compiler}
32767
27088
0
1
0.826685
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
27088
447
0
1
0.016502
Counter: #connected components {Compiler}
65535
32767
0
1
0.499992
Counter: #monotone residual formulae / #residual formulae {Compiler}
65535
32768
0
1
0.500008
Counter: monotone residual formula size {Compiler}
32768
3748512
112
128
114.395508
Counter: #pure clauses / #clauses {Compiler}
65535
33255.111189
0.000000
1.000000
0.507440
Counter: pure residual formula size / residual formula size {Compiler}
65535
33108.454281
0.000000
1.000000
0.505203
Timer: assign literal [ns] {Compiler}
105050
27206553045
720
4585236347
258986.701999
Timer: unassign literal [ns] {Compiler}
105050
1088132188
200
15074228
10358.231204
Timer: get decision variable [ns] {Decision heuristic}
32767
68554321
40
4738946
2092.175695
Counter: #preselected variables {Decision heuristic}
32767
8651922
1
327840
264.043764
Counter: #restricted variables / #preselected variables {Decision heuristic}
447
0.814013
0.000122
0.002832
0.001821
Timer (reduced): initialize [ns] {SAT solver}
1
65805389
Timer (reduced): initial simplification [ns] {SAT solver}
1
690
Timer (reduced): initially implied literals [ns] {SAT solver}
1
410
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
65535
3128548594
5740
33751585
47738.591501
Timer: unit propagation [ns] {SAT solver}
65535
20508968
140
184618
312.946792
Counter: #implied literals {SAT solver}
65535
169140
0
8
2.580911
Counter: #implied literals / #variables {SAT solver}
65535
497.822925
0.000000
0.017544
0.007596
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
26641
4611487350
66919
2825355
173097.381855
Counter: #implicit implied literals / #variables {SAT solver}
26641
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
26641
36.041905
0.000000
0.006098
0.001353
Timer: compute cut [ns] {Partitioning hypergraph}
526
71673996
45639
329816
136262.349810
Counter: cut size {Partitioning hypergraph}
526
6239
2
13
11.861217
Counter: cut size / #variables {Partitioning hypergraph}
526
2.056534
0.002473
0.007042
0.003910
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
26641
2557761346
19549
5410569
96008.458616
Counter: #vertices {Partitioning hypergraph}
26641
33848
0
66
1.270523
Counter: #vertices / #clauses {Partitioning hypergraph}
26641
11.047523
0.000000
0.022343
0.000415
Counter: #hyperedges {Partitioning hypergraph}
26641
8312
0
17
0.312000
Counter: #hyperedges / #variables {Partitioning hypergraph}
26641
2.750896
0.000000
0.009390
0.000103
Counter: hypergraph size {Partitioning hypergraph}
26641
77950
0
208
2.925941
Counter: hypergraph size / formula size {Partitioning hypergraph}
26641
6.377686
0.000000
0.012676
0.000239
Timer: create equivalence structure [ns] {Partitioning hypergraph}
26641
643670031
8360
586323
24160.881010
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
32767
0
0
0
0.000000
Number: #current entries {Cache - component caching}
1
32767
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
32767
6295360897
25640
22110138
192125.031190
Timer: search cache record structure [ns] {Cache - component caching}
32767
35432332
120
182028
1081.341960
Timer: add cache record structure [ns] {Cache - component caching}
32767
42262272
200
531293
1289.781549
Counter: #empty cache records / #cache records {Cache - component caching}
32767
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
32767
97203874
344
1966480
2966.517350
Counter: formula size (positive hit) {Cache - component caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - component caching}
32767
97203874
344
1966480
2966.517350
Counter: #variables (cache record structure) {Cache - component caching}
32767
25775828
172
327840
786.639851
Counter: #variables (positive hit) {Cache - component caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - component caching}
32767
25775828
172
327840
786.639851
Counter: #clauses (cache record structure) {Cache - component caching}
32767
24101077
116
327865
735.528947
Counter: #clauses (positive hit) {Cache - component caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - component caching}
32767
24101077
116
327865
735.528947
Counter: #removed clauses / #clauses {Cache - component caching}
32767
1471.440080
0.006945
1.000000
0.044906
Counter: #identical mappings / #mappings {Cache - component caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
32767
2147262
30
4410
65.531236
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
32767
32767
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
