Number: formula size {Formula representation}
1
4832245
Number: #variables {Formula representation}
1
805420
Number: #clauses {Formula representation}
1
805590
Timer (reduced): initialize [ns] {Formula representation}
1
488451170
Timer: compute connected components [ns] {Formula representation}
101
2123611470
4310
319377599
21025856.138614
Number: circuit size {Circuit}
1
2833551
Number: #nodes {Circuit}
1
2590719
Number: #edges {Circuit}
1
2833551
Number: #variables {Circuit}
1
805420
Timer: copy subcircuit [ns] {Circuit}
40
866704051
206641
89920380
21667601.275000
Counter: formula size (copy subcircuit) {Circuit}
40
3957470
869
366597
98936.750000
Counter: #variables (copy subcircuit) {Circuit}
40
808280
286
73348
20207.000000
Counter: #clauses (copy subcircuit) {Circuit}
40
810680
309
73473
20267.000000
Timer (reduced): initialize [ns] {Compiler}
1
460805518
Timer (reduced): compile [ns] {Compiler}
1
134431043488
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
22
Number: #decisions {Compiler}
1
50
Counter: ratio of recomputed hypergraph cuts {Compiler}
90
76
0
1
0.844444
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
44
23
0
1
0.522727
Counter: #connected components {Compiler}
101
90
0
2
0.891089
Counter: #monotone residual formulae / #residual formulae {Compiler}
101
22
0
1
0.217822
Counter: monotone residual formula size {Compiler}
22
1210
44
66
55.000000
Counter: #pure clauses / #clauses {Compiler}
101
22.000000
0.000000
1.000000
0.217822
Counter: pure residual formula size / residual formula size {Compiler}
101
22.000000
0.000000
1.000000
0.217822
Timer: assign literal [ns] {Compiler}
155
110472525039
520
24686763093
712725967.993548
Timer: unassign literal [ns] {Compiler}
155
442223050
280
61438558
2853051.935484
Timer: get decision variable [ns] {Decision heuristic}
50
110824082
50
19911720
2216481.640000
Counter: #preselected variables {Decision heuristic}
50
5212477
1
805420
104249.540000
Counter: #restricted variables / #preselected variables {Decision heuristic}
23
0.028440
0.000068
0.005574
0.001237
Timer (reduced): initialize [ns] {SAT solver}
1
173444430
Timer (reduced): initial simplification [ns] {SAT solver}
1
1280
Timer (reduced): initially implied literals [ns] {SAT solver}
1
910
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
101
1274726157
3751
112608203
12621051.059406
Timer: unit propagation [ns] {SAT solver}
101
184562
120
33840
1827.346535
Counter: #implied literals {SAT solver}
101
335
0
11
3.316832
Counter: #implied literals / #variables {SAT solver}
101
0.693490
0.000000
0.043478
0.006866
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
33
14877112
31380
4024406
450821.575758
Counter: #implicit implied literals / #variables {SAT solver}
33
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
33
0.023994
0.000000
0.014286
0.000727
Timer: compute cut [ns] {Partitioning hypergraph}
1
10554083
10554083
10554083
10554083.000000
Counter: cut size {Partitioning hypergraph}
1
9
9
9
9.000000
Counter: cut size / #variables {Partitioning hypergraph}
1
0.001816
0.001816
0.001816
0.001816
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
21
5117999
11790
4228537
243714.238095
Counter: #vertices {Partitioning hypergraph}
21
179
0
179
8.523810
Counter: #vertices / #clauses {Partitioning hypergraph}
21
0.035721
0.000000
0.035721
0.001701
Counter: #hyperedges {Partitioning hypergraph}
21
30
0
30
1.428571
Counter: #hyperedges / #variables {Partitioning hypergraph}
21
0.006054
0.000000
0.006054
0.000288
Counter: hypergraph size {Partitioning hypergraph}
21
382
0
382
18.190476
Counter: hypergraph size / formula size {Partitioning hypergraph}
21
0.019365
0.000000
0.019365
0.000922
Timer: create equivalence structure [ns] {Partitioning hypergraph}
21
795634
5690
452561
37887.333333
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
90
40
0
1
0.444444
Number: #current entries {Cache - component caching}
1
50
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
90
17852864616
43380
3171595969
198365162.400000
Timer: search cache record structure [ns] {Cache - component caching}
90
14337297
140
1757047
159303.300000
Timer: add cache record structure [ns] {Cache - component caching}
50
26660446
190
5118861
533208.920000
Counter: #empty cache records / #cache records {Cache - component caching}
90
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
90
34854365
140
4832245
387270.722222
Counter: formula size (positive hit) {Cache - component caching}
40
3957470
869
366597
98936.750000
Counter: formula size (negative hit) {Cache - component caching}
50
30896895
140
4832245
617937.900000
Counter: #variables (cache record structure) {Cache - component caching}
90
6046910
70
805420
67187.888889
Counter: #variables (positive hit) {Cache - component caching}
40
808280
286
73348
20207.000000
Counter: #variables (negative hit) {Cache - component caching}
50
5238630
70
805420
104772.600000
Counter: #clauses (cache record structure) {Cache - component caching}
90
6051985
48
805590
67244.277778
Counter: #clauses (positive hit) {Cache - component caching}
40
810680
309
73473
20267.000000
Counter: #clauses (negative hit) {Cache - component caching}
50
5241305
48
805590
104826.100000
Counter: #removed clauses / #clauses {Cache - component caching}
90
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
40
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
50
11480
30
1460
229.600000
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
50
50
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
