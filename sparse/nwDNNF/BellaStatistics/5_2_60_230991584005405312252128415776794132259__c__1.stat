Number: formula size {Formula representation}
1
440
Number: #variables {Formula representation}
1
110
Number: #clauses {Formula representation}
1
100
Timer (reduced): initialize [ns] {Formula representation}
1
112609
Timer: compute connected components [ns] {Formula representation}
11
214109
1190
66780
19464.454545
Number: circuit size {Circuit}
1
810
Number: #nodes {Circuit}
1
575
Number: #edges {Circuit}
1
810
Number: #variables {Circuit}
1
110
Timer: copy subcircuit [ns] {Circuit}
4
132150
9550
69700
33037.500000
Counter: formula size (copy subcircuit) {Circuit}
4
420
32
192
105.000000
Counter: #variables (copy subcircuit) {Circuit}
4
162
16
66
40.500000
Counter: #clauses (copy subcircuit) {Circuit}
4
132
12
56
33.000000
Timer (reduced): initialize [ns] {Compiler}
1
2985382
Timer (reduced): compile [ns] {Compiler}
1
2068925
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
0
Number: #decisions {Compiler}
1
5
Counter: ratio of recomputed hypergraph cuts {Compiler}
9
5
0
1
0.555556
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
3
0
0
0
0.000000
Counter: #connected components {Compiler}
11
9
0
1
0.818182
Counter: #monotone residual formulae / #residual formulae {Compiler}
11
2
0
1
0.181818
Counter: monotone residual formula size {Compiler}
2
16
8
8
8.000000
Counter: #pure clauses / #clauses {Compiler}
11
2.571429
0.000000
1.000000
0.233766
Counter: pure residual formula size / residual formula size {Compiler}
11
2.422222
0.000000
1.000000
0.220202
Timer: assign literal [ns] {Compiler}
20
38800
560
8630
1940.000000
Timer: unassign literal [ns] {Compiler}
20
15600
250
2200
780.000000
Timer: get decision variable [ns] {Decision heuristic}
5
1070
60
680
214.000000
Counter: #preselected variables {Decision heuristic}
5
9
1
3
1.800000
Counter: #restricted variables / #preselected variables {Decision heuristic}
0
0.000000
0.000000
0.000000
0.000000
Timer (reduced): initialize [ns] {SAT solver}
1
68010
Timer (reduced): initial simplification [ns] {SAT solver}
1
410
Timer (reduced): initially implied literals [ns] {SAT solver}
1
240
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
11
53270
1120
11880
4842.727273
Timer: unit propagation [ns] {SAT solver}
11
3490
160
830
317.272727
Counter: #implied literals {SAT solver}
11
20
0
2
1.818182
Counter: #implied literals / #variables {SAT solver}
11
0.701015
0.000000
0.200000
0.063729
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
5
119260
8590
65370
23852.000000
Counter: #implicit implied literals / #variables {SAT solver}
5
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
5
0.303788
0.045455
0.066667
0.060758
Timer: compute cut [ns] {Partitioning hypergraph}
1
688108
688108
688108
688108.000000
Counter: cut size {Partitioning hypergraph}
1
3
3
3
3.000000
Counter: cut size / #variables {Partitioning hypergraph}
1
0.027273
0.027273
0.027273
0.027273
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
3
138720
4480
122770
46240.000000
Counter: #vertices {Partitioning hypergraph}
3
4
0
4
1.333333
Counter: #vertices / #clauses {Partitioning hypergraph}
3
0.040000
0.000000
0.040000
0.013333
Counter: #hyperedges {Partitioning hypergraph}
3
5
0
5
1.666667
Counter: #hyperedges / #variables {Partitioning hypergraph}
3
0.045455
0.000000
0.045455
0.015152
Counter: hypergraph size {Partitioning hypergraph}
3
12
0
12
4.000000
Counter: hypergraph size / formula size {Partitioning hypergraph}
3
0.027273
0.000000
0.027273
0.009091
Timer: create equivalence structure [ns] {Partitioning hypergraph}
3
21210
2080
14960
7070.000000
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
9
4
0
1
0.444444
Number: #current entries {Cache - component caching}
1
5
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
9
491028
12750
166809
54558.666667
Timer: search cache record structure [ns] {Cache - component caching}
9
2330
130
390
258.888889
Timer: add cache record structure [ns] {Cache - component caching}
5
2000
140
1240
400.000000
Counter: #empty cache records / #cache records {Cache - component caching}
9
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
9
1280
32
440
142.222222
Counter: formula size (positive hit) {Cache - component caching}
4
420
32
192
105.000000
Counter: formula size (negative hit) {Cache - component caching}
5
860
32
440
172.000000
Counter: #variables (cache record structure) {Cache - component caching}
9
434
16
110
48.222222
Counter: #variables (positive hit) {Cache - component caching}
4
162
16
66
40.500000
Counter: #variables (negative hit) {Cache - component caching}
5
272
16
110
54.400000
Counter: #clauses (cache record structure) {Cache - component caching}
9
364
12
100
40.444444
Counter: #clauses (positive hit) {Cache - component caching}
4
132
12
56
33.000000
Counter: #clauses (negative hit) {Cache - component caching}
5
232
12
100
46.400000
Counter: #removed clauses / #clauses {Cache - component caching}
9
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
4
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
5
410
30
150
82.000000
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
5
5
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
