Number: formula size {Formula representation}
1
6001600
Number: #variables {Formula representation}
1
1000200
Number: #clauses {Formula representation}
1
1000740
Timer (reduced): initialize [ns] {Formula representation}
1
630286278
Timer: compute connected components [ns] {Formula representation}
99
1174886439
590
100837467
11867539.787879
Number: circuit size {Circuit}
1
92364430
Number: #nodes {Circuit}
1
32862619
Number: #edges {Circuit}
1
92364430
Number: #variables {Circuit}
1
1000200
Timer: copy subcircuit [ns] {Circuit}
135
18773776335
13360
2240062959
139065009.888889
Counter: formula size (copy subcircuit) {Circuit}
135
16721280
120
1601480
123861.333333
Counter: #variables (copy subcircuit) {Circuit}
135
3006000
20
280180
22266.666667
Counter: #clauses (copy subcircuit) {Circuit}
135
3025116
56
280684
22408.266667
Timer (reduced): initialize [ns] {Compiler}
1
658662030
Timer (reduced): compile [ns] {Compiler}
1
266602912703
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
10
Number: #splits {Compiler}
1
110
Number: #decisions {Compiler}
1
54
Counter: ratio of recomputed hypergraph cuts {Compiler}
189
161
0
1
0.851852
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
33
30
0
1
0.909091
Counter: #connected components {Compiler}
99
189
1
8
1.909091
Counter: #monotone residual formulae / #residual formulae {Compiler}
99
0
0
0
0.000000
Counter: monotone residual formula size {Compiler}
0
0
0
0
0.000000
Counter: #pure clauses / #clauses {Compiler}
99
0.000000
0.000000
0.000000
0.000000
Counter: pure residual formula size / residual formula size {Compiler}
99
0.000000
0.000000
0.000000
0.000000
Timer: assign literal [ns] {Compiler}
168
211962231888
250
37178649054
1261679951.714286
Timer: unassign literal [ns] {Compiler}
168
618962026
220
71440654
3684297.773810
Timer: get decision variable [ns] {Decision heuristic}
54
311957458
50
50263308
5776989.962963
Counter: #preselected variables {Decision heuristic}
54
7982253
2
1000200
147819.500000
Counter: #restricted variables / #preselected variables {Decision heuristic}
0
0.000000
0.000000
0.000000
0.000000
Timer (reduced): initialize [ns] {SAT solver}
1
202635097
Timer (reduced): initial simplification [ns] {SAT solver}
1
1370
Timer (reduced): initially implied literals [ns] {SAT solver}
1
830
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
109
2150253793
340
225645928
19727099.018349
Timer: unit propagation [ns] {SAT solver}
109
197630
110
14070
1813.119266
Counter: #implied literals {SAT solver}
109
336
0
10
3.082569
Counter: #implied literals / #variables {SAT solver}
109
6.188525
0.000000
1.000000
0.056775
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
104
14267334
8810
6399855
137185.903846
Counter: #implicit implied literals / #variables {SAT solver}
104
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
104
0.000000
0.000000
0.000000
0.000000
Timer: compute cut [ns] {Partitioning hypergraph}
3
417566943
391542
388140907
139188981.000000
Counter: cut size {Partitioning hypergraph}
3
47
10
27
15.666667
Counter: cut size / #variables {Partitioning hypergraph}
3
0.516888
0.005777
0.500000
0.172296
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
3
8564903
25410
7463449
2854967.666667
Counter: #vertices {Partitioning hypergraph}
3
5399
11
4569
1799.666667
Counter: #vertices / #clauses {Partitioning hypergraph}
3
1.764071
0.196429
0.898525
0.588024
Counter: #hyperedges {Partitioning hypergraph}
3
217
10
117
72.333333
Counter: #hyperedges / #variables {Partitioning hypergraph}
3
0.625032
0.025032
0.500000
0.208344
Counter: hypergraph size {Partitioning hypergraph}
3
15134
20
13414
5044.666667
Counter: hypergraph size / formula size {Partitioning hypergraph}
3
1.384603
0.166667
0.705889
0.461534
Timer: create equivalence structure [ns] {Partitioning hypergraph}
3
1054665
3460
887984
351555.000000
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
189
135
0
1
0.714286
Number: #current entries {Cache - component caching}
1
54
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
189
30697487686
2260
5020196124
162420569.767196
Timer: search cache record structure [ns] {Cache - component caching}
189
35384788
30
3617905
187221.100529
Timer: add cache record structure [ns] {Cache - component caching}
54
24646259
170
9025027
456412.203704
Counter: #empty cache records / #cache records {Cache - component caching}
189
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
189
63887832
8
6001600
338030.857143
Counter: formula size (positive hit) {Cache - component caching}
135
16721280
120
1601480
123861.333333
Counter: formula size (negative hit) {Cache - component caching}
54
47166552
8
6001600
873454.666667
Counter: #variables (cache record structure) {Cache - component caching}
189
11011968
4
1000200
58264.380952
Counter: #variables (positive hit) {Cache - component caching}
135
3006000
20
280180
22266.666667
Counter: #variables (negative hit) {Cache - component caching}
54
8005968
4
1000200
148258.666667
Counter: #clauses (cache record structure) {Cache - component caching}
189
11050596
4
1000740
58468.761905
Counter: #clauses (positive hit) {Cache - component caching}
135
3025116
56
280684
22408.266667
Counter: #clauses (negative hit) {Cache - component caching}
54
8025480
4
1000740
148620.000000
Counter: #removed clauses / #clauses {Cache - component caching}
189
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
135
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
54
30320
20
3080
561.481481
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
54
54
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
