Number: formula size {Formula representation}
1
24672
Number: #variables {Formula representation}
1
4144
Number: #clauses {Formula representation}
1
4140
Timer (reduced): initialize [ns] {Formula representation}
1
2992304
Timer: compute connected components [ns] {Formula representation}
511
14359767
2900
1792868
28101.305284
Number: circuit size {Circuit}
1
14634
Number: #nodes {Circuit}
1
13801
Number: #edges {Circuit}
1
14634
Number: #variables {Circuit}
1
4144
Timer: copy subcircuit [ns] {Circuit}
0
0
0
0
0.000000
Counter: formula size (copy subcircuit) {Circuit}
0
0
0
0
0.000000
Counter: #variables (copy subcircuit) {Circuit}
0
0
0
0
0.000000
Counter: #clauses (copy subcircuit) {Circuit}
0
0
0
0
0.000000
Timer (reduced): initialize [ns] {Compiler}
1
5800195
Timer (reduced): compile [ns] {Compiler}
1
72726314
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
0
Number: #decisions {Compiler}
1
255
Counter: ratio of recomputed hypergraph cuts {Compiler}
255
161
0
1
0.631373
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
161
0
0
0
0.000000
Counter: #connected components {Compiler}
511
255
0
1
0.499022
Counter: #monotone residual formulae / #residual formulae {Compiler}
511
256
0
1
0.500978
Counter: monotone residual formula size {Compiler}
256
8192
32
32
32.000000
Counter: #pure clauses / #clauses {Compiler}
511
256.000000
0.000000
1.000000
0.500978
Counter: pure residual formula size / residual formula size {Compiler}
511
256.000000
0.000000
1.000000
0.500978
Timer: assign literal [ns] {Compiler}
856
9018406
350
2180870
10535.521028
Timer: unassign literal [ns] {Compiler}
856
2092340
130
146591
2444.322430
Timer: get decision variable [ns] {Decision heuristic}
255
24200
40
1530
94.901961
Counter: #preselected variables {Decision heuristic}
255
858
1
15
3.364706
Counter: #restricted variables / #preselected variables {Decision heuristic}
0
0.000000
0.000000
0.000000
0.000000
Timer (reduced): initialize [ns] {SAT solver}
1
1253695
Timer (reduced): initial simplification [ns] {SAT solver}
1
591
Timer (reduced): initially implied literals [ns] {SAT solver}
1
280
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
511
4165003
1860
228650
8150.690802
Timer: unit propagation [ns] {SAT solver}
511
77770
80
3910
152.191781
Counter: #implied literals {SAT solver}
511
938
0
4
1.835616
Counter: #implied literals / #variables {SAT solver}
511
13.302920
0.000000
0.058824
0.026033
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
161
9392641
16720
2525902
58339.385093
Counter: #implicit implied literals / #variables {SAT solver}
161
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
161
1.076923
0.000000
0.019231
0.006689
Timer: compute cut [ns] {Partitioning hypergraph}
18
1846459
41000
575572
102581.055556
Counter: cut size {Partitioning hypergraph}
18
120
3
15
6.666667
Counter: cut size / #variables {Partitioning hypergraph}
18
0.318674
0.003620
0.020833
0.017704
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
161
12552619
6050
5664645
77966.577640
Counter: #vertices {Partitioning hypergraph}
161
674
0
260
4.186335
Counter: #vertices / #clauses {Partitioning hypergraph}
161
1.070088
0.000000
0.064748
0.006647
Counter: #hyperedges {Partitioning hypergraph}
161
155
0
16
0.962733
Counter: #hyperedges / #variables {Partitioning hypergraph}
161
0.439405
0.000000
0.032051
0.002729
Counter: hypergraph size {Partitioning hypergraph}
161
2128
0
1040
13.217391
Counter: hypergraph size / formula size {Partitioning hypergraph}
161
0.636651
0.000000
0.042153
0.003954
Timer: create equivalence structure [ns] {Partitioning hypergraph}
161
1609314
3150
394732
9995.739130
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
255
0
0
0
0.000000
Number: #current entries {Cache - component caching}
1
255
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
255
7616808
6190
349972
29869.835294
Timer: search cache record structure [ns] {Cache - component caching}
255
99610
80
3640
390.627451
Timer: add cache record structure [ns] {Cache - component caching}
255
489842
90
360722
1920.949020
Counter: #empty cache records / #cache records {Cache - component caching}
255
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
255
172718
104
24672
677.325490
Counter: formula size (positive hit) {Cache - component caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - component caching}
255
172718
104
24672
677.325490
Counter: #variables (cache record structure) {Cache - component caching}
255
43116
52
4144
169.082353
Counter: #variables (positive hit) {Cache - component caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - component caching}
255
43116
52
4144
169.082353
Counter: #clauses (cache record structure) {Cache - component caching}
255
39598
36
4140
155.286275
Counter: #clauses (positive hit) {Cache - component caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - component caching}
255
39598
36
4140
155.286275
Counter: #removed clauses / #clauses {Cache - component caching}
255
28.912058
0.031220
1.000000
0.113381
Counter: #identical mappings / #mappings {Cache - component caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
255
11910
20
650
46.705882
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
255
255
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
