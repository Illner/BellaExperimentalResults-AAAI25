Number: formula size {Formula representation}
1
8750245
Number: #variables {Formula representation}
1
1093890
Number: #clauses {Formula representation}
1
1093862
Timer (reduced): initialize [ns] {Formula representation}
1
1057335692
Timer: compute connected components [ns] {Formula representation}
57
5086673121
9740
902305385
89239879.315789
Number: circuit size {Circuit}
1
7398425
Number: #nodes {Circuit}
1
3804964
Number: #edges {Circuit}
1
7398425
Number: #variables {Circuit}
1
1093890
Timer: copy subcircuit [ns] {Circuit}
24
4208605350
887858
950636137
175358556.250000
Counter: formula size (copy subcircuit) {Circuit}
24
10427540
785
2047085
434480.833333
Counter: #variables (copy subcircuit) {Circuit}
24
1489640
310
281380
62068.333333
Counter: #clauses (copy subcircuit) {Circuit}
24
1488544
266
281346
62022.666667
Timer (reduced): initialize [ns] {Compiler}
1
1960084296
Timer (reduced): compile [ns] {Compiler}
1
448257457307
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
0
Number: #decisions {Compiler}
1
28
Counter: ratio of recomputed hypergraph cuts {Compiler}
52
33
0
1
0.634615
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
17
16
0
1
0.941176
Counter: #connected components {Compiler}
57
52
0
1
0.912281
Counter: #monotone residual formulae / #residual formulae {Compiler}
57
5
0
1
0.087719
Counter: monotone residual formula size {Compiler}
5
500
100
100
100.000000
Counter: #pure clauses / #clauses {Compiler}
57
5.349650
0.000000
1.000000
0.093854
Counter: pure residual formula size / residual formula size {Compiler}
57
5.242424
0.000000
1.000000
0.091972
Timer: assign literal [ns] {Compiler}
91
372577648675
1320
133833323175
4094259875.549451
Timer: unassign literal [ns] {Compiler}
91
1007428123
400
208250282
11070638.714286
Timer: get decision variable [ns] {Decision heuristic}
28
285930232
50
84553494
10211794.000000
Counter: #preselected variables {Decision heuristic}
28
4207780
1
1093890
150277.857143
Counter: #restricted variables / #preselected variables {Decision heuristic}
16
0.009573
0.000032
0.002312
0.000598
Timer (reduced): initialize [ns] {SAT solver}
1
567801900
Timer (reduced): initial simplification [ns] {SAT solver}
1
1930
Timer (reduced): initially implied literals [ns] {SAT solver}
1
1280
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
57
4439094634
46140
545468750
77878853.228070
Timer: unit propagation [ns] {SAT solver}
57
412189
260
46989
7231.385965
Counter: #implied literals {SAT solver}
57
112
0
5
1.964912
Counter: #implied literals / #variables {SAT solver}
57
0.109358
0.000000
0.019608
0.001919
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
5
40479672
6638926
12522303
8095934.400000
Counter: #implicit implied literals / #variables {SAT solver}
5
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
5
0.000000
0.000000
0.000000
0.000000
Timer: compute cut [ns] {Partitioning hypergraph}
1
5411068
5411068
5411068
5411068.000000
Counter: cut size {Partitioning hypergraph}
1
12
12
12
12.000000
Counter: cut size / #variables {Partitioning hypergraph}
1
0.002759
0.002759
0.002759
0.002759
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
1
7194894
7194894
7194894
7194894.000000
Counter: #vertices {Partitioning hypergraph}
1
128
128
128
128.000000
Counter: #vertices / #clauses {Partitioning hypergraph}
1
0.029781
0.029781
0.029781
0.029781
Counter: #hyperedges {Partitioning hypergraph}
1
15
15
15
15.000000
Counter: #hyperedges / #variables {Partitioning hypergraph}
1
0.003448
0.003448
0.003448
0.003448
Counter: hypergraph size {Partitioning hypergraph}
1
390
390
390
390.000000
Counter: hypergraph size / formula size {Partitioning hypergraph}
1
0.019278
0.019278
0.019278
0.019278
Timer: create equivalence structure [ns] {Partitioning hypergraph}
1
1003798
1003798
1003798
1003798.000000
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
52
24
0
1
0.461538
Number: #current entries {Cache - component caching}
1
28
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
52
56227149050
98899
11196059647
1081291327.884615
Timer: search cache record structure [ns] {Cache - component caching}
52
42032908
320
7580543
808325.153846
Timer: add cache record structure [ns] {Cache - component caching}
28
50811528
1730
16068315
1814697.428571
Counter: #empty cache records / #cache records {Cache - component caching}
52
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
52
43140994
308
8750245
829634.500000
Counter: formula size (positive hit) {Cache - component caching}
24
10427540
785
2047085
434480.833333
Counter: formula size (negative hit) {Cache - component caching}
28
32713454
308
8750245
1168337.642857
Counter: #variables (cache record structure) {Cache - component caching}
52
5714236
154
1093890
109889.153846
Counter: #variables (positive hit) {Cache - component caching}
24
1489640
310
281380
62068.333333
Counter: #variables (negative hit) {Cache - component caching}
28
4224596
154
1093890
150878.428571
Counter: #clauses (cache record structure) {Cache - component caching}
52
5711834
104
1093862
109842.961538
Counter: #clauses (positive hit) {Cache - component caching}
24
1488544
266
281346
62022.666667
Counter: #clauses (negative hit) {Cache - component caching}
28
4223290
104
1093862
150831.785714
Counter: #removed clauses / #clauses {Cache - component caching}
52
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
24
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
28
22049
50
2120
787.464286
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
28
28
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
