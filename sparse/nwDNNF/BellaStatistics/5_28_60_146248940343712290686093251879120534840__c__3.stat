Number: formula size {Formula representation}
1
15370600
Number: #variables {Formula representation}
1
3073700
Number: #clauses {Formula representation}
1
3075315
Timer (reduced): initialize [ns] {Formula representation}
1
1601729000
Timer: compute connected components [ns] {Formula representation}
271
18738480553
5080
1113526148
69145684.697417
Number: circuit size {Circuit}
1
40556413
Number: #nodes {Circuit}
1
13105455
Number: #edges {Circuit}
1
40556413
Number: #variables {Circuit}
1
3073700
Timer: copy subcircuit [ns] {Circuit}
108
5969749487
684850
268224090
55275458.212963
Counter: formula size (copy subcircuit) {Circuit}
108
14723856
3192
442400
136332.000000
Counter: #variables (copy subcircuit) {Circuit}
108
3682476
868
110124
34097.000000
Counter: #clauses (copy subcircuit) {Circuit}
108
3749976
1191
111388
34722.000000
Timer (reduced): initialize [ns] {Compiler}
1
1901197587
Timer (reduced): compile [ns] {Compiler}
1
630743168090
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
56
Number: #decisions {Compiler}
1
135
Counter: ratio of recomputed hypergraph cuts {Compiler}
243
233
0
1
0.958848
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
131
76
0
1
0.580153
Counter: #connected components {Compiler}
271
243
0
2
0.896679
Counter: #monotone residual formulae / #residual formulae {Compiler}
271
56
0
1
0.206642
Counter: monotone residual formula size {Compiler}
56
6272
56
168
112.000000
Counter: #pure clauses / #clauses {Compiler}
271
56.643150
0.000000
1.000000
0.209015
Counter: pure residual formula size / residual formula size {Compiler}
271
56.482759
0.000000
1.000000
0.208423
Timer: assign literal [ns] {Compiler}
410
378452037807
630
71801649690
923053750.748780
Timer: unassign literal [ns] {Compiler}
410
3121244864
330
196037281
7612792.351220
Timer: get decision variable [ns] {Decision heuristic}
135
1378952348
120
97982150
10214461.837037
Counter: #preselected variables {Decision heuristic}
135
46652095
1
3073700
345571.074074
Counter: #restricted variables / #preselected variables {Decision heuristic}
76
0.123690
0.000046
0.006024
0.001627
Timer (reduced): initialize [ns] {SAT solver}
1
535340032
Timer (reduced): initial simplification [ns] {SAT solver}
1
1230
Timer (reduced): initially implied literals [ns] {SAT solver}
1
730
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
271
18588782433
21480
684291562
68593293.110701
Timer: unit propagation [ns] {SAT solver}
271
945780
240
293960
3489.963100
Counter: #implied literals {SAT solver}
271
2035
0
28
7.509225
Counter: #implied literals / #variables {SAT solver}
271
1.198065
0.000000
0.034483
0.004421
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
103
244490970
157560
6523367
2373698.737864
Counter: #implicit implied literals / #variables {SAT solver}
103
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
103
0.015270
0.000000
0.011364
0.000148
Timer: compute cut [ns] {Partitioning hypergraph}
1
8550716
8550716
8550716
8550716.000000
Counter: cut size {Partitioning hypergraph}
1
19
19
19
19.000000
Counter: cut size / #variables {Partitioning hypergraph}
1
0.003803
0.003803
0.003803
0.003803
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
55
14058084
12170
3962448
255601.527273
Counter: #vertices {Partitioning hypergraph}
55
170
0
170
3.090909
Counter: #vertices / #clauses {Partitioning hypergraph}
55
0.032069
0.000000
0.032069
0.000583
Counter: #hyperedges {Partitioning hypergraph}
55
34
0
34
0.618182
Counter: #hyperedges / #variables {Partitioning hypergraph}
55
0.006805
0.000000
0.006805
0.000124
Counter: hypergraph size {Partitioning hypergraph}
55
370
0
370
6.727273
Counter: hypergraph size / formula size {Partitioning hypergraph}
55
0.018310
0.000000
0.018310
0.000333
Timer: create equivalence structure [ns] {Partitioning hypergraph}
55
4340510
6050
447930
78918.363636
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
243
108
0
1
0.444444
Number: #current entries {Cache - component caching}
1
135
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
243
190682125107
50310
13990352601
784700103.320988
Timer: search cache record structure [ns] {Cache - component caching}
243
73284758
140
4040778
301583.366255
Timer: add cache record structure [ns] {Cache - component caching}
135
66882043
210
4228556
495422.540741
Counter: #empty cache records / #cache records {Cache - component caching}
243
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
243
246103227
176
15370600
1012770.481481
Counter: formula size (positive hit) {Cache - component caching}
108
14723856
3192
442400
136332.000000
Counter: formula size (negative hit) {Cache - component caching}
135
231379371
176
15370600
1713921.266667
Counter: #variables (cache record structure) {Cache - component caching}
243
50400522
88
3073700
207409.555556
Counter: #variables (positive hit) {Cache - component caching}
108
3682476
868
110124
34097.000000
Counter: #variables (negative hit) {Cache - component caching}
135
46718046
88
3073700
346059.600000
Counter: #clauses (cache record structure) {Cache - component caching}
243
50548122
60
3075315
208016.962963
Counter: #clauses (positive hit) {Cache - component caching}
108
3749976
1191
111388
34722.000000
Counter: #clauses (negative hit) {Cache - component caching}
135
46798146
60
3075315
346652.933333
Counter: #removed clauses / #clauses {Cache - component caching}
243
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
108
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
135
58340
50
4620
432.148148
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
135
135
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
