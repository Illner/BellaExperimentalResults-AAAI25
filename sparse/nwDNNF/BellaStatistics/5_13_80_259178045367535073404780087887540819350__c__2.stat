Number: formula size {Formula representation}
1
11139765
Number: #variables {Formula representation}
1
1856660
Number: #clauses {Formula representation}
1
1856925
Timer (reduced): initialize [ns] {Formula representation}
1
1231549136
Timer: compute connected components [ns] {Formula representation}
121
8150680655
6380
1064307851
67360997.148760
Number: circuit size {Circuit}
1
20387778
Number: #nodes {Circuit}
1
7887983
Number: #edges {Circuit}
1
20387778
Number: #variables {Circuit}
1
1856660
Timer: copy subcircuit [ns] {Circuit}
48
4047295150
191189
411808655
84318648.958333
Counter: formula size (copy subcircuit) {Circuit}
48
9260940
1209
714805
192936.250000
Counter: #variables (copy subcircuit) {Circuit}
48
1889784
390
142974
39370.500000
Counter: #clauses (copy subcircuit) {Circuit}
48
1895052
430
143173
39480.250000
Timer (reduced): initialize [ns] {Compiler}
1
1511571389
Timer (reduced): compile [ns] {Compiler}
1
575066914043
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
0
Number: #decisions {Compiler}
1
60
Counter: ratio of recomputed hypergraph cuts {Compiler}
108
75
0
1
0.694444
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
42
34
0
1
0.809524
Counter: #connected components {Compiler}
121
108
0
1
0.892562
Counter: #monotone residual formulae / #residual formulae {Compiler}
121
13
0
1
0.107438
Counter: monotone residual formula size {Compiler}
13
676
52
52
52.000000
Counter: #pure clauses / #clauses {Compiler}
121
14.081023
0.000000
1.000000
0.116372
Counter: pure residual formula size / residual formula size {Compiler}
121
13.787879
0.000000
1.000000
0.113949
Timer: assign literal [ns] {Compiler}
185
463010689973
890
111217646067
2502760486.340541
Timer: unassign literal [ns] {Compiler}
185
1454478613
330
181384071
7862046.556757
Timer: get decision variable [ns] {Decision heuristic}
60
527733488
60
75519868
8795558.133333
Counter: #preselected variables {Decision heuristic}
60
13926218
1
1856660
232103.633333
Counter: #restricted variables / #preselected variables {Decision heuristic}
34
0.054210
0.000035
0.005969
0.001594
Timer (reduced): initialize [ns] {SAT solver}
1
387861178
Timer (reduced): initial simplification [ns] {SAT solver}
1
1859
Timer (reduced): initially implied literals [ns] {SAT solver}
1
1330
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
121
6949527377
82440
534710900
57434110.553719
Timer: unit propagation [ns] {SAT solver}
121
383318
240
32090
3167.917355
Counter: #implied literals {SAT solver}
121
460
0
13
3.801653
Counter: #implied literals / #variables {SAT solver}
121
0.473670
0.000000
0.037037
0.003915
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
17
45970087
370017
6139020
2704122.764706
Counter: #implicit implied literals / #variables {SAT solver}
17
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
17
0.012195
0.000000
0.012195
0.000717
Timer: compute cut [ns] {Partitioning hypergraph}
2
14233504
6329398
7904106
7116752.000000
Counter: cut size {Partitioning hypergraph}
2
37
18
19
18.500000
Counter: cut size / #variables {Partitioning hypergraph}
2
0.010494
0.004140
0.006355
0.005247
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
8
6655836
14059
4553983
831979.500000
Counter: #vertices {Partitioning hypergraph}
8
421
0
250
52.625000
Counter: #vertices / #clauses {Partitioning hypergraph}
8
0.112550
0.000000
0.056612
0.014069
Counter: #hyperedges {Partitioning hypergraph}
8
55
0
29
6.875000
Counter: #hyperedges / #variables {Partitioning hypergraph}
8
0.015365
0.000000
0.008696
0.001921
Counter: hypergraph size {Partitioning hypergraph}
8
887
0
523
110.875000
Counter: hypergraph size / formula size {Partitioning hypergraph}
8
0.062705
0.000000
0.032483
0.007838
Timer: create equivalence structure [ns] {Partitioning hypergraph}
8
996181
7100
597015
124522.625000
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
108
48
0
1
0.444444
Number: #current entries {Cache - component caching}
1
60
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
108
85031772103
62150
11046014565
787331223.175926
Timer: search cache record structure [ns] {Cache - component caching}
108
32373116
140
3910339
299751.074074
Timer: add cache record structure [ns] {Cache - component caching}
60
29051736
290
3684210
484195.600000
Counter: #empty cache records / #cache records {Cache - component caching}
108
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
108
91780570
164
11139765
849820.092593
Counter: formula size (positive hit) {Cache - component caching}
48
9260940
1209
714805
192936.250000
Counter: formula size (negative hit) {Cache - component caching}
60
82519630
164
11139765
1375327.166667
Counter: #variables (cache record structure) {Cache - component caching}
108
15848628
82
1856660
146746.555556
Counter: #variables (positive hit) {Cache - component caching}
48
1889784
390
142974
39370.500000
Counter: #variables (negative hit) {Cache - component caching}
60
13958844
82
1856660
232647.400000
Counter: #clauses (cache record structure) {Cache - component caching}
108
15859814
56
1856925
146850.129630
Counter: #clauses (positive hit) {Cache - component caching}
48
1895052
430
143173
39480.250000
Counter: #clauses (negative hit) {Cache - component caching}
60
13964762
56
1856925
232746.033333
Counter: #removed clauses / #clauses {Cache - component caching}
108
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
48
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
60
56920
50
5330
948.666667
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
60
60
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
