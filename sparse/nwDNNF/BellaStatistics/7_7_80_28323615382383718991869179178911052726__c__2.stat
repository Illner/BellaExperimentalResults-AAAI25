Number: formula size {Formula representation}
1
5765242
Number: #variables {Formula representation}
1
823690
Number: #clauses {Formula representation}
1
823746
Timer (reduced): initialize [ns] {Formula representation}
1
562618964
Timer: compute connected components [ns] {Formula representation}
97
1745971326
5630
291484196
17999704.391753
Number: circuit size {Circuit}
1
40642114
Number: #nodes {Circuit}
1
7888376
Number: #edges {Circuit}
1
40642114
Number: #variables {Circuit}
1
823690
Timer: copy subcircuit [ns] {Circuit}
39
4594804657
47189
792740187
117815504.025641
Counter: formula size (copy subcircuit) {Circuit}
39
6257523
330
706272
160449.307692
Counter: #variables (copy subcircuit) {Circuit}
39
1076958
146
117782
27614.307692
Counter: #clauses (copy subcircuit) {Circuit}
39
1077045
112
117823
27616.538462
Timer (reduced): initialize [ns] {Compiler}
1
490364494
Timer (reduced): compile [ns] {Compiler}
1
124583950194
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
0
Number: #decisions {Compiler}
1
48
Counter: ratio of recomputed hypergraph cuts {Compiler}
87
57
0
1
0.655172
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
27
24
0
1
0.888889
Counter: #connected components {Compiler}
97
87
0
1
0.896907
Counter: #monotone residual formulae / #residual formulae {Compiler}
97
10
0
1
0.103093
Counter: monotone residual formula size {Compiler}
10
602
56
70
60.200000
Counter: #pure clauses / #clauses {Compiler}
97
11.119241
0.000000
1.000000
0.114631
Counter: pure residual formula size / residual formula size {Compiler}
97
10.789910
0.000000
1.000000
0.111236
Timer: assign literal [ns] {Compiler}
152
103232907450
740
37852072002
679163864.802632
Timer: unassign literal [ns] {Compiler}
152
315630679
270
56496112
2076517.625000
Timer: get decision variable [ns] {Decision heuristic}
48
76100689
90
16267903
1585431.020833
Counter: #preselected variables {Decision heuristic}
48
3938549
1
823690
82053.104167
Counter: #restricted variables / #preselected variables {Decision heuristic}
24
0.030623
0.000059
0.004516
0.001276
Timer (reduced): initialize [ns] {SAT solver}
1
184531334
Timer (reduced): initial simplification [ns] {SAT solver}
1
910
Timer (reduced): initially implied literals [ns] {SAT solver}
1
570
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
97
904206143
81519
110281795
9321712.814433
Timer: unit propagation [ns] {SAT solver}
97
149379
190
13830
1539.989691
Counter: #implied literals {SAT solver}
97
232
0
7
2.391753
Counter: #implied literals / #variables {SAT solver}
97
0.387674
0.000000
0.034483
0.003997
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
15
39005836
349907
7417109
2600389.066667
Counter: #implicit implied literals / #variables {SAT solver}
15
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
15
0.009174
0.000000
0.009174
0.000612
Timer: compute cut [ns] {Partitioning hypergraph}
1
12314975
12314975
12314975
12314975.000000
Counter: cut size {Partitioning hypergraph}
1
16
16
16
16.000000
Counter: cut size / #variables {Partitioning hypergraph}
1
0.004038
0.004038
0.004038
0.004038
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
3
7409940
16700
7367900
2469980.000000
Counter: #vertices {Partitioning hypergraph}
3
346
0
346
115.333333
Counter: #vertices / #clauses {Partitioning hypergraph}
3
0.087418
0.000000
0.087418
0.029139
Counter: #hyperedges {Partitioning hypergraph}
3
21
0
21
7.000000
Counter: #hyperedges / #variables {Partitioning hypergraph}
3
0.005300
0.000000
0.005300
0.001767
Counter: hypergraph size {Partitioning hypergraph}
3
1050
0
1050
350.000000
Counter: hypergraph size / formula size {Partitioning hypergraph}
3
0.058411
0.000000
0.058411
0.019470
Timer: create equivalence structure [ns] {Partitioning hypergraph}
3
562704
8730
542154
187568.000000
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
87
39
0
1
0.448276
Number: #current entries {Cache - component caching}
1
48
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
87
12661010153
51359
2856876755
145528852.333333
Timer: search cache record structure [ns] {Cache - component caching}
87
12764902
140
1495123
146723.011494
Timer: add cache record structure [ns] {Cache - component caching}
48
9519875
250
1687771
198330.729167
Counter: #empty cache records / #cache records {Cache - component caching}
87
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
87
33041164
176
5765242
379783.494253
Counter: formula size (positive hit) {Cache - component caching}
39
6257523
330
706272
160449.307692
Counter: formula size (negative hit) {Cache - component caching}
48
26783641
176
5765242
557992.520833
Counter: #variables (cache record structure) {Cache - component caching}
87
5038551
88
823690
57914.379310
Counter: #variables (positive hit) {Cache - component caching}
39
1076958
146
117782
27614.307692
Counter: #variables (negative hit) {Cache - component caching}
48
3961593
88
823690
82533.187500
Counter: #clauses (cache record structure) {Cache - component caching}
87
5038586
60
823746
57914.781609
Counter: #clauses (positive hit) {Cache - component caching}
39
1077045
112
117823
27616.538462
Counter: #clauses (negative hit) {Cache - component caching}
48
3961541
60
823746
82532.104167
Counter: #removed clauses / #clauses {Cache - component caching}
87
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
39
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
48
12760
30
1000
265.833333
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
48
48
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
