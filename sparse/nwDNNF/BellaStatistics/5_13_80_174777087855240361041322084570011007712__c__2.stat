Number: formula size {Formula representation}
1
11139765
Number: #variables {Formula representation}
1
1856660
Number: #clauses {Formula representation}
1
1856925
Timer (reduced): initialize [ns] {Formula representation}
1
1140419958
Timer: compute connected components [ns] {Formula representation}
121
7867783568
5270
1317871136
65023004.694215
Number: circuit size {Circuit}
1
20387778
Number: #nodes {Circuit}
1
7887983
Number: #edges {Circuit}
1
20387778
Number: #variables {Circuit}
1
1856660
Timer: copy subcircuit [ns] {Circuit}
48
4274068963
229107
396644177
89043103.395833
Counter: formula size (copy subcircuit) {Circuit}
48
9260940
1209
714805
192936.250000
Counter: #variables (copy subcircuit) {Circuit}
48
1889784
390
142974
39370.500000
Counter: #clauses (copy subcircuit) {Circuit}
48
1895052
430
143173
39480.250000
Timer (reduced): initialize [ns] {Compiler}
1
1933221310
Timer (reduced): compile [ns] {Compiler}
1
371630696870
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
0
Number: #decisions {Compiler}
1
60
Counter: ratio of recomputed hypergraph cuts {Compiler}
108
76
0
1
0.703704
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
43
34
0
1
0.790698
Counter: #connected components {Compiler}
121
108
0
1
0.892562
Counter: #monotone residual formulae / #residual formulae {Compiler}
121
13
0
1
0.107438
Counter: monotone residual formula size {Compiler}
13
676
52
52
52.000000
Counter: #pure clauses / #clauses {Compiler}
121
14.081023
0.000000
1.000000
0.116372
Counter: pure residual formula size / residual formula size {Compiler}
121
13.787879
0.000000
1.000000
0.113949
Timer: assign literal [ns] {Compiler}
185
264055887269
530
95575005038
1427329120.372973
Timer: unassign literal [ns] {Compiler}
185
941002058
260
152674460
5086497.610811
Timer: get decision variable [ns] {Decision heuristic}
60
695620305
60
118975954
11593671.750000
Counter: #preselected variables {Decision heuristic}
60
13926208
1
1856660
232103.466667
Counter: #restricted variables / #preselected variables {Decision heuristic}
34
0.054210
0.000035
0.005969
0.001594
Timer (reduced): initialize [ns] {SAT solver}
1
484108766
Timer (reduced): initial simplification [ns] {SAT solver}
1
1750
Timer (reduced): initially implied literals [ns] {SAT solver}
1
1080
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
121
7283402899
4330
767954327
60193412.388430
Timer: unit propagation [ns] {SAT solver}
121
782163
170
389436
6464.157025
Counter: #implied literals {SAT solver}
121
460
0
13
3.801653
Counter: #implied literals / #variables {SAT solver}
121
0.473670
0.000000
0.037037
0.003915
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
18
21731597
35309
2562341
1207310.944444
Counter: #implicit implied literals / #variables {SAT solver}
18
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
18
0.012195
0.000000
0.012195
0.000678
Timer: compute cut [ns] {Partitioning hypergraph}
2
13074425
5773496
7300929
6537212.500000
Counter: cut size {Partitioning hypergraph}
2
36
18
18
18.000000
Counter: cut size / #variables {Partitioning hypergraph}
2
0.010160
0.004140
0.006020
0.005080
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
9
5820837
12850
3897447
646759.666667
Counter: #vertices {Partitioning hypergraph}
9
421
0
250
46.777778
Counter: #vertices / #clauses {Partitioning hypergraph}
9
0.112550
0.000000
0.056612
0.012506
Counter: #hyperedges {Partitioning hypergraph}
9
55
0
29
6.111111
Counter: #hyperedges / #variables {Partitioning hypergraph}
9
0.015365
0.000000
0.008696
0.001707
Counter: hypergraph size {Partitioning hypergraph}
9
887
0
523
98.555556
Counter: hypergraph size / formula size {Partitioning hypergraph}
9
0.062705
0.000000
0.032483
0.006967
Timer: create equivalence structure [ns] {Partitioning hypergraph}
9
800250
5540
479245
88916.666667
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
108
48
0
1
0.444444
Number: #current entries {Cache - component caching}
1
60
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
108
80600955681
53800
13436223914
746305145.194444
Timer: search cache record structure [ns] {Cache - component caching}
108
43364949
140
5092294
401527.305556
Timer: add cache record structure [ns] {Cache - component caching}
60
35908125
330
4632388
598468.750000
Counter: #empty cache records / #cache records {Cache - component caching}
108
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
108
91780570
164
11139765
849820.092593
Counter: formula size (positive hit) {Cache - component caching}
48
9260940
1209
714805
192936.250000
Counter: formula size (negative hit) {Cache - component caching}
60
82519630
164
11139765
1375327.166667
Counter: #variables (cache record structure) {Cache - component caching}
108
15848628
82
1856660
146746.555556
Counter: #variables (positive hit) {Cache - component caching}
48
1889784
390
142974
39370.500000
Counter: #variables (negative hit) {Cache - component caching}
60
13958844
82
1856660
232647.400000
Counter: #clauses (cache record structure) {Cache - component caching}
108
15859814
56
1856925
146850.129630
Counter: #clauses (positive hit) {Cache - component caching}
48
1895052
430
143173
39480.250000
Counter: #clauses (negative hit) {Cache - component caching}
60
13964762
56
1856925
232746.033333
Counter: #removed clauses / #clauses {Cache - component caching}
108
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
48
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
60
61190
40
5910
1019.833333
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
60
60
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
