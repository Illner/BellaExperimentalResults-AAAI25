Number: formula size {Formula representation}
1
25680
Number: #variables {Formula representation}
1
2610
Number: #clauses {Formula representation}
1
2600
Timer (reduced): initialize [ns] {Formula representation}
1
4814817
Timer: compute connected components [ns] {Formula representation}
21
3588669
440
1595106
170889.000000
Number: circuit size {Circuit}
1
25330
Number: #nodes {Circuit}
1
16735
Number: #edges {Circuit}
1
25330
Number: #variables {Circuit}
1
2610
Timer: copy subcircuit [ns] {Circuit}
9
4435611
6770
2315260
492845.666667
Counter: formula size (copy subcircuit) {Circuit}
9
21156
20
11592
2350.666667
Counter: #variables (copy subcircuit) {Circuit}
9
2862
10
1326
318.000000
Counter: #clauses (copy subcircuit) {Circuit}
9
2784
8
1316
309.333333
Timer (reduced): initialize [ns] {Compiler}
1
6730261
Timer (reduced): compile [ns] {Compiler}
1
37497989
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
0
Number: #decisions {Compiler}
1
10
Counter: ratio of recomputed hypergraph cuts {Compiler}
19
5
0
1
0.263158
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
3
0
0
0
0.000000
Counter: #connected components {Compiler}
21
19
0
1
0.904762
Counter: #monotone residual formulae / #residual formulae {Compiler}
21
2
0
1
0.095238
Counter: monotone residual formula size {Compiler}
2
8
4
4
4.000000
Counter: #pure clauses / #clauses {Compiler}
21
2.952381
0.000000
1.000000
0.140590
Counter: pure residual formula size / residual formula size {Compiler}
21
2.771429
0.000000
1.000000
0.131973
Timer: assign literal [ns] {Compiler}
40
5959107
270
2764975
148977.675000
Timer: unassign literal [ns] {Compiler}
40
325406
200
77719
8135.150000
Timer: get decision variable [ns] {Decision heuristic}
10
2030
50
1040
203.000000
Counter: #preselected variables {Decision heuristic}
10
39
1
8
3.900000
Counter: #restricted variables / #preselected variables {Decision heuristic}
0
0.000000
0.000000
0.000000
0.000000
Timer (reduced): initialize [ns] {SAT solver}
1
1622986
Timer (reduced): initial simplification [ns] {SAT solver}
1
530
Timer (reduced): initially implied literals [ns] {SAT solver}
1
250
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
21
731643
750
230738
34840.142857
Timer: unit propagation [ns] {SAT solver}
21
15680
140
9380
746.666667
Counter: #implied literals {SAT solver}
21
40
0
2
1.904762
Counter: #implied literals / #variables {SAT solver}
21
0.969465
0.000000
0.333333
0.046165
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
5
1902403
4460
1861603
380480.600000
Counter: #implicit implied literals / #variables {SAT solver}
5
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
5
0.337165
0.003831
0.100000
0.067433
Timer: compute cut [ns] {Partitioning hypergraph}
1
699904
699904
699904
699904.000000
Counter: cut size {Partitioning hypergraph}
1
8
8
8
8.000000
Counter: cut size / #variables {Partitioning hypergraph}
1
0.003065
0.003065
0.003065
0.003065
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
3
6570142
2680
6558242
2190047.333333
Counter: #vertices {Partitioning hypergraph}
3
4
0
4
1.333333
Counter: #vertices / #clauses {Partitioning hypergraph}
3
0.001538
0.000000
0.001538
0.000513
Counter: #hyperedges {Partitioning hypergraph}
3
9
0
9
3.000000
Counter: #hyperedges / #variables {Partitioning hypergraph}
3
0.003448
0.000000
0.003448
0.001149
Counter: hypergraph size {Partitioning hypergraph}
3
31
0
31
10.333333
Counter: hypergraph size / formula size {Partitioning hypergraph}
3
0.001207
0.000000
0.001207
0.000402
Timer: create equivalence structure [ns] {Partitioning hypergraph}
3
245598
1310
241208
81866.000000
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
19
9
0
1
0.473684
Number: #current entries {Cache - component caching}
1
10
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
19
11644367
5670
4317192
612861.421053
Timer: search cache record structure [ns] {Cache - component caching}
19
18750
40
9360
986.842105
Timer: add cache record structure [ns] {Cache - component caching}
10
15970
160
6680
1597.000000
Counter: #empty cache records / #cache records {Cache - component caching}
19
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
19
67992
20
25680
3578.526316
Counter: formula size (positive hit) {Cache - component caching}
9
21156
20
11592
2350.666667
Counter: formula size (negative hit) {Cache - component caching}
10
46836
20
25680
4683.600000
Counter: #variables (cache record structure) {Cache - component caching}
19
8334
10
2610
438.631579
Counter: #variables (positive hit) {Cache - component caching}
9
2862
10
1326
318.000000
Counter: #variables (negative hit) {Cache - component caching}
10
5472
10
2610
547.200000
Counter: #clauses (cache record structure) {Cache - component caching}
19
8168
8
2600
429.894737
Counter: #clauses (positive hit) {Cache - component caching}
9
2784
8
1316
309.333333
Counter: #clauses (negative hit) {Cache - component caching}
10
5384
8
2600
538.400000
Counter: #removed clauses / #clauses {Cache - component caching}
19
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
9
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
10
870
30
420
87.000000
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
10
10
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
