Number: formula size {Formula representation}
1
14495305
Number: #variables {Formula representation}
1
2416040
Number: #clauses {Formula representation}
1
2416100
Timer (reduced): initialize [ns] {Formula representation}
1
1943583469
Timer: compute connected components [ns] {Formula representation}
101
12694559675
25460
1569956270
125688709.653465
Number: circuit size {Circuit}
1
25766681
Number: #nodes {Circuit}
1
8260999
Number: #edges {Circuit}
1
25766681
Number: #variables {Circuit}
1
2416040
Timer: copy subcircuit [ns] {Circuit}
40
8722408276
2403969
966427197
218060206.900000
Counter: formula size (copy subcircuit) {Circuit}
40
23149500
3773
1991748
578737.500000
Counter: #variables (copy subcircuit) {Circuit}
40
4370300
1342
366278
109257.500000
Counter: #clauses (copy subcircuit) {Circuit}
40
4368750
1277
366293
109218.750000
Timer (reduced): initialize [ns] {Compiler}
1
3296369084
Timer (reduced): compile [ns] {Compiler}
1
1231170407073
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
0
Number: #decisions {Compiler}
1
50
Counter: ratio of recomputed hypergraph cuts {Compiler}
90
82
0
1
0.911111
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
47
36
0
1
0.765957
Counter: #connected components {Compiler}
101
90
0
1
0.891089
Counter: #monotone residual formulae / #residual formulae {Compiler}
101
11
0
1
0.108911
Counter: monotone residual formula size {Compiler}
11
2420
220
220
220.000000
Counter: #pure clauses / #clauses {Compiler}
101
11.454204
0.000000
1.000000
0.113408
Counter: pure residual formula size / residual formula size {Compiler}
101
11.311615
0.000000
1.000000
0.111996
Timer: assign literal [ns] {Compiler}
155
1051492763449
2360
216047818670
6783824280.316129
Timer: unassign literal [ns] {Compiler}
155
1664902233
610
242720762
10741304.729032
Timer: get decision variable [ns] {Decision heuristic}
50
886284071
330
135646974
17725681.420000
Counter: #preselected variables {Decision heuristic}
50
17638122
1
2416040
352762.440000
Counter: #restricted variables / #preselected variables {Decision heuristic}
36
0.027562
0.000023
0.003166
0.000766
Timer (reduced): initialize [ns] {SAT solver}
1
1010267570
Timer (reduced): initial simplification [ns] {SAT solver}
1
1950
Timer (reduced): initially implied literals [ns] {SAT solver}
1
1180
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
101
11486085424
216460
978903996
113723618.059406
Timer: unit propagation [ns] {SAT solver}
101
572240
370
76390
5665.742574
Counter: #implied literals {SAT solver}
101
335
0
11
3.316832
Counter: #implied literals / #variables {SAT solver}
101
0.098903
0.000000
0.009009
0.000979
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
16
53814902
1040579
10105585
3363431.375000
Counter: #implicit implied literals / #variables {SAT solver}
16
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
16
0.002994
0.000000
0.002994
0.000187
Timer: compute cut [ns] {Partitioning hypergraph}
1
4718858
4718858
4718858
4718858.000000
Counter: cut size {Partitioning hypergraph}
1
10
10
10
10.000000
Counter: cut size / #variables {Partitioning hypergraph}
1
0.002181
0.002181
0.002181
0.002181
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
11
4768428
48900
3154298
433493.454545
Counter: #vertices {Partitioning hypergraph}
11
57
0
57
5.181818
Counter: #vertices / #clauses {Partitioning hypergraph}
11
0.012746
0.000000
0.012746
0.001159
Counter: #hyperedges {Partitioning hypergraph}
11
16
0
16
1.454545
Counter: #hyperedges / #variables {Partitioning hypergraph}
11
0.003489
0.000000
0.003489
0.000317
Counter: hypergraph size {Partitioning hypergraph}
11
126
0
126
11.454545
Counter: hypergraph size / formula size {Partitioning hypergraph}
11
0.007423
0.000000
0.007423
0.000675
Timer: create equivalence structure [ns] {Partitioning hypergraph}
11
1606419
24860
676040
146038.090909
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
90
40
0
1
0.444444
Number: #current entries {Cache - component caching}
1
50
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
90
134126810131
263390
18575237655
1490297890.344444
Timer: search cache record structure [ns] {Cache - component caching}
90
101562381
190
6683247
1128470.900000
Timer: add cache record structure [ns] {Cache - component caching}
50
140658042
1910
25021599
2813160.840000
Counter: #empty cache records / #cache records {Cache - component caching}
90
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
90
127110925
668
14495305
1412343.611111
Counter: formula size (positive hit) {Cache - component caching}
40
23149500
3773
1991748
578737.500000
Counter: formula size (negative hit) {Cache - component caching}
50
103961425
668
14495305
2079228.500000
Counter: #variables (cache record structure) {Cache - component caching}
90
22030350
334
2416040
244781.666667
Counter: #variables (positive hit) {Cache - component caching}
40
4370300
1342
366278
109257.500000
Counter: #variables (negative hit) {Cache - component caching}
50
17660050
334
2416040
353201.000000
Counter: #clauses (cache record structure) {Cache - component caching}
90
22026425
224
2416100
244738.055556
Counter: #clauses (positive hit) {Cache - component caching}
40
4368750
1277
366293
109218.750000
Counter: #clauses (negative hit) {Cache - component caching}
50
17657675
224
2416100
353153.500000
Counter: #removed clauses / #clauses {Cache - component caching}
90
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
40
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
50
40640
40
1660
812.800000
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
50
50
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
