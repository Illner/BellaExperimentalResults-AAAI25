Number: formula size {Formula representation}
1
19326835
Number: #variables {Formula representation}
1
3221350
Number: #clauses {Formula representation}
1
3221355
Timer (reduced): initialize [ns] {Formula representation}
1
2450925026
Timer: compute connected components [ns] {Formula representation}
101
19141460742
30419
1988351347
189519413.287129
Number: circuit size {Circuit}
1
33013976
Number: #nodes {Circuit}
1
10676874
Number: #edges {Circuit}
1
33013976
Number: #variables {Circuit}
1
3221350
Timer: copy subcircuit [ns] {Circuit}
40
13212955970
4036643
1275779742
330323899.250000
Counter: formula size (copy subcircuit) {Circuit}
40
47152270
4862
4143975
1178806.750000
Counter: #variables (copy subcircuit) {Circuit}
40
8544360
1738
732358
213609.000000
Counter: #clauses (copy subcircuit) {Circuit}
40
8540830
1640
732318
213520.750000
Timer (reduced): initialize [ns] {Compiler}
1
4274596441
Timer (reduced): compile [ns] {Compiler}
1
2399231733087
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
0
Number: #decisions {Compiler}
1
50
Counter: ratio of recomputed hypergraph cuts {Compiler}
90
86
0
1
0.955556
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
49
38
0
1
0.775510
Counter: #connected components {Compiler}
101
90
0
1
0.891089
Counter: #monotone residual formulae / #residual formulae {Compiler}
101
11
0
1
0.108911
Counter: monotone residual formula size {Compiler}
11
3146
286
286
286.000000
Counter: #pure clauses / #clauses {Compiler}
101
11.493302
0.000000
1.000000
0.113795
Counter: pure residual formula size / residual formula size {Compiler}
101
11.337719
0.000000
1.000000
0.112255
Timer: assign literal [ns] {Compiler}
155
2152853408507
3050
395472333981
13889376829.077419
Timer: unassign literal [ns] {Compiler}
155
3553008831
650
478761732
22922637.619355
Timer: get decision variable [ns] {Decision heuristic}
50
1440264908
110
245711442
28805298.160000
Counter: #preselected variables {Decision heuristic}
50
26245742
1
3221350
524914.840000
Counter: #restricted variables / #preselected variables {Decision heuristic}
38
0.022958
0.000017
0.002779
0.000604
Timer (reduced): initialize [ns] {SAT solver}
1
1089999260
Timer (reduced): initial simplification [ns] {SAT solver}
1
1390
Timer (reduced): initially implied literals [ns] {SAT solver}
1
990
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
101
16552855495
290416
1291807650
163889658.366337
Timer: unit propagation [ns] {SAT solver}
101
1358366
390
347885
13449.168317
Counter: #implied literals {SAT solver}
101
335
0
11
3.316832
Counter: #implied literals / #variables {SAT solver}
101
0.075058
0.000000
0.006944
0.000743
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
18
93794623
1287592
15198526
5210812.388889
Counter: #implicit implied literals / #variables {SAT solver}
18
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
18
0.002309
0.000000
0.002309
0.000128
Timer: compute cut [ns] {Partitioning hypergraph}
1
3680008
3680008
3680008
3680008.000000
Counter: cut size {Partitioning hypergraph}
1
8
8
8
8.000000
Counter: cut size / #variables {Partitioning hypergraph}
1
0.001891
0.001891
0.001891
0.001891
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
11
4733015
60600
2745632
430274.090909
Counter: #vertices {Partitioning hypergraph}
11
35
0
35
3.181818
Counter: #vertices / #clauses {Partitioning hypergraph}
11
0.008629
0.000000
0.008629
0.000784
Counter: #hyperedges {Partitioning hypergraph}
11
14
0
14
1.272727
Counter: #hyperedges / #variables {Partitioning hypergraph}
11
0.003310
0.000000
0.003310
0.000301
Counter: hypergraph size {Partitioning hypergraph}
11
80
0
80
7.272727
Counter: hypergraph size / formula size {Partitioning hypergraph}
11
0.005205
0.000000
0.005205
0.000473
Timer: create equivalence structure [ns] {Partitioning hypergraph}
11
1917493
31269
850858
174317.545455
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
90
40
0
1
0.444444
Number: #current entries {Cache - component caching}
1
50
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
90
177528126126
320986
22159424856
1972534734.733333
Timer: search cache record structure [ns] {Cache - component caching}
90
135950041
230
7603542
1510556.011111
Timer: add cache record structure [ns] {Cache - component caching}
50
187857718
2290
26733771
3757154.360000
Counter: #empty cache records / #cache records {Cache - component caching}
90
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
90
202052715
866
19326835
2245030.166667
Counter: formula size (positive hit) {Cache - component caching}
40
47152270
4862
4143975
1178806.750000
Counter: formula size (negative hit) {Cache - component caching}
50
154900445
866
19326835
3098008.900000
Counter: #variables (cache record structure) {Cache - component caching}
90
34808170
433
3221350
386757.444444
Counter: #variables (positive hit) {Cache - component caching}
40
8544360
1738
732358
213609.000000
Counter: #variables (negative hit) {Cache - component caching}
50
26263810
433
3221350
525276.200000
Counter: #clauses (cache record structure) {Cache - component caching}
90
34799735
290
3221355
386663.722222
Counter: #clauses (positive hit) {Cache - component caching}
40
8540830
1640
732318
213520.750000
Counter: #clauses (negative hit) {Cache - component caching}
50
26258905
290
3221355
525178.100000
Counter: #removed clauses / #clauses {Cache - component caching}
90
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
40
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
50
71910
50
5370
1438.200000
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
50
50
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
