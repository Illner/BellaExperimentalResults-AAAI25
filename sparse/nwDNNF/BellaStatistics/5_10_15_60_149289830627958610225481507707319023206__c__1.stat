Number: formula size {Formula representation}
1
2532525
Number: #variables {Formula representation}
1
506550
Number: #clauses {Formula representation}
1
506855
Timer (reduced): initialize [ns] {Formula representation}
1
354218020
Timer: compute connected components [ns] {Formula representation}
141
3838464347
12790
317720690
27223151.397163
Number: circuit size {Circuit}
1
63223135
Number: #nodes {Circuit}
1
6238079
Number: #edges {Circuit}
1
63223135
Number: #variables {Circuit}
1
506550
Timer: copy subcircuit [ns] {Circuit}
56
8162824233
790716
649443563
145764718.446429
Counter: formula size (copy subcircuit) {Circuit}
56
10109400
2955
615270
180525.000000
Counter: #variables (copy subcircuit) {Circuit}
56
2187780
990
128520
39067.500000
Counter: #clauses (copy subcircuit) {Circuit}
56
2193590
1021
128734
39171.250000
Timer (reduced): initialize [ns] {Compiler}
1
626219911
Timer (reduced): compile [ns] {Compiler}
1
73108668123
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
0
Number: #decisions {Compiler}
1
70
Counter: ratio of recomputed hypergraph cuts {Compiler}
126
102
0
1
0.809524
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
59
44
0
1
0.745763
Counter: #connected components {Compiler}
141
126
0
1
0.893617
Counter: #monotone residual formulae / #residual formulae {Compiler}
141
15
0
1
0.106383
Counter: monotone residual formula size {Compiler}
15
1800
120
120
120.000000
Counter: #pure clauses / #clauses {Compiler}
141
16.067881
0.000000
1.000000
0.113957
Counter: pure residual formula size / residual formula size {Compiler}
141
15.747786
0.000000
1.000000
0.111686
Timer: assign literal [ns] {Compiler}
215
23458355755
1480
3298229279
109108631.418605
Timer: unassign literal [ns] {Compiler}
215
413253763
470
36832319
1922110.525581
Timer: get decision variable [ns] {Decision heuristic}
70
219727520
60
23800150
3138964.571429
Counter: #preselected variables {Decision heuristic}
70
5943722
1
506550
84910.314286
Counter: #restricted variables / #preselected variables {Decision heuristic}
44
0.067875
0.000148
0.005722
0.001543
Timer (reduced): initialize [ns] {SAT solver}
1
237929246
Timer (reduced): initial simplification [ns] {SAT solver}
1
1140
Timer (reduced): initially implied literals [ns] {SAT solver}
1
800
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
141
2309083499
32500
131509039
16376478.716312
Timer: unit propagation [ns] {SAT solver}
141
439938
300
37470
3120.127660
Counter: #implied literals {SAT solver}
141
605
0
15
4.290780
Counter: #implied literals / #variables {SAT solver}
141
0.258122
0.000000
0.016393
0.001831
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
16
13951553
170449
5853418
871972.062500
Counter: #implicit implied literals / #variables {SAT solver}
16
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
16
0.005435
0.000000
0.005435
0.000340
Timer: compute cut [ns] {Partitioning hypergraph}
1
6966602
6966602
6966602
6966602.000000
Counter: cut size {Partitioning hypergraph}
1
19
19
19
19.000000
Counter: cut size / #variables {Partitioning hypergraph}
1
0.003987
0.003987
0.003987
0.003987
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
15
4850982
30859
3249182
323398.800000
Counter: #vertices {Partitioning hypergraph}
15
197
0
197
13.133333
Counter: #vertices / #clauses {Partitioning hypergraph}
15
0.041145
0.000000
0.041145
0.002743
Counter: #hyperedges {Partitioning hypergraph}
15
28
0
28
1.866667
Counter: #hyperedges / #variables {Partitioning hypergraph}
15
0.005875
0.000000
0.005875
0.000392
Counter: hypergraph size {Partitioning hypergraph}
15
418
0
418
27.866667
Counter: hypergraph size / formula size {Partitioning hypergraph}
15
0.024444
0.000000
0.024444
0.001630
Timer: create equivalence structure [ns] {Partitioning hypergraph}
15
1446602
14500
795516
96440.133333
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
126
56
0
1
0.444444
Number: #current entries {Cache - component caching}
1
70
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
126
32183157824
142090
2629283292
255421887.492063
Timer: search cache record structure [ns] {Cache - component caching}
126
23060051
220
1787770
183016.277778
Timer: add cache record structure [ns] {Cache - component caching}
70
38474535
1420
4305697
549636.214286
Counter: #empty cache records / #cache records {Cache - component caching}
126
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
126
39447485
368
2532525
313075.277778
Counter: formula size (positive hit) {Cache - component caching}
56
10109400
2955
615270
180525.000000
Counter: formula size (negative hit) {Cache - component caching}
70
29338085
368
2532525
419115.500000
Counter: #variables (cache record structure) {Cache - component caching}
126
8176700
184
506550
64894.444444
Counter: #variables (positive hit) {Cache - component caching}
56
2187780
990
128520
39067.500000
Counter: #variables (negative hit) {Cache - component caching}
70
5988920
184
506550
85556.000000
Counter: #clauses (cache record structure) {Cache - component caching}
126
8188495
124
506855
64988.055556
Counter: #clauses (positive hit) {Cache - component caching}
56
2193590
1021
128734
39171.250000
Counter: #clauses (negative hit) {Cache - component caching}
70
5994905
124
506855
85641.500000
Counter: #removed clauses / #clauses {Cache - component caching}
126
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
56
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
70
44720
50
5350
638.857143
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
70
70
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
