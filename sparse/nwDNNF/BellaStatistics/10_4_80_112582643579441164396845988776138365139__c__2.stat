Number: formula size {Formula representation}
1
26214640
Number: #variables {Formula representation}
1
2621560
Number: #clauses {Formula representation}
1
2621550
Timer (reduced): initialize [ns] {Formula representation}
1
2243572176
Timer: compute connected components [ns] {Formula representation}
61
5311596689
4660
1098229886
87075355.557377
Number: circuit size {Circuit}
1
47076681
Number: #nodes {Circuit}
1
15182743
Number: #edges {Circuit}
1
47076681
Number: #variables {Circuit}
1
2621560
Timer: copy subcircuit [ns] {Circuit}
27
9209615380
56770
2433590991
341096865.925926
Counter: formula size (copy subcircuit) {Circuit}
27
32871048
312
7930072
1217446.222222
Counter: #variables (copy subcircuit) {Circuit}
27
3674580
128
852080
136095.555556
Counter: #clauses (copy subcircuit) {Circuit}
27
3673965
107
852067
136072.777778
Timer (reduced): initialize [ns] {Compiler}
1
1866189721
Timer (reduced): compile [ns] {Compiler}
1
3830975852468
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
0
Number: #decisions {Compiler}
1
30
Counter: ratio of recomputed hypergraph cuts {Compiler}
57
35
0
1
0.614035
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
19
17
0
1
0.894737
Counter: #connected components {Compiler}
61
57
0
1
0.934426
Counter: #monotone residual formulae / #residual formulae {Compiler}
61
4
0
1
0.065574
Counter: monotone residual formula size {Compiler}
4
192
48
48
48.000000
Counter: #pure clauses / #clauses {Compiler}
61
4.454317
0.000000
1.000000
0.073022
Counter: pure residual formula size / residual formula size {Compiler}
61
4.314491
0.000000
1.000000
0.070729
Timer: assign literal [ns] {Compiler}
100
3763263639614
840
1319655807670
37632636396.140000
Timer: unassign literal [ns] {Compiler}
100
565856422
300
118388091
5658564.220000
Timer: get decision variable [ns] {Decision heuristic}
30
247173196
60
75126447
8239106.533333
Counter: #preselected variables {Decision heuristic}
30
8905853
1
2621560
296861.766667
Counter: #restricted variables / #preselected variables {Decision heuristic}
17
0.013253
0.000015
0.003748
0.000780
Timer (reduced): initialize [ns] {SAT solver}
1
668977232
Timer (reduced): initial simplification [ns] {SAT solver}
1
1090
Timer (reduced): initially implied literals [ns] {SAT solver}
1
740
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
61
2831639523
9360
517259288
46420320.049180
Timer: unit propagation [ns] {SAT solver}
61
242670
180
30950
3978.196721
Counter: #implied literals {SAT solver}
61
110
0
4
1.803279
Counter: #implied literals / #variables {SAT solver}
61
0.203478
0.000000
0.040000
0.003336
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
3
10946639
2628297
4718355
3648879.666667
Counter: #implicit implied literals / #variables {SAT solver}
3
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
3
0.000273
0.000000
0.000273
0.000091
Timer: compute cut [ns] {Partitioning hypergraph}
2
19049379
9200350
9849029
9524689.500000
Counter: cut size {Partitioning hypergraph}
2
27
13
14
13.500000
Counter: cut size / #variables {Partitioning hypergraph}
2
0.009608
0.003825
0.005783
0.004804
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
2
25220113
5088825
20131288
12610056.500000
Counter: #vertices {Partitioning hypergraph}
2
520
260
260
260.000000
Counter: #vertices / #clauses {Partitioning hypergraph}
2
0.188703
0.071586
0.117117
0.094352
Counter: #hyperedges {Partitioning hypergraph}
2
33
16
17
16.500000
Counter: #hyperedges / #variables {Partitioning hypergraph}
2
0.011762
0.004645
0.007117
0.005881
Counter: hypergraph size {Partitioning hypergraph}
2
1824
784
1040
912.000000
Counter: hypergraph size / formula size {Partitioning hypergraph}
2
0.122796
0.050525
0.072271
0.061398
Timer: create equivalence structure [ns] {Partitioning hypergraph}
2
546769
246550
300219
273384.500000
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
57
27
0
1
0.473684
Number: #current entries {Cache - component caching}
1
30
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
57
46030800250
52080
11719666354
807557899.122807
Timer: search cache record structure [ns] {Cache - component caching}
57
51667273
150
8853640
906443.385965
Timer: add cache record structure [ns] {Cache - component caching}
30
26714598
190
6977393
890486.600000
Counter: #empty cache records / #cache records {Cache - component caching}
57
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
57
119045246
152
26214640
2088513.087719
Counter: formula size (positive hit) {Cache - component caching}
27
32871048
312
7930072
1217446.222222
Counter: formula size (negative hit) {Cache - component caching}
30
86174198
152
26214640
2872473.266667
Counter: #variables (cache record structure) {Cache - component caching}
57
12592380
76
2621560
220918.947368
Counter: #variables (positive hit) {Cache - component caching}
27
3674580
128
852080
136095.555556
Counter: #variables (negative hit) {Cache - component caching}
30
8917800
76
2621560
297260.000000
Counter: #clauses (cache record structure) {Cache - component caching}
57
12591070
52
2621550
220895.964912
Counter: #clauses (positive hit) {Cache - component caching}
27
3673965
107
852067
136072.777778
Counter: #clauses (negative hit) {Cache - component caching}
30
8917105
52
2621550
297236.833333
Counter: #removed clauses / #clauses {Cache - component caching}
57
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
27
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
30
9520
30
1230
317.333333
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
30
30
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
