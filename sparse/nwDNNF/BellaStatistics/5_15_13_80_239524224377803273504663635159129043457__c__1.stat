Number: formula size {Formula representation}
1
33417345
Number: #variables {Formula representation}
1
5569720
Number: #clauses {Formula representation}
1
5569855
Timer (reduced): initialize [ns] {Formula representation}
1
4333113704
Timer: compute connected components [ns] {Formula representation}
121
29466931825
27250
3429078866
243528362.190083
Number: circuit size {Circuit}
1
67170696
Number: #nodes {Circuit}
1
19027033
Number: #edges {Circuit}
1
67170696
Number: #variables {Circuit}
1
5569720
Timer: copy subcircuit [ns] {Circuit}
48
17762966507
3373110
1732728960
370061802.229167
Counter: formula size (copy subcircuit) {Circuit}
48
32883084
5265
2142855
685064.250000
Counter: #variables (copy subcircuit) {Circuit}
48
6693960
1846
428714
139457.500000
Counter: #clauses (copy subcircuit) {Circuit}
48
6693300
1782
428783
139443.750000
Timer (reduced): initialize [ns] {Compiler}
1
6815138542
Timer (reduced): compile [ns] {Compiler}
1
3896248176612
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
0
Number: #decisions {Compiler}
1
60
Counter: ratio of recomputed hypergraph cuts {Compiler}
108
104
0
1
0.962963
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
59
46
0
1
0.779661
Counter: #connected components {Compiler}
121
108
0
1
0.892562
Counter: #monotone residual formulae / #residual formulae {Compiler}
121
13
0
1
0.107438
Counter: monotone residual formula size {Compiler}
13
3380
260
260
260.000000
Counter: #pure clauses / #clauses {Compiler}
121
13.457499
0.000000
1.000000
0.111219
Counter: pure residual formula size / residual formula size {Compiler}
121
13.313253
0.000000
1.000000
0.110027
Timer: assign literal [ns] {Compiler}
185
3455930597755
2010
830722982363
18680705933.810811
Timer: unassign literal [ns] {Compiler}
185
6239986634
710
732987153
33729657.481081
Timer: get decision variable [ns] {Decision heuristic}
60
2157131009
110
364915500
35952183.483333
Counter: #preselected variables {Decision heuristic}
60
42878807
1
5569720
714646.783333
Counter: #restricted variables / #preselected variables {Decision heuristic}
46
0.032229
0.000012
0.003256
0.000701
Timer (reduced): initialize [ns] {SAT solver}
1
1913108016
Timer (reduced): initial simplification [ns] {SAT solver}
1
1320
Timer (reduced): initially implied literals [ns] {SAT solver}
1
810
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
121
30838009989
73430
2198686783
254859586.685950
Timer: unit propagation [ns] {SAT solver}
121
1078896
330
127950
8916.495868
Counter: #implied literals {SAT solver}
121
460
0
13
3.801653
Counter: #implied literals / #variables {SAT solver}
121
0.098020
0.000000
0.007634
0.000810
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
22
38094277
451208
6681708
1731558.045455
Counter: #implicit implied literals / #variables {SAT solver}
22
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
22
0.002538
0.000000
0.002538
0.000115
Timer: compute cut [ns] {Partitioning hypergraph}
1
3794858
3794858
3794858
3794858.000000
Counter: cut size {Partitioning hypergraph}
1
9
9
9
9.000000
Counter: cut size / #variables {Partitioning hypergraph}
1
0.002174
0.002174
0.002174
0.002174
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
13
4285923
51820
2047443
329686.384615
Counter: #vertices {Partitioning hypergraph}
13
41
0
41
3.153846
Counter: #vertices / #clauses {Partitioning hypergraph}
13
0.010219
0.000000
0.010219
0.000786
Counter: #hyperedges {Partitioning hypergraph}
13
16
0
16
1.230769
Counter: #hyperedges / #variables {Partitioning hypergraph}
13
0.003865
0.000000
0.003865
0.000297
Counter: hypergraph size {Partitioning hypergraph}
13
94
0
94
7.230769
Counter: hypergraph size / formula size {Partitioning hypergraph}
13
0.006270
0.000000
0.006270
0.000482
Timer: create equivalence structure [ns] {Partitioning hypergraph}
13
1486158
23340
442779
114319.846154
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
108
48
0
1
0.444444
Number: #current entries {Cache - component caching}
1
60
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
108
330080578990
315939
43366517166
3056301657.314815
Timer: search cache record structure [ns] {Cache - component caching}
108
163448387
180
11490123
1513410.990741
Timer: add cache record structure [ns] {Cache - component caching}
60
374184410
1550
52971110
6236406.833333
Counter: #empty cache records / #cache records {Cache - component caching}
108
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
108
285532258
788
33417345
2643817.203704
Counter: formula size (positive hit) {Cache - component caching}
48
32883084
5265
2142855
685064.250000
Counter: formula size (negative hit) {Cache - component caching}
60
252649174
788
33417345
4210819.566667
Counter: #variables (cache record structure) {Cache - component caching}
108
49593300
394
5569720
459197.222222
Counter: #variables (positive hit) {Cache - component caching}
48
6693960
1846
428714
139457.500000
Counter: #variables (negative hit) {Cache - component caching}
60
42899340
394
5569720
714989.000000
Counter: #clauses (cache record structure) {Cache - component caching}
108
49591070
264
5569855
459176.574074
Counter: #clauses (positive hit) {Cache - component caching}
48
6693300
1782
428783
139443.750000
Counter: #clauses (negative hit) {Cache - component caching}
60
42897770
264
5569855
714962.833333
Counter: #removed clauses / #clauses {Cache - component caching}
108
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
48
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
60
45830
50
1460
763.833333
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
60
60
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
