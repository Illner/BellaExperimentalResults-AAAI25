Number: formula size {Formula representation}
1
3932560
Number: #variables {Formula representation}
1
655600
Number: #clauses {Formula representation}
1
655545
Timer (reduced): initialize [ns] {Formula representation}
1
374351653
Timer: compute connected components [ns] {Formula representation}
85
1721986523
20550
231382330
20258664.976471
Number: circuit size {Circuit}
1
5800727
Number: #nodes {Circuit}
1
2184815
Number: #edges {Circuit}
1
5800727
Number: #variables {Circuit}
1
655600
Timer: copy subcircuit [ns] {Circuit}
33
1143408084
117969
160808182
34648729.818182
Counter: formula size (copy subcircuit) {Circuit}
33
6432520
680
762176
194924.848485
Counter: #variables (copy subcircuit) {Circuit}
33
1221140
340
139488
37004.242424
Counter: #clauses (copy subcircuit) {Circuit}
33
1217824
228
139412
36903.757576
Timer (reduced): initialize [ns] {Compiler}
1
402851188
Timer (reduced): compile [ns] {Compiler}
1
97551750795
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
0
Number: #decisions {Compiler}
1
42
Counter: ratio of recomputed hypergraph cuts {Compiler}
75
60
0
1
0.800000
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
32
22
0
1
0.687500
Counter: #connected components {Compiler}
85
75
0
1
0.882353
Counter: #monotone residual formulae / #residual formulae {Compiler}
85
10
0
1
0.117647
Counter: monotone residual formula size {Compiler}
10
2272
224
240
227.200000
Counter: #pure clauses / #clauses {Compiler}
85
11.486474
0.000000
1.000000
0.135135
Counter: pure residual formula size / residual formula size {Compiler}
85
11.042599
0.000000
1.000000
0.129913
Timer: assign literal [ns] {Compiler}
132
78592051999
1400
16780745276
595394333.325758
Timer: unassign literal [ns] {Compiler}
132
161814592
500
25320791
1225868.121212
Timer: get decision variable [ns] {Decision heuristic}
42
81278042
90
16966381
1935191.476190
Counter: #preselected variables {Decision heuristic}
42
3819529
1
655600
90941.166667
Counter: #restricted variables / #preselected variables {Decision heuristic}
22
0.014894
0.000061
0.002907
0.000677
Timer (reduced): initialize [ns] {SAT solver}
1
147856951
Timer (reduced): initial simplification [ns] {SAT solver}
1
1260
Timer (reduced): initially implied literals [ns] {SAT solver}
1
500
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
85
942974792
16060
100360031
11093821.082353
Timer: unit propagation [ns] {SAT solver}
85
131920
230
15720
1552.000000
Counter: #implied literals {SAT solver}
85
222
0
8
2.611765
Counter: #implied literals / #variables {SAT solver}
85
0.116659
0.000000
0.008850
0.001372
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
17
7954989
141409
2977043
467940.529412
Counter: #implicit implied literals / #variables {SAT solver}
17
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
17
0.028472
0.000000
0.003165
0.001675
Timer: compute cut [ns] {Partitioning hypergraph}
1
3784911
3784911
3784911
3784911.000000
Counter: cut size {Partitioning hypergraph}
1
11
11
11
11.000000
Counter: cut size / #variables {Partitioning hypergraph}
1
0.002255
0.002255
0.002255
0.002255
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
10
3335262
43170
2416345
333526.200000
Counter: #vertices {Partitioning hypergraph}
10
58
0
58
5.800000
Counter: #vertices / #clauses {Partitioning hypergraph}
10
0.012200
0.000000
0.012200
0.001220
Counter: #hyperedges {Partitioning hypergraph}
10
15
0
15
1.500000
Counter: #hyperedges / #variables {Partitioning hypergraph}
10
0.003075
0.000000
0.003075
0.000308
Counter: hypergraph size {Partitioning hypergraph}
10
127
0
127
12.700000
Counter: hypergraph size / formula size {Partitioning hypergraph}
10
0.006963
0.000000
0.006963
0.000696
Timer: create equivalence structure [ns] {Partitioning hypergraph}
10
851029
19400
434509
85102.900000
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
75
33
0
1
0.440000
Number: #current entries {Cache - component caching}
1
42
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
75
13845452865
224730
2389143856
184606038.200000
Timer: search cache record structure [ns] {Cache - component caching}
75
9911165
140
918168
132148.866667
Timer: add cache record structure [ns] {Cache - component caching}
42
7908556
340
1247908
188298.952381
Counter: #empty cache records / #cache records {Cache - component caching}
75
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
75
28898830
680
3932560
385317.733333
Counter: formula size (positive hit) {Cache - component caching}
33
6432520
680
762176
194924.848485
Counter: formula size (negative hit) {Cache - component caching}
42
22466310
680
3932560
534912.142857
Counter: #variables (cache record structure) {Cache - component caching}
75
5072164
340
655600
67628.853333
Counter: #variables (positive hit) {Cache - component caching}
33
1221140
340
139488
37004.242424
Counter: #variables (negative hit) {Cache - component caching}
42
3851024
340
655600
91691.047619
Counter: #clauses (cache record structure) {Cache - component caching}
75
5064289
228
655545
67523.853333
Counter: #clauses (positive hit) {Cache - component caching}
33
1217824
228
139412
36903.757576
Counter: #clauses (negative hit) {Cache - component caching}
42
3846465
228
655545
91582.500000
Counter: #removed clauses / #clauses {Cache - component caching}
75
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
33
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
42
13010
40
830
309.761905
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
42
42
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
