Number: formula size {Formula representation}
1
25700
Number: #variables {Formula representation}
1
2610
Number: #clauses {Formula representation}
1
2610
Timer (reduced): initialize [ns] {Formula representation}
1
3241604
Timer: compute connected components [ns] {Formula representation}
19
878109
760
323359
46216.263158
Number: circuit size {Circuit}
1
35314
Number: #nodes {Circuit}
1
22111
Number: #edges {Circuit}
1
35314
Number: #variables {Circuit}
1
2610
Timer: copy subcircuit [ns] {Circuit}
15
6014607
2350
3008984
400973.800000
Counter: formula size (copy subcircuit) {Circuit}
15
21316
8
11612
1421.066667
Counter: #variables (copy subcircuit) {Circuit}
15
2882
4
1326
192.133333
Counter: #clauses (copy subcircuit) {Circuit}
15
2882
4
1326
192.133333
Timer (reduced): initialize [ns] {Compiler}
1
6206318
Timer (reduced): compile [ns] {Compiler}
1
237041366
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
2
Number: #splits {Compiler}
1
10
Number: #decisions {Compiler}
1
10
Counter: ratio of recomputed hypergraph cuts {Compiler}
25
11
0
1
0.440000
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
3
1
0
1
0.333333
Counter: #connected components {Compiler}
19
25
1
3
1.315789
Counter: #monotone residual formulae / #residual formulae {Compiler}
19
0
0
0
0.000000
Counter: monotone residual formula size {Compiler}
0
0
0
0
0.000000
Counter: #pure clauses / #clauses {Compiler}
19
0.000000
0.000000
0.000000
0.000000
Counter: pure residual formula size / residual formula size {Compiler}
19
0.000000
0.000000
0.000000
0.000000
Timer: assign literal [ns] {Compiler}
40
5273750
260
2211336
131843.750000
Timer: unassign literal [ns] {Compiler}
40
378270
240
83360
9456.750000
Timer: get decision variable [ns] {Decision heuristic}
10
4950
60
2300
495.000000
Counter: #preselected variables {Decision heuristic}
10
41
1
8
4.100000
Counter: #restricted variables / #preselected variables {Decision heuristic}
0
0.000000
0.000000
0.000000
0.000000
Timer (reduced): initialize [ns] {SAT solver}
1
1403107
Timer (reduced): initial simplification [ns] {SAT solver}
1
690
Timer (reduced): initially implied literals [ns] {SAT solver}
1
320
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
21
1817056
500
899029
86526.476190
Timer: unit propagation [ns] {SAT solver}
21
10470
120
4170
498.571429
Counter: #implied literals {SAT solver}
21
40
0
2
1.904762
Counter: #implied literals / #variables {SAT solver}
21
2.252787
0.000000
1.000000
0.107276
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
5
1545547
7790
1502657
309109.400000
Counter: #implicit implied literals / #variables {SAT solver}
5
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
5
0.755747
0.005747
0.187500
0.151149
Timer: compute cut [ns] {Partitioning hypergraph}
2
195169915
834049
194335866
97584957.500000
Counter: cut size {Partitioning hypergraph}
2
9
1
8
4.500000
Counter: cut size / #variables {Partitioning hypergraph}
2
0.065565
0.003065
0.062500
0.032783
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
2
14520332
17429
14502903
7260166.000000
Counter: #vertices {Partitioning hypergraph}
2
2590
10
2580
1295.000000
Counter: #vertices / #clauses {Partitioning hypergraph}
2
1.613506
0.625000
0.988506
0.806753
Counter: #hyperedges {Partitioning hypergraph}
2
18
3
15
9.000000
Counter: #hyperedges / #variables {Partitioning hypergraph}
2
0.193247
0.005747
0.187500
0.096624
Counter: hypergraph size {Partitioning hypergraph}
2
23078
18
23060
11539.000000
Counter: hypergraph size / formula size {Partitioning hypergraph}
2
1.347276
0.450000
0.897276
0.673638
Timer: create equivalence structure [ns] {Partitioning hypergraph}
2
783838
4020
779818
391919.000000
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
25
15
0
1
0.600000
Number: #current entries {Cache - component caching}
1
10
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
25
10040643
1710
3666514
401625.720000
Timer: search cache record structure [ns] {Cache - component caching}
25
24140
70
9920
965.600000
Timer: add cache record structure [ns] {Cache - component caching}
10
26600
280
12560
2660.000000
Counter: #empty cache records / #cache records {Cache - component caching}
25
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
25
68220
8
25700
2728.800000
Counter: formula size (positive hit) {Cache - component caching}
15
21316
8
11612
1421.066667
Counter: formula size (negative hit) {Cache - component caching}
10
46904
8
25700
4690.400000
Counter: #variables (cache record structure) {Cache - component caching}
25
8326
4
2610
333.040000
Counter: #variables (positive hit) {Cache - component caching}
15
2882
4
1326
192.133333
Counter: #variables (negative hit) {Cache - component caching}
10
5444
4
2610
544.400000
Counter: #clauses (cache record structure) {Cache - component caching}
25
8326
4
2610
333.040000
Counter: #clauses (positive hit) {Cache - component caching}
15
2882
4
1326
192.133333
Counter: #clauses (negative hit) {Cache - component caching}
10
5444
4
2610
544.400000
Counter: #removed clauses / #clauses {Cache - component caching}
25
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
15
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
10
1240
30
590
124.000000
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
10
10
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
