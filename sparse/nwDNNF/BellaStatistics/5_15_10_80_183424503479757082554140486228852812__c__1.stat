Number: formula size {Formula representation}
1
9000600
Number: #variables {Formula representation}
1
1500250
Number: #clauses {Formula representation}
1
1500280
Timer (reduced): initialize [ns] {Formula representation}
1
814929764
Timer: compute connected components [ns] {Formula representation}
91
5209731242
16229
639029954
57249793.868132
Number: circuit size {Circuit}
1
14054430
Number: #nodes {Circuit}
1
5132719
Number: #edges {Circuit}
1
14054430
Number: #variables {Circuit}
1
1500250
Timer: copy subcircuit [ns] {Circuit}
36
2981515154
645994
330634589
82819865.388889
Counter: formula size (copy subcircuit) {Circuit}
36
13757400
2820
1300480
382150.000000
Counter: #variables (copy subcircuit) {Circuit}
36
2614860
1010
240230
72635.000000
Counter: #clauses (copy subcircuit) {Circuit}
36
2613240
956
240224
72590.000000
Timer (reduced): initialize [ns] {Compiler}
1
1070034538
Timer (reduced): compile [ns] {Compiler}
1
322764429606
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
0
Number: #decisions {Compiler}
1
45
Counter: ratio of recomputed hypergraph cuts {Compiler}
81
71
0
1
0.876543
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
41
31
0
1
0.756098
Counter: #connected components {Compiler}
91
81
0
1
0.890110
Counter: #monotone residual formulae / #residual formulae {Compiler}
91
10
0
1
0.109890
Counter: monotone residual formula size {Compiler}
10
1800
180
180
180.000000
Counter: #pure clauses / #clauses {Compiler}
91
10.590551
0.000000
1.000000
0.116380
Counter: pure residual formula size / residual formula size {Compiler}
91
10.408163
0.000000
1.000000
0.114375
Timer: assign literal [ns] {Compiler}
140
254060752798
1520
72563703328
1814719662.842857
Timer: unassign literal [ns] {Compiler}
140
894325536
330
122710020
6388039.542857
Timer: get decision variable [ns] {Decision heuristic}
45
296916977
110
47284514
6598155.044444
Counter: #preselected variables {Decision heuristic}
45
10096075
1
1500250
224357.222222
Counter: #restricted variables / #preselected variables {Decision heuristic}
31
0.025265
0.000033
0.003331
0.000815
Timer (reduced): initialize [ns] {SAT solver}
1
295459828
Timer (reduced): initial simplification [ns] {SAT solver}
1
1580
Timer (reduced): initially implied literals [ns] {SAT solver}
1
970
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
91
4050611323
154609
341364875
44512212.340659
Timer: unit propagation [ns] {SAT solver}
91
296245
260
34939
3255.439560
Counter: #implied literals {SAT solver}
91
280
0
10
3.076923
Counter: #implied literals / #variables {SAT solver}
91
0.109073
0.000000
0.010989
0.001199
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
13
24398186
563796
6835930
1876783.538462
Counter: #implicit implied literals / #variables {SAT solver}
13
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
13
0.003650
0.000000
0.003650
0.000281
Timer: compute cut [ns] {Partitioning hypergraph}
1
3843936
3843936
3843936
3843936.000000
Counter: cut size {Partitioning hypergraph}
1
10
10
10
10.000000
Counter: cut size / #variables {Partitioning hypergraph}
1
0.002251
0.002251
0.002251
0.002251
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
10
3629770
33089
2794766
362977.000000
Counter: #vertices {Partitioning hypergraph}
10
62
0
62
6.200000
Counter: #vertices / #clauses {Partitioning hypergraph}
10
0.014292
0.000000
0.014292
0.001429
Counter: #hyperedges {Partitioning hypergraph}
10
16
0
16
1.600000
Counter: #hyperedges / #variables {Partitioning hypergraph}
10
0.003602
0.000000
0.003602
0.000360
Counter: hypergraph size {Partitioning hypergraph}
10
136
0
136
13.600000
Counter: hypergraph size / formula size {Partitioning hypergraph}
10
0.008219
0.000000
0.008219
0.000822
Timer: create equivalence structure [ns] {Partitioning hypergraph}
10
932300
17990
518406
93230.000000
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
81
36
0
1
0.444444
Number: #current entries {Cache - component caching}
1
45
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
81
51490364898
174728
7357148488
635683517.259259
Timer: search cache record structure [ns] {Cache - component caching}
81
36933612
150
3318290
455970.518519
Timer: add cache record structure [ns] {Cache - component caching}
45
17501625
580
2449079
388925.000000
Counter: #empty cache records / #cache records {Cache - component caching}
81
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
81
73185060
548
9000600
903519.259259
Counter: formula size (positive hit) {Cache - component caching}
36
13757400
2820
1300480
382150.000000
Counter: formula size (negative hit) {Cache - component caching}
45
59427660
548
9000600
1320614.666667
Counter: #variables (cache record structure) {Cache - component caching}
81
12732210
274
1500250
157187.777778
Counter: #variables (positive hit) {Cache - component caching}
36
2614860
1010
240230
72635.000000
Counter: #variables (negative hit) {Cache - component caching}
45
10117350
274
1500250
224830.000000
Counter: #clauses (cache record structure) {Cache - component caching}
81
12728220
184
1500280
157138.518519
Counter: #clauses (positive hit) {Cache - component caching}
36
2613240
956
240224
72590.000000
Counter: #clauses (negative hit) {Cache - component caching}
45
10114980
184
1500280
224777.333333
Counter: #removed clauses / #clauses {Cache - component caching}
81
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
36
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
45
19680
30
1270
437.333333
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
45
45
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
