Number: formula size {Formula representation}
1
17500945
Number: #variables {Formula representation}
1
2187710
Number: #clauses {Formula representation}
1
2187920
Timer (reduced): initialize [ns] {Formula representation}
1
1553579517
Timer: compute connected components [ns] {Formula representation}
60
1249719056
460
199602975
20828650.933333
Number: circuit size {Circuit}
1
70085925
Number: #nodes {Circuit}
1
33492604
Number: #edges {Circuit}
1
70085925
Number: #variables {Circuit}
1
2187710
Timer: copy subcircuit [ns] {Circuit}
163
19653141557
5900
4747617825
120571420.595092
Counter: formula size (copy subcircuit) {Circuit}
163
21384905
35
4094660
131195.736196
Counter: #variables (copy subcircuit) {Circuit}
163
3054630
10
562700
18740.061350
Counter: #clauses (copy subcircuit) {Circuit}
163
3059808
16
562904
18771.828221
Timer (reduced): initialize [ns] {Compiler}
1
1446178747
Timer (reduced): compile [ns] {Compiler}
1
1590973324449
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
5
Number: #splits {Compiler}
1
145
Number: #decisions {Compiler}
1
32
Counter: ratio of recomputed hypergraph cuts {Compiler}
195
179
0
1
0.917949
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
22
19
0
1
0.863636
Counter: #connected components {Compiler}
60
195
1
20
3.250000
Counter: #monotone residual formulae / #residual formulae {Compiler}
60
0
0
0
0.000000
Counter: monotone residual formula size {Compiler}
0
0
0
0
0.000000
Counter: #pure clauses / #clauses {Compiler}
60
0.000000
0.000000
0.000000
0.000000
Counter: pure residual formula size / residual formula size {Compiler}
60
0.000000
0.000000
0.000000
0.000000
Timer: assign literal [ns] {Compiler}
104
1525605033867
250
539409531151
14669279171.798077
Timer: unassign literal [ns] {Compiler}
104
605991156
220
112754565
5826838.038462
Timer: get decision variable [ns] {Decision heuristic}
32
433736722
50
125383261
13554272.562500
Counter: #preselected variables {Decision heuristic}
32
8509749
2
2187710
265929.656250
Counter: #restricted variables / #preselected variables {Decision heuristic}
0
0.000000
0.000000
0.000000
0.000000
Timer (reduced): initialize [ns] {SAT solver}
1
452464289
Timer (reduced): initial simplification [ns] {SAT solver}
1
1560
Timer (reduced): initially implied literals [ns] {SAT solver}
1
1160
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
65
3208103896
450
473972185
49355444.553846
Timer: unit propagation [ns] {SAT solver}
65
475739
120
235029
7319.061538
Counter: #implied literals {SAT solver}
65
128
0
5
1.969231
Counter: #implied literals / #variables {SAT solver}
65
3.447995
0.000000
1.000000
0.053046
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
144
15389651
4370
4917689
106872.576389
Counter: #implicit implied literals / #variables {SAT solver}
144
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
144
0.000235
0.000000
0.000235
0.000002
Timer: compute cut [ns] {Partitioning hypergraph}
3
490978528
335299
347927085
163659509.333333
Counter: cut size {Partitioning hypergraph}
3
26
5
11
8.666667
Counter: cut size / #variables {Partitioning hypergraph}
3
0.506645
0.002580
0.500000
0.168882
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
3
11259390
9030
8077464
3753130.000000
Counter: #vertices {Partitioning hypergraph}
3
6488
6
4142
2162.666667
Counter: #vertices / #clauses {Partitioning hypergraph}
3
2.193407
0.375000
0.932043
0.731136
Counter: #hyperedges {Partitioning hypergraph}
3
306
5
151
102.000000
Counter: #hyperedges / #variables {Partitioning hypergraph}
3
0.596388
0.035413
0.500000
0.198796
Counter: hypergraph size {Partitioning hypergraph}
3
22232
10
15462
7410.666667
Counter: hypergraph size / formula size {Partitioning hypergraph}
3
1.751064
0.285714
0.766280
0.583688
Timer: create equivalence structure [ns] {Partitioning hypergraph}
3
1331504
2230
854246
443834.666667
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
195
163
0
1
0.835897
Number: #current entries {Cache - component caching}
1
32
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
195
39234193800
2370
8876484162
201200993.846154
Timer: search cache record structure [ns] {Cache - component caching}
195
54719092
50
9713677
280610.728205
Timer: add cache record structure [ns] {Cache - component caching}
32
24913629
730
5550096
778550.906250
Counter: #empty cache records / #cache records {Cache - component caching}
195
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
195
87339081
8
17500945
447892.723077
Counter: formula size (positive hit) {Cache - component caching}
163
21384905
35
4094660
131195.736196
Counter: formula size (negative hit) {Cache - component caching}
32
65954176
8
17500945
2061068.000000
Counter: #variables (cache record structure) {Cache - component caching}
195
11577614
4
2187710
59372.379487
Counter: #variables (positive hit) {Cache - component caching}
163
3054630
10
562700
18740.061350
Counter: #variables (negative hit) {Cache - component caching}
32
8522984
4
2187710
266343.250000
Counter: #clauses (cache record structure) {Cache - component caching}
195
11587888
4
2187920
59425.066667
Counter: #clauses (positive hit) {Cache - component caching}
163
3059808
16
562904
18771.828221
Counter: #clauses (negative hit) {Cache - component caching}
32
8528080
4
2187920
266502.500000
Counter: #removed clauses / #clauses {Cache - component caching}
195
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
163
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
32
23780
20
4470
743.125000
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
32
32
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
