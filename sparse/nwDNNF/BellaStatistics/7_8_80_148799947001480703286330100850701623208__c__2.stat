Number: formula size {Formula representation}
1
12845616
Number: #variables {Formula representation}
1
1835176
Number: #clauses {Formula representation}
1
1835267
Timer (reduced): initialize [ns] {Formula representation}
1
1343263708
Timer: compute connected components [ns] {Formula representation}
99
6994529766
3720
1184808679
70651815.818182
Number: circuit size {Circuit}
1
74631447
Number: #nodes {Circuit}
1
18982367
Number: #edges {Circuit}
1
74631447
Number: #variables {Circuit}
1
1835176
Timer: copy subcircuit [ns] {Circuit}
42
13468207370
1574376
1844666433
320671604.047619
Counter: formula size (copy subcircuit) {Circuit}
42
25169200
464
3015136
599266.666667
Counter: #variables (copy subcircuit) {Circuit}
42
3943632
160
458904
93896.000000
Counter: #clauses (copy subcircuit) {Circuit}
42
3944703
165
458974
93921.500000
Timer (reduced): initialize [ns] {Compiler}
1
2115464556
Timer (reduced): compile [ns] {Compiler}
1
733017323331
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
0
Number: #decisions {Compiler}
1
49
Counter: ratio of recomputed hypergraph cuts {Compiler}
91
68
0
1
0.747253
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
37
27
0
1
0.729730
Counter: #connected components {Compiler}
99
91
0
1
0.919192
Counter: #monotone residual formulae / #residual formulae {Compiler}
99
8
0
1
0.080808
Counter: monotone residual formula size {Compiler}
8
256
32
32
32.000000
Counter: #pure clauses / #clauses {Compiler}
99
9.369514
0.000000
1.000000
0.094642
Counter: pure residual formula size / residual formula size {Compiler}
99
9.009898
0.000000
1.000000
0.091009
Timer: assign literal [ns] {Compiler}
154
643887695988
590
164599865341
4181088934.987013
Timer: unassign literal [ns] {Compiler}
154
1177807519
440
161440644
7648100.772727
Timer: get decision variable [ns] {Decision heuristic}
49
423067827
50
127183435
8634037.285714
Counter: #preselected variables {Decision heuristic}
49
11261380
1
1835176
229824.081633
Counter: #restricted variables / #preselected variables {Decision heuristic}
27
0.025335
0.000031
0.004407
0.000938
Timer (reduced): initialize [ns] {SAT solver}
1
603601971
Timer (reduced): initial simplification [ns] {SAT solver}
1
1080
Timer (reduced): initially implied literals [ns] {SAT solver}
1
740
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
99
4974977791
16550
599527596
50252300.919192
Timer: unit propagation [ns] {SAT solver}
99
356487
220
50720
3600.878788
Counter: #implied literals {SAT solver}
99
259
0
8
2.616162
Counter: #implied literals / #variables {SAT solver}
99
0.471879
0.000000
0.058824
0.004766
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
20
74375121
95969
35797882
3718756.050000
Counter: #implicit implied literals / #variables {SAT solver}
20
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
20
0.022541
0.000000
0.019231
0.001127
Timer: compute cut [ns] {Partitioning hypergraph}
3
14189204
789273
6983808
4729734.666667
Counter: cut size {Partitioning hypergraph}
3
34
5
15
11.333333
Counter: cut size / #variables {Partitioning hypergraph}
3
0.023810
0.003363
0.015432
0.007937
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
10
14401900
9390
10577806
1440190.000000
Counter: #vertices {Partitioning hypergraph}
10
399
0
195
39.900000
Counter: #vertices / #clauses {Partitioning hypergraph}
10
0.143624
0.000000
0.069668
0.014362
Counter: #hyperedges {Partitioning hypergraph}
10
58
0
25
5.800000
Counter: #hyperedges / #variables {Partitioning hypergraph}
10
0.041979
0.000000
0.027778
0.004198
Counter: hypergraph size {Partitioning hypergraph}
10
968
0
536
96.800000
Counter: hypergraph size / formula size {Partitioning hypergraph}
10
0.087804
0.000000
0.037555
0.008780
Timer: create equivalence structure [ns] {Partitioning hypergraph}
10
3484060
4780
1865274
348406.000000
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
91
42
0
1
0.461538
Number: #current entries {Cache - component caching}
1
49
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
91
57046544074
37160
10901423314
626885099.714286
Timer: search cache record structure [ns] {Cache - component caching}
91
44944197
150
3688277
493892.274725
Timer: add cache record structure [ns] {Cache - component caching}
49
20529698
750
3858046
418973.428571
Counter: #empty cache records / #cache records {Cache - component caching}
91
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
91
102507279
104
12845616
1126453.615385
Counter: formula size (positive hit) {Cache - component caching}
42
25169200
464
3015136
599266.666667
Counter: formula size (negative hit) {Cache - component caching}
49
77338079
104
12845616
1578328.142857
Counter: #variables (cache record structure) {Cache - component caching}
91
15228346
52
1835176
167344.461538
Counter: #variables (positive hit) {Cache - component caching}
42
3943632
160
458904
93896.000000
Counter: #variables (negative hit) {Cache - component caching}
49
11284714
52
1835176
230300.285714
Counter: #clauses (cache record structure) {Cache - component caching}
91
15230488
36
1835267
167368.000000
Counter: #clauses (positive hit) {Cache - component caching}
42
3944703
165
458974
93921.500000
Counter: #clauses (negative hit) {Cache - component caching}
49
11285785
36
1835267
230322.142857
Counter: #removed clauses / #clauses {Cache - component caching}
91
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
42
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
49
20190
30
1280
412.040816
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
49
49
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
