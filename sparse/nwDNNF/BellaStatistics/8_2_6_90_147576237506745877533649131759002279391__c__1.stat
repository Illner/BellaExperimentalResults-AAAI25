Number: formula size {Formula representation}
1
30233472
Number: #variables {Formula representation}
1
3359340
Number: #clauses {Formula representation}
1
3359408
Timer (reduced): initialize [ns] {Formula representation}
1
3099293299
Timer: compute connected components [ns] {Formula representation}
71
8352958435
1350
2060326122
117647301.901408
Number: circuit size {Circuit}
1
16693504
Number: #nodes {Circuit}
1
13409147
Number: #edges {Circuit}
1
16693504
Number: #variables {Circuit}
1
3359340
Timer: copy subcircuit [ns] {Circuit}
36
7398948963
181980
1636953755
205526360.083333
Counter: formula size (copy subcircuit) {Circuit}
36
26208516
156
4479312
728014.333333
Counter: #variables (copy subcircuit) {Circuit}
36
3361194
54
559968
93366.500000
Counter: #clauses (copy subcircuit) {Circuit}
36
3362188
58
560026
93394.111111
Timer (reduced): initialize [ns] {Compiler}
1
3743761983
Timer (reduced): compile [ns] {Compiler}
1
5662928355173
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
12
Number: #decisions {Compiler}
1
35
Counter: ratio of recomputed hypergraph cuts {Compiler}
71
57
0
1
0.802817
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
26
20
0
1
0.769231
Counter: #connected components {Compiler}
71
71
0
2
1.000000
Counter: #monotone residual formulae / #residual formulae {Compiler}
71
6
0
1
0.084507
Counter: monotone residual formula size {Compiler}
6
72
12
12
12.000000
Counter: #pure clauses / #clauses {Compiler}
71
6.000000
0.000000
1.000000
0.084507
Counter: pure residual formula size / residual formula size {Compiler}
71
6.000000
0.000000
1.000000
0.084507
Timer: assign literal [ns] {Compiler}
112
5547424728467
470
2163057710776
49530577932.741071
Timer: unassign literal [ns] {Compiler}
112
1523170324
320
305490869
13599735.035714
Timer: get decision variable [ns] {Decision heuristic}
35
580096125
40
166635465
16574175.000000
Counter: #preselected variables {Decision heuristic}
35
13428369
1
3359340
383667.685714
Counter: #restricted variables / #preselected variables {Decision heuristic}
20
0.019070
0.000014
0.004954
0.000953
Timer (reduced): initialize [ns] {SAT solver}
1
1265221147
Timer (reduced): initial simplification [ns] {SAT solver}
1
1810
Timer (reduced): initially implied literals [ns] {SAT solver}
1
1060
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
71
6590542130
4100
1081386499
92824537.042254
Timer: unit propagation [ns] {SAT solver}
71
268009
180
30370
3774.774648
Counter: #implied literals {SAT solver}
71
154
0
6
2.169014
Counter: #implied literals / #variables {SAT solver}
71
0.770237
0.000000
0.142857
0.010848
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
22
39229246
27030
10067075
1783147.545455
Counter: #implicit implied literals / #variables {SAT solver}
22
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
22
0.045455
0.000000
0.045455
0.002066
Timer: compute cut [ns] {Partitioning hypergraph}
1
16409997
16409997
16409997
16409997.000000
Counter: cut size {Partitioning hypergraph}
1
12
12
12
12.000000
Counter: cut size / #variables {Partitioning hypergraph}
1
0.004525
0.004525
0.004525
0.004525
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
6
4816683
4900
4750833
802780.500000
Counter: #vertices {Partitioning hypergraph}
6
436
0
436
72.666667
Counter: #vertices / #clauses {Partitioning hypergraph}
6
0.162687
0.000000
0.162687
0.027114
Counter: #hyperedges {Partitioning hypergraph}
6
24
0
24
4.000000
Counter: #hyperedges / #variables {Partitioning hypergraph}
6
0.009050
0.000000
0.009050
0.001508
Counter: hypergraph size {Partitioning hypergraph}
6
1320
0
1320
220.000000
Counter: hypergraph size / formula size {Partitioning hypergraph}
6
0.100365
0.000000
0.100365
0.016727
Timer: create equivalence structure [ns] {Partitioning hypergraph}
6
458949
2080
441219
76491.500000
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
71
36
0
1
0.507042
Number: #current entries {Cache - component caching}
1
35
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
71
84919939170
13100
21225856430
1196055481.267606
Timer: search cache record structure [ns] {Cache - component caching}
71
72123930
130
13682310
1015830.000000
Timer: add cache record structure [ns] {Cache - component caching}
35
69518980
350
17410018
1986256.571429
Counter: #empty cache records / #cache records {Cache - component caching}
71
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
71
144460426
44
30233472
2034653.887324
Counter: formula size (positive hit) {Cache - component caching}
36
26208516
156
4479312
728014.333333
Counter: formula size (negative hit) {Cache - component caching}
35
118251910
44
30233472
3378626.000000
Counter: #variables (cache record structure) {Cache - component caching}
71
16800244
22
3359340
236623.154930
Counter: #variables (positive hit) {Cache - component caching}
36
3361194
54
559968
93366.500000
Counter: #variables (negative hit) {Cache - component caching}
35
13439050
22
3359340
383972.857143
Counter: #clauses (cache record structure) {Cache - component caching}
71
16802338
16
3359408
236652.647887
Counter: #clauses (positive hit) {Cache - component caching}
36
3362188
58
560026
93394.111111
Counter: #clauses (negative hit) {Cache - component caching}
35
13440150
16
3359408
384004.285714
Counter: #removed clauses / #clauses {Cache - component caching}
71
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
36
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
35
12800
30
1230
365.714286
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
35
35
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
