Number: formula size {Formula representation}
1
5314905
Number: #variables {Formula representation}
1
885960
Number: #clauses {Formula representation}
1
885965
Timer (reduced): initialize [ns] {Formula representation}
1
477931475
Timer: compute connected components [ns] {Formula representation}
81
2425533690
17340
415610222
29944860.370370
Number: circuit size {Circuit}
1
8686750
Number: #nodes {Circuit}
1
3033269
Number: #edges {Circuit}
1
8686750
Number: #variables {Circuit}
1
885960
Timer: copy subcircuit [ns] {Circuit}
32
1445451594
514345
179496414
45170362.312500
Counter: formula size (copy subcircuit) {Circuit}
32
5212008
2772
492471
162875.250000
Counter: #variables (copy subcircuit) {Circuit}
32
1073376
1008
98622
33543.000000
Counter: #clauses (copy subcircuit) {Circuit}
32
1071584
937
98599
33487.000000
Timer (reduced): initialize [ns] {Compiler}
1
639282169
Timer (reduced): compile [ns] {Compiler}
1
129172754494
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
0
Number: #decisions {Compiler}
1
40
Counter: ratio of recomputed hypergraph cuts {Compiler}
72
60
0
1
0.833333
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
35
26
0
1
0.742857
Counter: #connected components {Compiler}
81
72
0
1
0.888889
Counter: #monotone residual formulae / #residual formulae {Compiler}
81
9
0
1
0.111111
Counter: monotone residual formula size {Compiler}
9
1782
198
198
198.000000
Counter: #pure clauses / #clauses {Compiler}
81
9.332991
0.000000
1.000000
0.115222
Counter: pure residual formula size / residual formula size {Compiler}
81
9.227848
0.000000
1.000000
0.113924
Timer: assign literal [ns] {Compiler}
125
99344371434
1949
30486786798
794754971.472000
Timer: unassign literal [ns] {Compiler}
125
498645621
480
75869544
3989164.968000
Timer: get decision variable [ns] {Decision heuristic}
40
145090178
60
28042324
3627254.450000
Counter: #preselected variables {Decision heuristic}
40
5036837
1
885960
125920.925000
Counter: #restricted variables / #preselected variables {Decision heuristic}
26
0.022295
0.000051
0.003197
0.000857
Timer (reduced): initialize [ns] {SAT solver}
1
177421903
Timer (reduced): initial simplification [ns] {SAT solver}
1
1110
Timer (reduced): initially implied literals [ns] {SAT solver}
1
650
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
81
1717029161
49780
175262832
21197890.876543
Timer: unit propagation [ns] {SAT solver}
81
227958
239
33530
2814.296296
Counter: #implied literals {SAT solver}
81
230
0
9
2.839506
Counter: #implied literals / #variables {SAT solver}
81
0.091930
0.000000
0.010000
0.001135
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
10
10769307
401017
3315641
1076930.700000
Counter: #implicit implied literals / #variables {SAT solver}
10
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
10
0.003322
0.000000
0.003322
0.000332
Timer: compute cut [ns] {Partitioning hypergraph}
1
3934726
3934726
3934726
3934726.000000
Counter: cut size {Partitioning hypergraph}
1
11
11
11
11.000000
Counter: cut size / #variables {Partitioning hypergraph}
1
0.002334
0.002334
0.002334
0.002334
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
9
3128502
39069
2355609
347611.333333
Counter: #vertices {Partitioning hypergraph}
9
65
0
65
7.222222
Counter: #vertices / #clauses {Partitioning hypergraph}
9
0.014069
0.000000
0.014069
0.001563
Counter: #hyperedges {Partitioning hypergraph}
9
16
0
16
1.777778
Counter: #hyperedges / #variables {Partitioning hypergraph}
9
0.003396
0.000000
0.003396
0.000377
Counter: hypergraph size {Partitioning hypergraph}
9
142
0
142
15.777778
Counter: hypergraph size / formula size {Partitioning hypergraph}
9
0.007993
0.000000
0.007993
0.000888
Timer: create equivalence structure [ns] {Partitioning hypergraph}
9
929621
18030
527125
103291.222222
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
72
32
0
1
0.444444
Number: #current entries {Cache - component caching}
1
40
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
72
21890294450
213398
3661377655
304031867.361111
Timer: search cache record structure [ns] {Cache - component caching}
72
12448904
140
1608636
172901.444444
Timer: add cache record structure [ns] {Cache - component caching}
40
9908110
350
2325149
247702.750000
Counter: #empty cache records / #cache records {Cache - component caching}
72
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
72
34729116
602
5314905
482348.833333
Counter: formula size (positive hit) {Cache - component caching}
32
5212008
2772
492471
162875.250000
Counter: formula size (negative hit) {Cache - component caching}
40
29517108
602
5314905
737927.700000
Counter: #variables (cache record structure) {Cache - component caching}
72
6134552
301
885960
85202.111111
Counter: #variables (positive hit) {Cache - component caching}
32
1073376
1008
98622
33543.000000
Counter: #variables (negative hit) {Cache - component caching}
40
5061176
301
885960
126529.400000
Counter: #clauses (cache record structure) {Cache - component caching}
72
6130308
202
885965
85143.166667
Counter: #clauses (positive hit) {Cache - component caching}
32
1071584
937
98599
33487.000000
Counter: #clauses (negative hit) {Cache - component caching}
40
5058724
202
885965
126468.100000
Counter: #removed clauses / #clauses {Cache - component caching}
72
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
32
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
40
20820
50
1130
520.500000
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
40
40
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
