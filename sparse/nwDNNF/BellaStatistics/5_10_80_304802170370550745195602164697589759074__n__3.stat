Number: formula size {Formula representation}
1
3000600
Number: #variables {Formula representation}
1
500150
Number: #clauses {Formula representation}
1
500280
Timer (reduced): initialize [ns] {Formula representation}
1
269001548
Timer: compute connected components [ns] {Formula representation}
199999
11605715017
4560
189893496
58028.865229
Number: circuit size {Circuit}
1
5134293
Number: #nodes {Circuit}
1
2031328
Number: #edges {Circuit}
1
5134293
Number: #variables {Circuit}
1
500150
Timer: copy subcircuit [ns] {Circuit}
0
0
0
0
0.000000
Counter: formula size (copy subcircuit) {Circuit}
0
0
0
0
0.000000
Counter: #variables (copy subcircuit) {Circuit}
0
0
0
0
0.000000
Counter: #clauses (copy subcircuit) {Circuit}
0
0
0
0
0.000000
Timer (reduced): initialize [ns] {Compiler}
1
268988528
Timer (reduced): compile [ns] {Compiler}
1
81501681974
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
0
Number: #decisions {Compiler}
1
99999
Counter: ratio of recomputed hypergraph cuts {Compiler}
99999
82024
0
1
0.820248
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
82024
199
0
1
0.002426
Counter: #connected components {Compiler}
199999
99999
0
1
0.499997
Counter: #monotone residual formulae / #residual formulae {Compiler}
199999
100000
0
1
0.500003
Counter: monotone residual formula size {Compiler}
100000
6000000
60
60
60.000000
Counter: #pure clauses / #clauses {Compiler}
199999
101417.868395
0.000000
1.000000
0.507092
Counter: pure residual formula size / residual formula size {Compiler}
199999
101018.992603
0.000000
1.000000
0.505097
Timer: assign literal [ns] {Compiler}
315139
29752344508
510
8564383299
94410.226941
Timer: unassign literal [ns] {Compiler}
315139
1599615720
140
38587741
5075.905299
Timer: get decision variable [ns] {Decision heuristic}
99999
79905241
30
7609726
799.060401
Counter: #preselected variables {Decision heuristic}
99999
6497988
1
500150
64.980530
Counter: #restricted variables / #preselected variables {Decision heuristic}
199
0.721687
0.000100
0.005871
0.003627
Timer (reduced): initialize [ns] {SAT solver}
1
99996700
Timer (reduced): initial simplification [ns] {SAT solver}
1
1260
Timer (reduced): initially implied literals [ns] {SAT solver}
1
940
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
199999
7001639947
2940
62871544
35008.374777
Timer: unit propagation [ns] {SAT solver}
199999
55588227
110
196839
277.942525
Counter: #implied literals {SAT solver}
199999
587467
0
10
2.937350
Counter: #implied literals / #variables {SAT solver}
199999
2801.402772
0.000000
0.032258
0.014007
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
81825
14288270060
30450
6175093
174619.860189
Counter: #implicit implied literals / #variables {SAT solver}
81825
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
81825
148.026811
0.000000
0.011236
0.001809
Timer: compute cut [ns] {Partitioning hypergraph}
1070
128314507
28650
282869
119920.100000
Counter: cut size {Partitioning hypergraph}
1070
15987
2
26
14.941121
Counter: cut size / #variables {Partitioning hypergraph}
1070
11.719393
0.004248
0.018519
0.010953
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
81825
3920521465
9670
7200718
47913.491781
Counter: #vertices {Partitioning hypergraph}
81825
111747
0
283
1.365683
Counter: #vertices / #clauses {Partitioning hypergraph}
81825
66.457769
0.000000
0.067460
0.000812
Counter: #hyperedges {Partitioning hypergraph}
81825
19997
0
29
0.244387
Counter: #hyperedges / #variables {Partitioning hypergraph}
81825
14.822839
0.000000
0.022059
0.000181
Counter: hypergraph size {Partitioning hypergraph}
81825
239087
0
589
2.921931
Counter: hypergraph size / formula size {Partitioning hypergraph}
81825
39.911770
0.000000
0.040441
0.000488
Timer: create equivalence structure [ns] {Partitioning hypergraph}
81825
1091305425
4300
565237
13337.065995
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
99999
0
0
0
0.000000
Number: #current entries {Cache - component caching}
1
99999
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
99999
6909089454
10520
32025930
69091.585456
Timer: search cache record structure [ns] {Cache - component caching}
99999
53779676
110
297689
537.802138
Timer: add cache record structure [ns] {Cache - component caching}
99999
63070813
140
844716
630.714437
Counter: #empty cache records / #cache records {Cache - component caching}
99999
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
99999
125340750
188
3000600
1253.420034
Counter: formula size (positive hit) {Cache - component caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - component caching}
99999
125340750
188
3000600
1253.420034
Counter: #variables (cache record structure) {Cache - component caching}
99999
36789518
94
500150
367.898859
Counter: #variables (positive hit) {Cache - component caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - component caching}
99999
36789518
94
500150
367.898859
Counter: #clauses (cache record structure) {Cache - component caching}
99999
35029034
64
500280
350.293843
Counter: #clauses (positive hit) {Cache - component caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - component caching}
99999
35029034
64
500280
350.293843
Counter: #removed clauses / #clauses {Cache - component caching}
99999
9241.246787
0.004460
1.000000
0.092413
Counter: #identical mappings / #mappings {Cache - component caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
99999
4614239
20
1030
46.142851
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
99999
99999
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
