Number: formula size {Formula representation}
1
25676
Number: #variables {Formula representation}
1
2610
Number: #clauses {Formula representation}
1
2598
Timer (reduced): initialize [ns] {Formula representation}
1
2795695
Timer: compute connected components [ns] {Formula representation}
19
3176555
1860
1361893
167187.105263
Number: circuit size {Circuit}
1
17146
Number: #nodes {Circuit}
1
12131
Number: #edges {Circuit}
1
17146
Number: #variables {Circuit}
1
2610
Timer: copy subcircuit [ns] {Circuit}
8
2497707
14750
1161014
312213.375000
Counter: formula size (copy subcircuit) {Circuit}
8
21064
56
11584
2633.000000
Counter: #variables (copy subcircuit) {Circuit}
8
2822
28
1322
352.750000
Counter: #clauses (copy subcircuit) {Circuit}
8
2744
20
1312
343.000000
Timer (reduced): initialize [ns] {Compiler}
1
4491486
Timer (reduced): compile [ns] {Compiler}
1
30537975
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
0
Number: #decisions {Compiler}
1
9
Counter: ratio of recomputed hypergraph cuts {Compiler}
17
1
0
1
0.058824
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
1
0
0
0
0.000000
Counter: #connected components {Compiler}
19
17
0
1
0.894737
Counter: #monotone residual formulae / #residual formulae {Compiler}
19
2
0
1
0.105263
Counter: monotone residual formula size {Compiler}
2
32
16
16
16.000000
Counter: #pure clauses / #clauses {Compiler}
19
2.182588
0.000000
1.000000
0.114873
Counter: pure residual formula size / residual formula size {Compiler}
19
2.133489
0.000000
1.000000
0.112289
Timer: assign literal [ns] {Compiler}
36
5243941
490
2225108
145665.027778
Timer: unassign literal [ns] {Compiler}
36
303799
240
70389
8438.861111
Timer: get decision variable [ns] {Decision heuristic}
9
1640
40
670
182.222222
Counter: #preselected variables {Decision heuristic}
9
45
1
9
5.000000
Counter: #restricted variables / #preselected variables {Decision heuristic}
0
0.000000
0.000000
0.000000
0.000000
Timer (reduced): initialize [ns] {SAT solver}
1
1000255
Timer (reduced): initial simplification [ns] {SAT solver}
1
600
Timer (reduced): initially implied literals [ns] {SAT solver}
1
280
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
19
614427
1480
165189
32338.263158
Timer: unit propagation [ns] {SAT solver}
19
10500
160
4610
552.631579
Counter: #implied literals {SAT solver}
19
36
0
2
1.894737
Counter: #implied literals / #variables {SAT solver}
19
0.448889
0.000000
0.111111
0.023626
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
1
1670901
1670901
1670901
1670901.000000
Counter: #implicit implied literals / #variables {SAT solver}
1
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
1
0.003454
0.003454
0.003454
0.003454
Timer: compute cut [ns] {Partitioning hypergraph}
1
691227
691227
691227
691227.000000
Counter: cut size {Partitioning hypergraph}
1
9
9
9
9.000000
Counter: cut size / #variables {Partitioning hypergraph}
1
0.003454
0.003454
0.003454
0.003454
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
1
4728164
4728164
4728164
4728164.000000
Counter: #vertices {Partitioning hypergraph}
1
5
5
5
5.000000
Counter: #vertices / #clauses {Partitioning hypergraph}
1
0.001926
0.001926
0.001926
0.001926
Counter: #hyperedges {Partitioning hypergraph}
1
9
9
9
9.000000
Counter: #hyperedges / #variables {Partitioning hypergraph}
1
0.003454
0.003454
0.003454
0.003454
Counter: hypergraph size {Partitioning hypergraph}
1
40
40
40
40.000000
Counter: hypergraph size / formula size {Partitioning hypergraph}
1
0.001558
0.001558
0.001558
0.001558
Timer: create equivalence structure [ns] {Partitioning hypergraph}
1
211649
211649
211649
211649.000000
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
17
8
0
1
0.470588
Number: #current entries {Cache - component caching}
1
9
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
17
10139224
16790
3652610
596424.941176
Timer: search cache record structure [ns] {Cache - component caching}
17
21480
140
8840
1263.529412
Timer: add cache record structure [ns] {Cache - component caching}
9
10270
240
3770
1141.111111
Counter: #empty cache records / #cache records {Cache - component caching}
17
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
17
67800
56
25672
3988.235294
Counter: formula size (positive hit) {Cache - component caching}
8
21064
56
11584
2633.000000
Counter: formula size (negative hit) {Cache - component caching}
9
46736
56
25672
5192.888889
Counter: #variables (cache record structure) {Cache - component caching}
17
8250
28
2606
485.294118
Counter: #variables (positive hit) {Cache - component caching}
8
2822
28
1322
352.750000
Counter: #variables (negative hit) {Cache - component caching}
9
5428
28
2606
603.111111
Counter: #clauses (cache record structure) {Cache - component caching}
17
8084
20
2596
475.529412
Counter: #clauses (positive hit) {Cache - component caching}
8
2744
20
1312
343.000000
Counter: #clauses (negative hit) {Cache - component caching}
9
5340
20
2596
593.333333
Counter: #removed clauses / #clauses {Cache - component caching}
17
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
8
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
9
540
30
150
60.000000
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
9
9
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
