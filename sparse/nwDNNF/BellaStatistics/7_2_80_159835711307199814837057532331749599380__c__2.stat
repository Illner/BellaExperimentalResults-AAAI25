Number: formula size {Formula representation}
1
3192
Number: #variables {Formula representation}
1
490
Number: #clauses {Formula representation}
1
476
Timer (reduced): initialize [ns] {Formula representation}
1
513616
Timer: compute connected components [ns] {Formula representation}
15
729476
1730
222379
48631.733333
Number: circuit size {Circuit}
1
4146
Number: #nodes {Circuit}
1
2511
Number: #edges {Circuit}
1
4146
Number: #variables {Circuit}
1
490
Timer: copy subcircuit [ns] {Circuit}
6
667887
11530
308798
111314.500000
Counter: formula size (copy subcircuit) {Circuit}
6
3524
56
1648
587.333333
Counter: #variables (copy subcircuit) {Circuit}
6
782
28
294
130.333333
Counter: #clauses (copy subcircuit) {Circuit}
6
704
20
280
117.333333
Timer (reduced): initialize [ns] {Compiler}
1
3629884
Timer (reduced): compile [ns] {Compiler}
1
6625683
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
0
Number: #decisions {Compiler}
1
7
Counter: ratio of recomputed hypergraph cuts {Compiler}
13
1
0
1
0.076923
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
1
0
0
0
0.000000
Counter: #connected components {Compiler}
15
13
0
1
0.866667
Counter: #monotone residual formulae / #residual formulae {Compiler}
15
2
0
1
0.133333
Counter: monotone residual formula size {Compiler}
2
32
16
16
16.000000
Counter: #pure clauses / #clauses {Compiler}
15
2.461538
0.000000
1.000000
0.164103
Counter: pure residual formula size / residual formula size {Compiler}
15
2.352941
0.000000
1.000000
0.156863
Timer: assign literal [ns] {Compiler}
28
196888
470
56570
7031.714286
Timer: unassign literal [ns] {Compiler}
28
55450
240
9350
1980.357143
Timer: get decision variable [ns] {Decision heuristic}
7
2860
40
2050
408.571429
Counter: #preselected variables {Decision heuristic}
7
28
1
7
4.000000
Counter: #restricted variables / #preselected variables {Decision heuristic}
0
0.000000
0.000000
0.000000
0.000000
Timer (reduced): initialize [ns] {SAT solver}
1
240678
Timer (reduced): initial simplification [ns] {SAT solver}
1
410
Timer (reduced): initially implied literals [ns] {SAT solver}
1
170
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
15
182267
1680
43869
12151.133333
Timer: unit propagation [ns] {SAT solver}
15
5430
130
1250
362.000000
Counter: #implied literals {SAT solver}
15
28
0
2
1.866667
Counter: #implied literals / #variables {SAT solver}
15
0.419591
0.000000
0.111111
0.027973
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
1
284848
284848
284848
284848.000000
Counter: #implicit implied literals / #variables {SAT solver}
1
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
1
0.014286
0.014286
0.014286
0.014286
Timer: compute cut [ns] {Partitioning hypergraph}
1
937794
937794
937794
937794.000000
Counter: cut size {Partitioning hypergraph}
1
7
7
7
7.000000
Counter: cut size / #variables {Partitioning hypergraph}
1
0.014286
0.014286
0.014286
0.014286
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
1
939533
939533
939533
939533.000000
Counter: #vertices {Partitioning hypergraph}
1
6
6
6
6.000000
Counter: #vertices / #clauses {Partitioning hypergraph}
1
0.012605
0.012605
0.012605
0.012605
Counter: #hyperedges {Partitioning hypergraph}
1
7
7
7
7.000000
Counter: #hyperedges / #variables {Partitioning hypergraph}
1
0.014286
0.014286
0.014286
0.014286
Counter: hypergraph size {Partitioning hypergraph}
1
30
30
30
30.000000
Counter: hypergraph size / formula size {Partitioning hypergraph}
1
0.009398
0.009398
0.009398
0.009398
Timer: create equivalence structure [ns] {Partitioning hypergraph}
1
53740
53740
53740
53740.000000
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
13
6
0
1
0.461538
Number: #current entries {Cache - component caching}
1
7
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
13
2179233
15650
663685
167633.307692
Timer: search cache record structure [ns] {Cache - component caching}
13
6740
160
1750
518.461538
Timer: add cache record structure [ns] {Cache - component caching}
7
5670
130
2510
810.000000
Counter: #empty cache records / #cache records {Cache - component caching}
13
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
13
10240
56
3192
787.692308
Counter: formula size (positive hit) {Cache - component caching}
6
3524
56
1648
587.333333
Counter: formula size (negative hit) {Cache - component caching}
7
6716
56
3192
959.428571
Counter: #variables (cache record structure) {Cache - component caching}
13
2054
28
490
158.000000
Counter: #variables (positive hit) {Cache - component caching}
6
782
28
294
130.333333
Counter: #variables (negative hit) {Cache - component caching}
7
1272
28
490
181.714286
Counter: #clauses (cache record structure) {Cache - component caching}
13
1884
20
476
144.923077
Counter: #clauses (positive hit) {Cache - component caching}
6
704
20
280
117.333333
Counter: #clauses (negative hit) {Cache - component caching}
7
1180
20
476
168.571429
Counter: #removed clauses / #clauses {Cache - component caching}
13
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
6
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
7
640
30
350
91.428571
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
7
7
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
