Number: formula size {Formula representation}
1
1240
Number: #variables {Formula representation}
1
290
Number: #clauses {Formula representation}
1
260
Timer (reduced): initialize [ns] {Formula representation}
1
168670
Timer: compute connected components [ns] {Formula representation}
11
381611
3190
101801
34691.909091
Number: circuit size {Circuit}
1
1626
Number: #nodes {Circuit}
1
1095
Number: #edges {Circuit}
1
1626
Number: #variables {Circuit}
1
290
Timer: copy subcircuit [ns] {Circuit}
4
186610
14360
80980
46652.500000
Counter: formula size (copy subcircuit) {Circuit}
4
1412
104
704
353.000000
Counter: #variables (copy subcircuit) {Circuit}
4
480
52
198
120.000000
Counter: #clauses (copy subcircuit) {Circuit}
4
380
36
168
95.000000
Timer (reduced): initialize [ns] {Compiler}
1
9010480
Timer (reduced): compile [ns] {Compiler}
1
3291701
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
0
Number: #decisions {Compiler}
1
5
Counter: ratio of recomputed hypergraph cuts {Compiler}
9
3
0
1
0.333333
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
2
0
0
0
0.000000
Counter: #connected components {Compiler}
11
9
0
1
0.818182
Counter: #monotone residual formulae / #residual formulae {Compiler}
11
2
0
1
0.181818
Counter: monotone residual formula size {Compiler}
2
64
32
32
32.000000
Counter: #pure clauses / #clauses {Compiler}
11
2.525799
0.000000
1.000000
0.229618
Counter: pure residual formula size / residual formula size {Compiler}
11
2.370115
0.000000
1.000000
0.215465
Timer: assign literal [ns] {Compiler}
20
62810
450
14320
3140.500000
Timer: unassign literal [ns] {Compiler}
20
25220
220
3800
1261.000000
Timer: get decision variable [ns] {Decision heuristic}
5
1380
60
1100
276.000000
Counter: #preselected variables {Decision heuristic}
5
11
1
4
2.200000
Counter: #restricted variables / #preselected variables {Decision heuristic}
0
0.000000
0.000000
0.000000
0.000000
Timer (reduced): initialize [ns] {SAT solver}
1
106010
Timer (reduced): initial simplification [ns] {SAT solver}
1
600
Timer (reduced): initially implied literals [ns] {SAT solver}
1
260
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
11
89290
1870
18460
8117.272727
Timer: unit propagation [ns] {SAT solver}
11
3390
140
910
308.181818
Counter: #implied literals {SAT solver}
11
20
0
2
1.818182
Counter: #implied literals / #variables {SAT solver}
11
0.223414
0.000000
0.058824
0.020310
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
3
160420
17920
121730
53473.333333
Counter: #implicit implied literals / #variables {SAT solver}
3
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
3
0.055703
0.017241
0.019231
0.018568
Timer: compute cut [ns] {Partitioning hypergraph}
1
876143
876143
876143
876143.000000
Counter: cut size {Partitioning hypergraph}
1
4
4
4
4.000000
Counter: cut size / #variables {Partitioning hypergraph}
1
0.013793
0.013793
0.013793
0.013793
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
2
244601
7920
236681
122300.500000
Counter: #vertices {Partitioning hypergraph}
2
8
0
8
4.000000
Counter: #vertices / #clauses {Partitioning hypergraph}
2
0.030769
0.000000
0.030769
0.015385
Counter: #hyperedges {Partitioning hypergraph}
2
5
0
5
2.500000
Counter: #hyperedges / #variables {Partitioning hypergraph}
2
0.017241
0.000000
0.017241
0.008621
Counter: hypergraph size {Partitioning hypergraph}
2
24
0
24
12.000000
Counter: hypergraph size / formula size {Partitioning hypergraph}
2
0.019355
0.000000
0.019355
0.009677
Timer: create equivalence structure [ns] {Partitioning hypergraph}
2
26940
4390
22550
13470.000000
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
9
4
0
1
0.444444
Number: #current entries {Cache - component caching}
1
5
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
9
1002784
30270
266901
111420.444444
Timer: search cache record structure [ns] {Cache - component caching}
9
3550
70
750
394.444444
Timer: add cache record structure [ns] {Cache - component caching}
5
2650
240
1360
530.000000
Counter: #empty cache records / #cache records {Cache - component caching}
9
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
9
4064
104
1240
451.555556
Counter: formula size (positive hit) {Cache - component caching}
4
1412
104
704
353.000000
Counter: formula size (negative hit) {Cache - component caching}
5
2652
104
1240
530.400000
Counter: #variables (cache record structure) {Cache - component caching}
9
1250
52
290
138.888889
Counter: #variables (positive hit) {Cache - component caching}
4
480
52
198
120.000000
Counter: #variables (negative hit) {Cache - component caching}
5
770
52
290
154.000000
Counter: #clauses (cache record structure) {Cache - component caching}
9
1020
36
260
113.333333
Counter: #clauses (positive hit) {Cache - component caching}
4
380
36
168
95.000000
Counter: #clauses (negative hit) {Cache - component caching}
5
640
36
260
128.000000
Counter: #removed clauses / #clauses {Cache - component caching}
9
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
4
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
5
450
30
330
90.000000
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
5
5
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
