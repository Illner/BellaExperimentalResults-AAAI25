Number: formula size {Formula representation}
1
25690672
Number: #variables {Formula representation}
1
3670240
Number: #clauses {Formula representation}
1
3670275
Timer (reduced): initialize [ns] {Formula representation}
1
2299502925
Timer: compute connected components [ns] {Formula representation}
99
9583895720
7910
1638008026
96807027.474747
Number: circuit size {Circuit}
1
137021719
Number: #nodes {Circuit}
1
24487503
Number: #edges {Circuit}
1
137021719
Number: #variables {Circuit}
1
3670240
Timer: copy subcircuit [ns] {Circuit}
42
16048136633
130359
2221015134
382098491.261905
Counter: formula size (copy subcircuit) {Circuit}
42
37769648
1040
4391392
899277.333333
Counter: #variables (copy subcircuit) {Circuit}
42
6107808
376
688336
145424.000000
Counter: #clauses (copy subcircuit) {Circuit}
42
6106751
357
688350
145398.833333
Timer (reduced): initialize [ns] {Compiler}
1
2368032097
Timer (reduced): compile [ns] {Compiler}
1
2817912418469
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
0
Number: #decisions {Compiler}
1
49
Counter: ratio of recomputed hypergraph cuts {Compiler}
91
66
0
1
0.725275
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
37
30
0
1
0.810811
Counter: #connected components {Compiler}
99
91
0
1
0.919192
Counter: #monotone residual formulae / #residual formulae {Compiler}
99
8
0
1
0.080808
Counter: monotone residual formula size {Compiler}
8
640
80
80
80.000000
Counter: #pure clauses / #clauses {Compiler}
99
9.251511
0.000000
1.000000
0.093450
Counter: pure residual formula size / residual formula size {Compiler}
99
8.896762
0.000000
1.000000
0.089866
Timer: assign literal [ns] {Compiler}
154
2685832035327
1110
632664895011
17440467761.863636
Timer: unassign literal [ns] {Compiler}
154
1061889020
320
160155135
6895383.246753
Timer: get decision variable [ns] {Decision heuristic}
49
510107817
70
103355788
10410363.612245
Counter: #preselected variables {Decision heuristic}
49
20760679
1
3670240
423687.326531
Counter: #restricted variables / #preselected variables {Decision heuristic}
30
0.023162
0.000015
0.004261
0.000772
Timer (reduced): initialize [ns] {SAT solver}
1
693662474
Timer (reduced): initial simplification [ns] {SAT solver}
1
1010
Timer (reduced): initially implied literals [ns] {SAT solver}
1
600
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
99
6932221978
25790
825070803
70022444.222222
Timer: unit propagation [ns] {SAT solver}
99
424488
250
205450
4287.757576
Counter: #implied literals {SAT solver}
99
259
0
8
2.616162
Counter: #implied literals / #variables {SAT solver}
99
0.203024
0.000000
0.024390
0.002051
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
8
13463472
637597
3882674
1682934.000000
Counter: #implicit implied literals / #variables {SAT solver}
8
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
8
0.008065
0.000000
0.008065
0.001008
Timer: compute cut [ns] {Partitioning hypergraph}
2
9354880
4136152
5218728
4677440.000000
Counter: cut size {Partitioning hypergraph}
2
22
10
12
11.000000
Counter: cut size / #variables {Partitioning hypergraph}
2
0.007859
0.002494
0.005365
0.003929
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
7
5305429
18210
4317542
757918.428571
Counter: #vertices {Partitioning hypergraph}
7
229
0
163
32.714286
Counter: #vertices / #clauses {Partitioning hypergraph}
7
0.070927
0.000000
0.036626
0.010132
Counter: #hyperedges {Partitioning hypergraph}
7
38
0
22
5.428571
Counter: #hyperedges / #variables {Partitioning hypergraph}
7
0.013156
0.000000
0.008584
0.001879
Counter: hypergraph size {Partitioning hypergraph}
7
486
0
342
69.428571
Counter: hypergraph size / formula size {Partitioning hypergraph}
7
0.040945
0.000000
0.022613
0.005849
Timer: create equivalence structure [ns] {Partitioning hypergraph}
7
605167
7650
389148
86452.428571
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
91
42
0
1
0.461538
Number: #current entries {Cache - component caching}
1
49
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
91
91285611948
80400
15036570521
1003138592.835165
Timer: search cache record structure [ns] {Cache - component caching}
91
98120321
150
9234812
1078245.285714
Timer: add cache record structure [ns] {Cache - component caching}
49
41523946
370
6678852
847427.469388
Counter: #empty cache records / #cache records {Cache - component caching}
91
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
91
179875143
248
25690672
1976649.923077
Counter: formula size (positive hit) {Cache - component caching}
42
37769648
1040
4391392
899277.333333
Counter: formula size (negative hit) {Cache - component caching}
49
142105495
248
25690672
2900112.142857
Counter: #variables (cache record structure) {Cache - component caching}
91
26897290
124
3670240
295574.615385
Counter: #variables (positive hit) {Cache - component caching}
42
6107808
376
688336
145424.000000
Counter: #variables (negative hit) {Cache - component caching}
49
20789482
124
3670240
424275.142857
Counter: #clauses (cache record structure) {Cache - component caching}
91
26894784
84
3670275
295547.076923
Counter: #clauses (positive hit) {Cache - component caching}
42
6106751
357
688350
145398.833333
Counter: #clauses (negative hit) {Cache - component caching}
49
20788033
84
3670275
424245.571429
Counter: #removed clauses / #clauses {Cache - component caching}
91
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
42
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
49
33760
40
3120
688.979592
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
49
49
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
