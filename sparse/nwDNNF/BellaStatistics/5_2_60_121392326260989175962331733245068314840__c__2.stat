Number: formula size {Formula representation}
1
440
Number: #variables {Formula representation}
1
110
Number: #clauses {Formula representation}
1
100
Timer (reduced): initialize [ns] {Formula representation}
1
85550
Timer: compute connected components [ns] {Formula representation}
11
207550
1070
62270
18868.181818
Number: circuit size {Circuit}
1
826
Number: #nodes {Circuit}
1
575
Number: #edges {Circuit}
1
826
Number: #variables {Circuit}
1
110
Timer: copy subcircuit [ns] {Circuit}
4
122200
7870
62840
30550.000000
Counter: formula size (copy subcircuit) {Circuit}
4
500
32
240
125.000000
Counter: #variables (copy subcircuit) {Circuit}
4
180
16
74
45.000000
Counter: #clauses (copy subcircuit) {Circuit}
4
148
12
64
37.000000
Timer (reduced): initialize [ns] {Compiler}
1
1948266
Timer (reduced): compile [ns] {Compiler}
1
1959866
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
0
Number: #decisions {Compiler}
1
5
Counter: ratio of recomputed hypergraph cuts {Compiler}
9
1
0
1
0.111111
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
1
0
0
0
0.000000
Counter: #connected components {Compiler}
11
9
0
1
0.818182
Counter: #monotone residual formulae / #residual formulae {Compiler}
11
2
0
1
0.181818
Counter: monotone residual formula size {Compiler}
2
16
8
8
8.000000
Counter: #pure clauses / #clauses {Compiler}
11
2.633333
0.000000
1.000000
0.239394
Counter: pure residual formula size / residual formula size {Compiler}
11
2.490909
0.000000
1.000000
0.226446
Timer: assign literal [ns] {Compiler}
20
33440
490
7350
1672.000000
Timer: unassign literal [ns] {Compiler}
20
13740
240
1680
687.000000
Timer: get decision variable [ns] {Decision heuristic}
5
1110
50
650
222.000000
Counter: #preselected variables {Decision heuristic}
5
15
1
5
3.000000
Counter: #restricted variables / #preselected variables {Decision heuristic}
0
0.000000
0.000000
0.000000
0.000000
Timer (reduced): initialize [ns] {SAT solver}
1
60850
Timer (reduced): initial simplification [ns] {SAT solver}
1
250
Timer (reduced): initially implied literals [ns] {SAT solver}
1
150
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
11
50510
1240
10950
4591.818182
Timer: unit propagation [ns] {SAT solver}
11
3180
150
810
289.090909
Counter: #implied literals {SAT solver}
11
20
0
2
1.818182
Counter: #implied literals / #variables {SAT solver}
11
0.660530
0.000000
0.200000
0.060048
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
1
58070
58070
58070
58070.000000
Counter: #implicit implied literals / #variables {SAT solver}
1
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
1
0.045455
0.045455
0.045455
0.045455
Timer: compute cut [ns] {Partitioning hypergraph}
1
719349
719349
719349
719349.000000
Counter: cut size {Partitioning hypergraph}
1
5
5
5
5.000000
Counter: cut size / #variables {Partitioning hypergraph}
1
0.045455
0.045455
0.045455
0.045455
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
1
123809
123809
123809
123809.000000
Counter: #vertices {Partitioning hypergraph}
1
5
5
5
5.000000
Counter: #vertices / #clauses {Partitioning hypergraph}
1
0.050000
0.050000
0.050000
0.050000
Counter: #hyperedges {Partitioning hypergraph}
1
5
5
5
5.000000
Counter: #hyperedges / #variables {Partitioning hypergraph}
1
0.045455
0.045455
0.045455
0.045455
Counter: hypergraph size {Partitioning hypergraph}
1
15
15
15
15.000000
Counter: hypergraph size / formula size {Partitioning hypergraph}
1
0.034091
0.034091
0.034091
0.034091
Timer: create equivalence structure [ns] {Partitioning hypergraph}
1
13870
13870
13870
13870.000000
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
9
4
0
1
0.444444
Number: #current entries {Cache - component caching}
1
5
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
9
469679
9520
149070
52186.555556
Timer: search cache record structure [ns] {Cache - component caching}
9
1980
60
420
220.000000
Timer: add cache record structure [ns] {Cache - component caching}
5
1770
140
1040
354.000000
Counter: #empty cache records / #cache records {Cache - component caching}
9
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
9
1440
32
440
160.000000
Counter: formula size (positive hit) {Cache - component caching}
4
500
32
240
125.000000
Counter: formula size (negative hit) {Cache - component caching}
5
940
32
440
188.000000
Counter: #variables (cache record structure) {Cache - component caching}
9
470
16
110
52.222222
Counter: #variables (positive hit) {Cache - component caching}
4
180
16
74
45.000000
Counter: #variables (negative hit) {Cache - component caching}
5
290
16
110
58.000000
Counter: #clauses (cache record structure) {Cache - component caching}
9
396
12
100
44.000000
Counter: #clauses (positive hit) {Cache - component caching}
4
148
12
64
37.000000
Counter: #clauses (negative hit) {Cache - component caching}
5
248
12
100
49.600000
Counter: #removed clauses / #clauses {Cache - component caching}
9
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
4
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
5
320
40
100
64.000000
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
5
5
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
