Number: formula size {Formula representation}
1
466800
Number: #variables {Formula representation}
1
77880
Number: #clauses {Formula representation}
1
77870
Timer (reduced): initialize [ns] {Formula representation}
1
45842703
Timer: compute connected components [ns] {Formula representation}
61
153925323
8170
21532589
2523365.950820
Number: circuit size {Circuit}
1
624400
Number: #nodes {Circuit}
1
285875
Number: #edges {Circuit}
1
624400
Number: #variables {Circuit}
1
77880
Timer: copy subcircuit [ns] {Circuit}
23
101555701
43890
17932827
4415465.260870
Counter: formula size (copy subcircuit) {Circuit}
23
682600
260
105168
29678.260870
Counter: #variables (copy subcircuit) {Circuit}
23
133562
130
19548
5807.043478
Counter: #clauses (copy subcircuit) {Circuit}
23
132788
88
19528
5773.391304
Timer (reduced): initialize [ns] {Compiler}
1
38283718
Timer (reduced): compile [ns] {Compiler}
1
2261532073
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
0
Number: #decisions {Compiler}
1
30
Counter: ratio of recomputed hypergraph cuts {Compiler}
53
31
0
1
0.584906
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
16
11
0
1
0.687500
Counter: #connected components {Compiler}
61
53
0
1
0.868852
Counter: #monotone residual formulae / #residual formulae {Compiler}
61
8
0
1
0.131148
Counter: monotone residual formula size {Compiler}
8
696
84
96
87.000000
Counter: #pure clauses / #clauses {Compiler}
61
9.014769
0.000000
1.000000
0.147783
Counter: pure residual formula size / residual formula size {Compiler}
61
8.714672
0.000000
1.000000
0.142863
Timer: assign literal [ns] {Compiler}
96
1088655839
700
319955998
11340164.989583
Timer: unassign literal [ns] {Compiler}
96
16304321
290
3028045
169836.677083
Timer: get decision variable [ns] {Decision heuristic}
30
4519773
80
1436887
150659.100000
Counter: #preselected variables {Decision heuristic}
30
347972
1
77880
11599.066667
Counter: #restricted variables / #preselected variables {Decision heuristic}
11
0.014552
0.000385
0.003275
0.001323
Timer (reduced): initialize [ns] {SAT solver}
1
15972130
Timer (reduced): initial simplification [ns] {SAT solver}
1
680
Timer (reduced): initially implied literals [ns] {SAT solver}
1
440
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
61
52249569
5740
7426446
856550.311475
Timer: unit propagation [ns] {SAT solver}
61
36510
170
4610
598.524590
Counter: #implied literals {SAT solver}
61
132
0
6
2.163934
Counter: #implied literals / #variables {SAT solver}
61
0.234523
0.000000
0.023256
0.003845
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
10
3531573
53010
2425435
353157.300000
Counter: #implicit implied literals / #variables {SAT solver}
10
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
10
0.058168
0.000000
0.008065
0.005817
Timer: compute cut [ns] {Partitioning hypergraph}
2
9697532
2979474
6718058
4848766.000000
Counter: cut size {Partitioning hypergraph}
2
21
8
13
10.500000
Counter: cut size / #variables {Partitioning hypergraph}
2
0.008738
0.002786
0.005952
0.004369
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
5
5348009
19280
4576891
1069601.800000
Counter: #vertices {Partitioning hypergraph}
5
221
0
183
44.200000
Counter: #vertices / #clauses {Partitioning hypergraph}
5
0.068649
0.000000
0.039508
0.013730
Counter: #hyperedges {Partitioning hypergraph}
5
29
0
17
5.800000
Counter: #hyperedges / #variables {Partitioning hypergraph}
5
0.012572
0.000000
0.008929
0.002514
Counter: hypergraph size {Partitioning hypergraph}
5
641
0
557
128.200000
Counter: hypergraph size / formula size {Partitioning hypergraph}
5
0.042666
0.000000
0.025717
0.008533
Timer: create equivalence structure [ns] {Partitioning hypergraph}
5
582219
10270
425629
116443.800000
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
53
23
0
1
0.433962
Number: #current entries {Cache - component caching}
1
30
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
53
754898798
83860
132509310
14243373.547170
Timer: search cache record structure [ns] {Cache - component caching}
53
560098
140
80690
10567.886792
Timer: add cache record structure [ns] {Cache - component caching}
30
915230
250
492460
30507.666667
Counter: #empty cache records / #cache records {Cache - component caching}
53
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
53
2801756
260
466800
52863.320755
Counter: formula size (positive hit) {Cache - component caching}
23
682600
260
105168
29678.260870
Counter: formula size (negative hit) {Cache - component caching}
30
2119156
260
466800
70638.533333
Counter: #variables (cache record structure) {Cache - component caching}
53
502516
130
77880
9481.433962
Counter: #variables (positive hit) {Cache - component caching}
23
133562
130
19548
5807.043478
Counter: #variables (negative hit) {Cache - component caching}
30
368954
130
77880
12298.466667
Counter: #clauses (cache record structure) {Cache - component caching}
53
500654
88
77870
9446.301887
Counter: #clauses (positive hit) {Cache - component caching}
23
132788
88
19528
5773.391304
Counter: #clauses (negative hit) {Cache - component caching}
30
367866
88
77870
12262.200000
Counter: #removed clauses / #clauses {Cache - component caching}
53
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
23
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
30
4380
30
660
146.000000
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
30
30
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
