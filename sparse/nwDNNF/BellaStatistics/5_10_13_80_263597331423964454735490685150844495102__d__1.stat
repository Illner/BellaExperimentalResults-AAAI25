Number: formula size {Formula representation}
1
22280245
Number: #variables {Formula representation}
1
3713190
Number: #clauses {Formula representation}
1
3714180
Timer (reduced): initialize [ns] {Formula representation}
1
2193105023
Timer: compute connected components [ns] {Formula representation}
156
3360123359
530
478940584
21539252.301282
Number: circuit size {Circuit}
1
448475932
Number: #nodes {Circuit}
1
140896859
Number: #edges {Circuit}
1
448475932
Number: #variables {Circuit}
1
3713190
Timer: copy subcircuit [ns] {Circuit}
225
140863480251
20669
25001751082
626059912.226667
Counter: formula size (copy subcircuit) {Circuit}
225
20455839
195
1430520
90914.840000
Counter: #variables (copy subcircuit) {Circuit}
225
4159326
26
285844
18485.893333
Counter: #clauses (copy subcircuit) {Circuit}
225
4213644
92
286768
18727.306667
Timer (reduced): initialize [ns] {Compiler}
1
3053968854
Timer (reduced): compile [ns] {Compiler}
1
1677470554716
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
13
Number: #splits {Compiler}
1
191
Number: #decisions {Compiler}
1
84
Counter: ratio of recomputed hypergraph cuts {Compiler}
309
267
0
1
0.864078
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
54
50
0
1
0.925926
Counter: #connected components {Compiler}
156
309
1
7
1.980769
Counter: #monotone residual formulae / #residual formulae {Compiler}
156
0
0
0
0.000000
Counter: monotone residual formula size {Compiler}
0
0
0
0
0.000000
Counter: #pure clauses / #clauses {Compiler}
156
0.000000
0.000000
0.000000
0.000000
Counter: pure residual formula size / residual formula size {Compiler}
156
0.000000
0.000000
0.000000
0.000000
Timer: assign literal [ns] {Compiler}
259
1359881955460
270
336816381154
5250509480.540541
Timer: unassign literal [ns] {Compiler}
259
8878309662
250
1494575605
34279187.884170
Timer: get decision variable [ns] {Decision heuristic}
84
1767468105
50
258550090
21041286.964286
Counter: #preselected variables {Decision heuristic}
84
28327054
2
3713190
337226.833333
Counter: #restricted variables / #preselected variables {Decision heuristic}
0
0.000000
0.000000
0.000000
0.000000
Timer (reduced): initialize [ns] {SAT solver}
1
778167290
Timer (reduced): initial simplification [ns] {SAT solver}
1
1740
Timer (reduced): initially implied literals [ns] {SAT solver}
1
1350
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
169
13780338210
380
1115824424
81540462.781065
Timer: unit propagation [ns] {SAT solver}
169
1577282
90
332587
9333.029586
Counter: #implied literals {SAT solver}
169
644
0
13
3.810651
Counter: #implied literals / #variables {SAT solver}
169
7.788272
0.000000
1.000000
0.046084
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
181
91128672
13350
10068338
503473.325967
Counter: #implicit implied literals / #variables {SAT solver}
181
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
181
0.000000
0.000000
0.000000
0.000000
Timer: compute cut [ns] {Partitioning hypergraph}
4
895395115
468366
429986250
223848778.750000
Counter: cut size {Partitioning hypergraph}
4
64
13
19
16.000000
Counter: cut size / #variables {Partitioning hypergraph}
4
0.517654
0.003827
0.500000
0.129413
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
4
19070725
113669
9248885
4767681.250000
Counter: #vertices {Partitioning hypergraph}
4
10874
14
4828
2718.500000
Counter: #vertices / #clauses {Partitioning hypergraph}
4
2.504555
0.152174
0.846869
0.626139
Counter: #hyperedges {Partitioning hypergraph}
4
415
13
149
103.750000
Counter: #hyperedges / #variables {Partitioning hypergraph}
4
0.640020
0.030010
0.500000
0.160005
Counter: hypergraph size {Partitioning hypergraph}
4
30145
26
13818
7536.250000
Counter: hypergraph size / formula size {Partitioning hypergraph}
4
1.993326
0.133333
0.678018
0.498332
Timer: create equivalence structure [ns] {Partitioning hypergraph}
4
1848833
4950
810592
462208.250000
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
309
225
0
1
0.728155
Number: #current entries {Cache - component caching}
1
84
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
309
144724428941
2190
27527004754
468363847.705502
Timer: search cache record structure [ns] {Cache - component caching}
309
115362192
30
11350736
373340.427184
Timer: add cache record structure [ns] {Cache - component caching}
84
2266830873
200
501186878
26986081.821429
Counter: #empty cache records / #cache records {Cache - component caching}
309
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
309
187753131
8
22280245
607615.310680
Counter: formula size (positive hit) {Cache - component caching}
225
20455839
195
1430520
90914.840000
Counter: formula size (negative hit) {Cache - component caching}
84
167297292
8
22280245
1991634.428571
Counter: #variables (cache record structure) {Cache - component caching}
309
32530982
4
3713190
105278.258900
Counter: #variables (positive hit) {Cache - component caching}
225
4159326
26
285844
18485.893333
Counter: #variables (negative hit) {Cache - component caching}
84
28371656
4
3713190
337757.809524
Counter: #clauses (cache record structure) {Cache - component caching}
309
32641092
4
3714180
105634.601942
Counter: #clauses (positive hit) {Cache - component caching}
225
4213644
92
286768
18727.306667
Counter: #clauses (negative hit) {Cache - component caching}
84
28427448
4
3714180
338422.000000
Counter: #removed clauses / #clauses {Cache - component caching}
309
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
225
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
84
38730
30
5920
461.071429
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
84
84
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
