Number: formula size {Formula representation}
1
11140610
Number: #variables {Formula representation}
1
1856660
Number: #clauses {Formula representation}
1
1857320
Timer (reduced): initialize [ns] {Formula representation}
1
1107618758
Timer: compute connected components [ns] {Formula representation}
132
1485336141
460
193622237
11252546.522727
Number: circuit size {Circuit}
1
255273442
Number: #nodes {Circuit}
1
79804581
Number: #edges {Circuit}
1
255273442
Number: #variables {Circuit}
1
1856660
Timer: copy subcircuit [ns] {Circuit}
112
48530243166
21360
4931053521
433305742.553571
Counter: formula size (copy subcircuit) {Circuit}
112
11031696
195
715650
98497.285714
Counter: #variables (copy subcircuit) {Circuit}
112
2236520
26
142974
19968.928571
Counter: #clauses (copy subcircuit) {Circuit}
112
2263712
92
143568
20211.714286
Timer (reduced): initialize [ns] {Compiler}
1
1237056882
Timer (reduced): compile [ns] {Compiler}
1
443649447081
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
13
Number: #splits {Compiler}
1
78
Number: #decisions {Compiler}
1
72
Counter: ratio of recomputed hypergraph cuts {Compiler}
184
140
0
1
0.760870
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
40
37
0
1
0.925000
Counter: #connected components {Compiler}
132
184
1
4
1.393939
Counter: #monotone residual formulae / #residual formulae {Compiler}
132
0
0
0
0.000000
Counter: monotone residual formula size {Compiler}
0
0
0
0
0.000000
Counter: #pure clauses / #clauses {Compiler}
132
0.000000
0.000000
0.000000
0.000000
Counter: pure residual formula size / residual formula size {Compiler}
132
0.000000
0.000000
0.000000
0.000000
Timer: assign literal [ns] {Compiler}
222
328686711615
230
92588362413
1480570773.040541
Timer: unassign literal [ns] {Compiler}
222
745925226
210
83564811
3360023.540541
Timer: get decision variable [ns] {Decision heuristic}
72
633090639
50
94517879
8792925.541667
Counter: #preselected variables {Decision heuristic}
72
14266932
2
1856660
198151.833333
Counter: #restricted variables / #preselected variables {Decision heuristic}
0
0.000000
0.000000
0.000000
0.000000
Timer (reduced): initialize [ns] {SAT solver}
1
404152158
Timer (reduced): initial simplification [ns] {SAT solver}
1
1410
Timer (reduced): initially implied literals [ns] {SAT solver}
1
760
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
145
4401298690
460
358377875
30353784.068966
Timer: unit propagation [ns] {SAT solver}
145
718508
100
207879
4955.227586
Counter: #implied literals {SAT solver}
145
552
0
13
3.806897
Counter: #implied literals / #variables {SAT solver}
145
7.878388
0.000000
1.000000
0.054334
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
67
6499696
14740
4694620
97010.388060
Counter: #implicit implied literals / #variables {SAT solver}
67
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
67
0.000000
0.000000
0.000000
0.000000
Timer: compute cut [ns] {Partitioning hypergraph}
3
397162533
477139
371089528
132387511.000000
Counter: cut size {Partitioning hypergraph}
3
51
13
25
17.000000
Counter: cut size / #variables {Partitioning hypergraph}
3
0.522600
0.005359
0.500000
0.174200
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
3
8948450
44890
7769183
2982816.666667
Counter: #vertices {Partitioning hypergraph}
3
5290
14
4582
1763.333333
Counter: #vertices / #clauses {Partitioning hypergraph}
3
1.688017
0.152174
0.895622
0.562672
Counter: #hyperedges {Partitioning hypergraph}
3
168
13
90
56.000000
Counter: #hyperedges / #variables {Partitioning hypergraph}
3
0.605500
0.019293
0.500000
0.201833
Counter: hypergraph size {Partitioning hypergraph}
3
14727
26
13271
4909.000000
Counter: hypergraph size / formula size {Partitioning hypergraph}
3
1.328256
0.133333
0.701650
0.442752
Timer: create equivalence structure [ns] {Partitioning hypergraph}
3
858409
5640
746069
286136.333333
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
184
112
0
1
0.608696
Number: #current entries {Cache - component caching}
1
72
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
184
58386713318
2290
10681574289
317319094.119565
Timer: search cache record structure [ns] {Cache - component caching}
184
38051821
30
3112873
206803.375000
Timer: add cache record structure [ns] {Cache - component caching}
72
27638282
180
3393623
383865.027778
Counter: #empty cache records / #cache records {Cache - component caching}
184
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
184
95320740
8
11140610
518047.500000
Counter: formula size (positive hit) {Cache - component caching}
112
11031696
195
715650
98497.285714
Counter: formula size (negative hit) {Cache - component caching}
72
84289044
8
11140610
1170681.166667
Counter: #variables (cache record structure) {Cache - component caching}
184
16540616
4
1856660
89894.652174
Counter: #variables (positive hit) {Cache - component caching}
112
2236520
26
142974
19968.928571
Counter: #variables (negative hit) {Cache - component caching}
72
14304096
4
1856660
198668.000000
Counter: #clauses (cache record structure) {Cache - component caching}
184
16596452
4
1857320
90198.108696
Counter: #clauses (positive hit) {Cache - component caching}
112
2263712
92
143568
20211.714286
Counter: #clauses (negative hit) {Cache - component caching}
72
14332740
4
1857320
199065.833333
Counter: #removed clauses / #clauses {Cache - component caching}
184
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
112
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
72
21190
20
1170
294.305556
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
72
72
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
