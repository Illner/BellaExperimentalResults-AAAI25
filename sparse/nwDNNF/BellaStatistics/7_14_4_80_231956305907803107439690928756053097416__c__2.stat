Number: formula size {Formula representation}
1
401576
Number: #variables {Formula representation}
1
57456
Number: #clauses {Formula representation}
1
57421
Timer (reduced): initialize [ns] {Formula representation}
1
44836841
Timer: compute connected components [ns] {Formula representation}
61
122659165
7360
23464621
2010805.983607
Number: circuit size {Circuit}
1
1002825
Number: #nodes {Circuit}
1
293767
Number: #edges {Circuit}
1
1002825
Number: #variables {Circuit}
1
57456
Timer: copy subcircuit [ns] {Circuit}
25
164351025
45100
41628676
6574041.000000
Counter: formula size (copy subcircuit) {Circuit}
25
587984
248
131216
23519.360000
Counter: #variables (copy subcircuit) {Circuit}
25
100120
124
20584
4004.800000
Counter: #clauses (copy subcircuit) {Circuit}
25
99074
84
20546
3962.960000
Timer (reduced): initialize [ns] {Compiler}
1
48802253
Timer (reduced): compile [ns] {Compiler}
1
1445531654
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
0
Number: #decisions {Compiler}
1
30
Counter: ratio of recomputed hypergraph cuts {Compiler}
55
21
0
1
0.381818
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
11
8
0
1
0.727273
Counter: #connected components {Compiler}
61
55
0
1
0.901639
Counter: #monotone residual formulae / #residual formulae {Compiler}
61
6
0
1
0.098361
Counter: monotone residual formula size {Compiler}
6
416
64
80
69.333333
Counter: #pure clauses / #clauses {Compiler}
61
6.999421
0.000000
1.000000
0.114745
Counter: pure residual formula size / residual formula size {Compiler}
61
6.681664
0.000000
1.000000
0.109535
Timer: assign literal [ns] {Compiler}
100
431428839
1010
147428044
4314288.390000
Timer: unassign literal [ns] {Compiler}
100
12133843
250
1951881
121338.430000
Timer: get decision variable [ns] {Decision heuristic}
30
3886151
60
1101915
129538.366667
Counter: #preselected variables {Decision heuristic}
30
197838
1
57456
6594.600000
Counter: #restricted variables / #preselected variables {Decision heuristic}
8
0.012147
0.000487
0.003176
0.001518
Timer (reduced): initialize [ns] {SAT solver}
1
17029061
Timer (reduced): initial simplification [ns] {SAT solver}
1
1110
Timer (reduced): initially implied literals [ns] {SAT solver}
1
770
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
61
38441854
9130
5589444
630194.327869
Timer: unit propagation [ns] {SAT solver}
61
46679
210
5250
765.229508
Counter: #implied literals {SAT solver}
61
110
0
4
1.803279
Counter: #implied literals / #variables {SAT solver}
61
0.263483
0.000000
0.030303
0.004319
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
7
6462478
72880
2683747
923211.142857
Counter: #implicit implied literals / #variables {SAT solver}
7
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
7
0.032483
0.000000
0.008065
0.004640
Timer: compute cut [ns] {Partitioning hypergraph}
2
21007033
10142313
10864720
10503516.500000
Counter: cut size {Partitioning hypergraph}
2
27
13
14
13.500000
Counter: cut size / #variables {Partitioning hypergraph}
2
0.007627
0.003150
0.004477
0.003813
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
3
17912856
23520
13490047
5970952.000000
Counter: #vertices {Partitioning hypergraph}
3
520
0
260
173.333333
Counter: #vertices / #clauses {Partitioning hypergraph}
3
0.150000
0.000000
0.090909
0.050000
Counter: #hyperedges {Partitioning hypergraph}
3
33
0
17
11.000000
Counter: #hyperedges / #variables {Partitioning hypergraph}
3
0.009335
0.000000
0.005510
0.003112
Counter: hypergraph size {Partitioning hypergraph}
3
1760
0
976
586.666667
Counter: hypergraph size / formula size {Partitioning hypergraph}
3
0.096283
0.000000
0.056322
0.032094
Timer: create equivalence structure [ns] {Partitioning hypergraph}
3
793166
13150
525377
264388.666667
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
55
25
0
1
0.454545
Number: #current entries {Cache - component caching}
1
30
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
55
572855881
75969
123411326
10415561.472727
Timer: search cache record structure [ns] {Cache - component caching}
55
635328
160
209919
11551.418182
Timer: add cache record structure [ns] {Cache - component caching}
30
1013464
300
460047
33782.133333
Counter: #empty cache records / #cache records {Cache - component caching}
55
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
55
2017750
200
401576
36686.363636
Counter: formula size (positive hit) {Cache - component caching}
25
587984
248
131216
23519.360000
Counter: formula size (negative hit) {Cache - component caching}
30
1429766
200
401576
47658.866667
Counter: #variables (cache record structure) {Cache - component caching}
55
319532
100
57456
5809.672727
Counter: #variables (positive hit) {Cache - component caching}
25
100120
124
20584
4004.800000
Counter: #variables (negative hit) {Cache - component caching}
30
219412
100
57456
7313.733333
Counter: #clauses (cache record structure) {Cache - component caching}
55
317177
68
57421
5766.854545
Counter: #clauses (positive hit) {Cache - component caching}
25
99074
84
20546
3962.960000
Counter: #clauses (negative hit) {Cache - component caching}
30
218103
68
57421
7270.100000
Counter: #removed clauses / #clauses {Cache - component caching}
55
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
25
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
30
9170
50
1610
305.666667
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
30
30
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
