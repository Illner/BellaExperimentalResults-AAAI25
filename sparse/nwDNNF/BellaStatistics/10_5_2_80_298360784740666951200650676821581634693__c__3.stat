Number: formula size {Formula representation}
1
25680
Number: #variables {Formula representation}
1
2610
Number: #clauses {Formula representation}
1
2600
Timer (reduced): initialize [ns] {Formula representation}
1
3296510
Timer: compute connected components [ns] {Formula representation}
21
3087952
1270
1134323
147045.333333
Number: circuit size {Circuit}
1
28146
Number: #nodes {Circuit}
1
16479
Number: #edges {Circuit}
1
28146
Number: #variables {Circuit}
1
2610
Timer: copy subcircuit [ns] {Circuit}
9
4054425
9320
2076097
450491.666667
Counter: formula size (copy subcircuit) {Circuit}
9
21640
44
11592
2404.444444
Counter: #variables (copy subcircuit) {Circuit}
9
2946
22
1326
327.333333
Counter: #clauses (copy subcircuit) {Circuit}
9
2860
16
1316
317.777778
Timer (reduced): initialize [ns] {Compiler}
1
4598941
Timer (reduced): compile [ns] {Compiler}
1
32464780
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
0
Number: #decisions {Compiler}
1
10
Counter: ratio of recomputed hypergraph cuts {Compiler}
19
3
0
1
0.157895
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
2
0
0
0
0.000000
Counter: #connected components {Compiler}
21
19
0
1
0.904762
Counter: #monotone residual formulae / #residual formulae {Compiler}
21
2
0
1
0.095238
Counter: monotone residual formula size {Compiler}
2
24
12
12
12.000000
Counter: #pure clauses / #clauses {Compiler}
21
2.400000
0.000000
1.000000
0.114286
Counter: pure residual formula size / residual formula size {Compiler}
21
2.307692
0.000000
1.000000
0.109890
Timer: assign literal [ns] {Compiler}
40
5133328
440
2120097
128333.200000
Timer: unassign literal [ns] {Compiler}
40
324297
220
73639
8107.425000
Timer: get decision variable [ns] {Decision heuristic}
10
3540
50
2470
354.000000
Counter: #preselected variables {Decision heuristic}
10
46
1
9
4.600000
Counter: #restricted variables / #preselected variables {Decision heuristic}
0
0.000000
0.000000
0.000000
0.000000
Timer (reduced): initialize [ns] {SAT solver}
1
1198783
Timer (reduced): initial simplification [ns] {SAT solver}
1
450
Timer (reduced): initially implied literals [ns] {SAT solver}
1
230
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
21
663137
1460
167758
31577.952381
Timer: unit propagation [ns] {SAT solver}
21
6770
130
840
322.380952
Counter: #implied literals {SAT solver}
21
40
0
2
1.904762
Counter: #implied literals / #variables {SAT solver}
21
0.573997
0.000000
0.142857
0.027333
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
3
1494030
10319
1471211
498010.000000
Counter: #implicit implied literals / #variables {SAT solver}
3
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
3
0.094741
0.003831
0.045455
0.031580
Timer: compute cut [ns] {Partitioning hypergraph}
1
746476
746476
746476
746476.000000
Counter: cut size {Partitioning hypergraph}
1
9
9
9
9.000000
Counter: cut size / #variables {Partitioning hypergraph}
1
0.003448
0.003448
0.003448
0.003448
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
2
4971239
5320
4965919
2485619.500000
Counter: #vertices {Partitioning hypergraph}
2
5
0
5
2.500000
Counter: #vertices / #clauses {Partitioning hypergraph}
2
0.001923
0.000000
0.001923
0.000962
Counter: #hyperedges {Partitioning hypergraph}
2
10
0
10
5.000000
Counter: #hyperedges / #variables {Partitioning hypergraph}
2
0.003831
0.000000
0.003831
0.001916
Counter: hypergraph size {Partitioning hypergraph}
2
40
0
40
20.000000
Counter: hypergraph size / formula size {Partitioning hypergraph}
2
0.001558
0.000000
0.001558
0.000779
Timer: create equivalence structure [ns] {Partitioning hypergraph}
2
218449
2070
216379
109224.500000
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
19
9
0
1
0.473684
Number: #current entries {Cache - component caching}
1
10
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
19
10538325
13120
3537138
554648.684211
Timer: search cache record structure [ns] {Cache - component caching}
19
21230
120
7450
1117.368421
Timer: add cache record structure [ns] {Cache - component caching}
10
9440
120
3640
944.000000
Counter: #empty cache records / #cache records {Cache - component caching}
19
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
19
68960
44
25680
3629.473684
Counter: formula size (positive hit) {Cache - component caching}
9
21640
44
11592
2404.444444
Counter: formula size (negative hit) {Cache - component caching}
10
47320
44
25680
4732.000000
Counter: #variables (cache record structure) {Cache - component caching}
19
8502
22
2610
447.473684
Counter: #variables (positive hit) {Cache - component caching}
9
2946
22
1326
327.333333
Counter: #variables (negative hit) {Cache - component caching}
10
5556
22
2610
555.600000
Counter: #clauses (cache record structure) {Cache - component caching}
19
8320
16
2600
437.894737
Counter: #clauses (positive hit) {Cache - component caching}
9
2860
16
1316
317.777778
Counter: #clauses (negative hit) {Cache - component caching}
10
5460
16
2600
546.000000
Counter: #removed clauses / #clauses {Cache - component caching}
19
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
9
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
10
690
30
260
69.000000
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
10
10
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
