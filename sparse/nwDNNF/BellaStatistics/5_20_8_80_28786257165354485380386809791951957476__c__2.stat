Number: formula size {Formula representation}
1
3932560
Number: #variables {Formula representation}
1
655600
Number: #clauses {Formula representation}
1
655545
Timer (reduced): initialize [ns] {Formula representation}
1
381505137
Timer: compute connected components [ns] {Formula representation}
71
1744807116
21540
208687293
24574748.112676
Number: circuit size {Circuit}
1
5396759
Number: #nodes {Circuit}
1
2176623
Number: #edges {Circuit}
1
5396759
Number: #variables {Circuit}
1
655600
Timer: copy subcircuit [ns] {Circuit}
28
1055419876
393459
143508774
37693567.000000
Counter: formula size (copy subcircuit) {Circuit}
28
6276704
2576
762176
224168.000000
Counter: #variables (copy subcircuit) {Circuit}
28
1188824
952
139488
42458.000000
Counter: #clauses (copy subcircuit) {Circuit}
28
1186206
869
139412
42364.500000
Timer (reduced): initialize [ns] {Compiler}
1
365619062
Timer (reduced): compile [ns] {Compiler}
1
105833196736
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
0
Number: #decisions {Compiler}
1
35
Counter: ratio of recomputed hypergraph cuts {Compiler}
63
46
0
1
0.730159
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
25
21
0
1
0.840000
Counter: #connected components {Compiler}
71
63
0
1
0.887324
Counter: #monotone residual formulae / #residual formulae {Compiler}
71
8
0
1
0.112676
Counter: monotone residual formula size {Compiler}
8
1664
208
208
208.000000
Counter: #pure clauses / #clauses {Compiler}
71
8.484324
0.000000
1.000000
0.119498
Counter: pure residual formula size / residual formula size {Compiler}
71
8.333333
0.000000
1.000000
0.117371
Timer: assign literal [ns] {Compiler}
110
89424240999
1910
27552006302
812947645.445455
Timer: unassign literal [ns] {Compiler}
110
250903523
490
37139968
2280941.118182
Timer: get decision variable [ns] {Decision heuristic}
35
78657736
90
14945929
2247363.885714
Counter: #preselected variables {Decision heuristic}
35
3786227
1
655600
108177.914286
Counter: #restricted variables / #preselected variables {Decision heuristic}
21
0.013451
0.000061
0.002403
0.000641
Timer (reduced): initialize [ns] {SAT solver}
1
138552147
Timer (reduced): initial simplification [ns] {SAT solver}
1
1370
Timer (reduced): initially implied literals [ns] {SAT solver}
1
370
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
71
840173916
101500
86022202
11833435.436620
Timer: unit propagation [ns] {SAT solver}
71
110230
210
13710
1552.535211
Counter: #implied literals {SAT solver}
71
185
0
8
2.605634
Counter: #implied literals / #variables {SAT solver}
71
0.079290
0.000000
0.009524
0.001117
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
11
34309798
432409
6670002
3119072.545455
Counter: #implicit implied literals / #variables {SAT solver}
11
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
11
0.003165
0.000000
0.003165
0.000288
Timer: compute cut [ns] {Partitioning hypergraph}
1
4048430
4048430
4048430
4048430.000000
Counter: cut size {Partitioning hypergraph}
1
12
12
12
12.000000
Counter: cut size / #variables {Partitioning hypergraph}
1
0.002604
0.002604
0.002604
0.002604
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
4
2407163
40930
2238943
601790.750000
Counter: #vertices {Partitioning hypergraph}
4
66
0
66
16.500000
Counter: #vertices / #clauses {Partitioning hypergraph}
4
0.014699
0.000000
0.014699
0.003675
Counter: #hyperedges {Partitioning hypergraph}
4
16
0
16
4.000000
Counter: #hyperedges / #variables {Partitioning hypergraph}
4
0.003472
0.000000
0.003472
0.000868
Counter: hypergraph size {Partitioning hypergraph}
4
144
0
144
36.000000
Counter: hypergraph size / formula size {Partitioning hypergraph}
4
0.008475
0.000000
0.008475
0.002119
Timer: create equivalence structure [ns] {Partitioning hypergraph}
4
630038
20770
536299
157509.500000
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
63
28
0
1
0.444444
Number: #current entries {Cache - component caching}
1
35
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
63
11483039536
243969
2023078308
182270468.825397
Timer: search cache record structure [ns] {Cache - component caching}
63
12733112
150
1524566
202112.888889
Timer: add cache record structure [ns] {Cache - component caching}
35
9716592
380
1569016
277616.914286
Counter: #empty cache records / #cache records {Cache - component caching}
63
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
63
28565173
632
3932560
453415.444444
Counter: formula size (positive hit) {Cache - component caching}
28
6276704
2576
762176
224168.000000
Counter: formula size (negative hit) {Cache - component caching}
35
22288469
632
3932560
636813.400000
Counter: #variables (cache record structure) {Cache - component caching}
63
5001038
316
655600
79381.555556
Counter: #variables (positive hit) {Cache - component caching}
28
1188824
952
139488
42458.000000
Counter: #variables (negative hit) {Cache - component caching}
35
3812214
316
655600
108920.400000
Counter: #clauses (cache record structure) {Cache - component caching}
63
4994962
212
655545
79285.111111
Counter: #clauses (positive hit) {Cache - component caching}
28
1186206
869
139412
42364.500000
Counter: #clauses (negative hit) {Cache - component caching}
35
3808756
212
655545
108821.600000
Counter: #removed clauses / #clauses {Cache - component caching}
63
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
28
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
35
9570
40
1080
273.428571
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
35
35
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
