Number: formula size {Formula representation}
1
34640
Number: #variables {Formula representation}
1
3910
Number: #clauses {Formula representation}
1
3880
Timer (reduced): initialize [ns] {Formula representation}
1
4252665
Timer: compute connected components [ns] {Formula representation}
21
4919833
1940
1262935
234277.761905
Number: circuit size {Circuit}
1
41202
Number: #nodes {Circuit}
1
20615
Number: #edges {Circuit}
1
41202
Number: #variables {Circuit}
1
3910
Timer: copy subcircuit [ns] {Circuit}
9
5131953
11780
2393022
570217.000000
Counter: formula size (copy subcircuit) {Circuit}
9
38664
68
17992
4296.000000
Counter: #variables (copy subcircuit) {Circuit}
9
5726
34
2242
636.222222
Counter: #clauses (copy subcircuit) {Circuit}
9
5484
24
2212
609.333333
Timer (reduced): initialize [ns] {Compiler}
1
8429708
Timer (reduced): compile [ns] {Compiler}
1
50390312
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
0
Number: #decisions {Compiler}
1
10
Counter: ratio of recomputed hypergraph cuts {Compiler}
19
3
0
1
0.157895
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
2
0
0
0
0.000000
Counter: #connected components {Compiler}
21
19
0
1
0.904762
Counter: #monotone residual formulae / #residual formulae {Compiler}
21
2
0
1
0.095238
Counter: monotone residual formula size {Compiler}
2
40
20
20
20.000000
Counter: #pure clauses / #clauses {Compiler}
21
2.888889
0.000000
1.000000
0.137566
Counter: pure residual formula size / residual formula size {Compiler}
21
2.664596
0.000000
1.000000
0.126886
Timer: assign literal [ns] {Compiler}
40
7620151
510
2826649
190503.775000
Timer: unassign literal [ns] {Compiler}
40
387077
230
76409
9676.925000
Timer: get decision variable [ns] {Decision heuristic}
10
1670
50
600
167.000000
Counter: #preselected variables {Decision heuristic}
10
46
1
9
4.600000
Counter: #restricted variables / #preselected variables {Decision heuristic}
0
0.000000
0.000000
0.000000
0.000000
Timer (reduced): initialize [ns] {SAT solver}
1
1301555
Timer (reduced): initial simplification [ns] {SAT solver}
1
480
Timer (reduced): initially implied literals [ns] {SAT solver}
1
230
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
21
983628
2220
196530
46839.428571
Timer: unit propagation [ns] {SAT solver}
21
10820
160
3140
515.238095
Counter: #implied literals {SAT solver}
21
40
0
2
1.904762
Counter: #implied literals / #variables {SAT solver}
21
0.303401
0.000000
0.090909
0.014448
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
3
1957842
15520
1924022
652614.000000
Counter: #implicit implied literals / #variables {SAT solver}
3
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
3
0.061381
0.002558
0.029412
0.020460
Timer: compute cut [ns] {Partitioning hypergraph}
1
1435894
1435894
1435894
1435894.000000
Counter: cut size {Partitioning hypergraph}
1
9
9
9
9.000000
Counter: cut size / #variables {Partitioning hypergraph}
1
0.002302
0.002302
0.002302
0.002302
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
2
9360415
6230
9354185
4680207.500000
Counter: #vertices {Partitioning hypergraph}
2
15
0
15
7.500000
Counter: #vertices / #clauses {Partitioning hypergraph}
2
0.003866
0.000000
0.003866
0.001933
Counter: #hyperedges {Partitioning hypergraph}
2
10
0
10
5.000000
Counter: #hyperedges / #variables {Partitioning hypergraph}
2
0.002558
0.000000
0.002558
0.001279
Counter: hypergraph size {Partitioning hypergraph}
2
105
0
105
52.500000
Counter: hypergraph size / formula size {Partitioning hypergraph}
2
0.003031
0.000000
0.003031
0.001516
Timer: create equivalence structure [ns] {Partitioning hypergraph}
2
247079
2900
244179
123539.500000
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
19
9
0
1
0.473684
Number: #current entries {Cache - component caching}
1
10
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
19
16428750
19720
4501684
864671.052632
Timer: search cache record structure [ns] {Cache - component caching}
19
27820
90
10190
1464.210526
Timer: add cache record structure [ns] {Cache - component caching}
10
14180
160
4000
1418.000000
Counter: #empty cache records / #cache records {Cache - component caching}
19
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
19
111968
68
34640
5893.052632
Counter: formula size (positive hit) {Cache - component caching}
9
38664
68
17992
4296.000000
Counter: formula size (negative hit) {Cache - component caching}
10
73304
68
34640
7330.400000
Counter: #variables (cache record structure) {Cache - component caching}
19
15362
34
3910
808.526316
Counter: #variables (positive hit) {Cache - component caching}
9
5726
34
2242
636.222222
Counter: #variables (negative hit) {Cache - component caching}
10
9636
34
3910
963.600000
Counter: #clauses (cache record structure) {Cache - component caching}
19
14848
24
3880
781.473684
Counter: #clauses (positive hit) {Cache - component caching}
9
5484
24
2212
609.333333
Counter: #clauses (negative hit) {Cache - component caching}
10
9364
24
3880
936.400000
Counter: #removed clauses / #clauses {Cache - component caching}
19
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
9
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
10
650
30
160
65.000000
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
10
10
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
