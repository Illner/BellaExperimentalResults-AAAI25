Number: formula size {Formula representation}
1
7864536
Number: #variables {Formula representation}
1
786516
Number: #clauses {Formula representation}
1
786531
Timer (reduced): initialize [ns] {Formula representation}
1
677258655
Timer: compute connected components [ns] {Formula representation}
59
1389432600
1800
335419078
23549705.084746
Number: circuit size {Circuit}
1
7206217
Number: #nodes {Circuit}
1
4172623
Number: #edges {Circuit}
1
7206217
Number: #variables {Circuit}
1
786516
Timer: copy subcircuit [ns] {Circuit}
26
1887782753
49760
546092099
72607028.961538
Counter: formula size (copy subcircuit) {Circuit}
26
6819296
120
1769664
262280.615385
Counter: #variables (copy subcircuit) {Circuit}
26
787836
48
196684
30301.384615
Counter: #clauses (copy subcircuit) {Circuit}
26
787860
43
196696
30302.307692
Timer (reduced): initialize [ns] {Compiler}
1
544198006
Timer (reduced): compile [ns] {Compiler}
1
335923562530
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
0
Number: #decisions {Compiler}
1
29
Counter: ratio of recomputed hypergraph cuts {Compiler}
55
25
0
1
0.454545
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
13
12
0
1
0.923077
Counter: #connected components {Compiler}
59
55
0
1
0.932203
Counter: #monotone residual formulae / #residual formulae {Compiler}
59
4
0
1
0.067797
Counter: monotone residual formula size {Compiler}
4
64
16
16
16.000000
Counter: #pure clauses / #clauses {Compiler}
59
4.340426
0.000000
1.000000
0.073567
Counter: pure residual formula size / residual formula size {Compiler}
59
4.250000
0.000000
1.000000
0.072034
Timer: assign literal [ns] {Compiler}
96
316971885306
490
131618863955
3301790471.937500
Timer: unassign literal [ns] {Compiler}
96
280971156
240
52116731
2926782.875000
Timer: get decision variable [ns] {Decision heuristic}
29
69835592
70
25786791
2408123.862069
Counter: #preselected variables {Decision heuristic}
29
2351049
1
786516
81070.655172
Counter: #restricted variables / #preselected variables {Decision heuristic}
12
0.011197
0.000046
0.003548
0.000933
Timer (reduced): initialize [ns] {SAT solver}
1
205519184
Timer (reduced): initial simplification [ns] {SAT solver}
1
1320
Timer (reduced): initially implied literals [ns] {SAT solver}
1
640
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
59
801984805
61890
152863251
13592962.796610
Timer: unit propagation [ns] {SAT solver}
59
354211
200
243941
6003.576271
Counter: #implied literals {SAT solver}
59
106
0
4
1.796610
Counter: #implied literals / #variables {SAT solver}
59
0.628993
0.000000
0.111111
0.010661
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
4
32148479
6438491
12258088
8037119.750000
Counter: #implicit implied literals / #variables {SAT solver}
4
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
4
0.000000
0.000000
0.000000
0.000000
Timer: compute cut [ns] {Partitioning hypergraph}
1
31372740
31372740
31372740
31372740.000000
Counter: cut size {Partitioning hypergraph}
1
16
16
16
16.000000
Counter: cut size / #variables {Partitioning hypergraph}
1
0.005122
0.005122
0.005122
0.005122
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
1
16542296
16542296
16542296
16542296.000000
Counter: #vertices {Partitioning hypergraph}
1
773
773
773
773.000000
Counter: #vertices / #clauses {Partitioning hypergraph}
1
0.247202
0.247202
0.247202
0.247202
Counter: #hyperedges {Partitioning hypergraph}
1
20
20
20
20.000000
Counter: #hyperedges / #variables {Partitioning hypergraph}
1
0.006402
0.006402
0.006402
0.006402
Counter: hypergraph size {Partitioning hypergraph}
1
3092
3092
3092
3092.000000
Counter: hypergraph size / formula size {Partitioning hypergraph}
1
0.166667
0.166667
0.166667
0.166667
Timer: create equivalence structure [ns] {Partitioning hypergraph}
1
309570
309570
309570
309570.000000
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
55
26
0
1
0.472727
Number: #current entries {Cache - component caching}
1
29
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
55
13446652217
15540
4124830411
244484585.763636
Timer: search cache record structure [ns] {Cache - component caching}
55
13330387
140
3527185
242370.672727
Timer: add cache record structure [ns] {Cache - component caching}
29
6697901
280
2621364
230962.103448
Counter: #empty cache records / #cache records {Cache - component caching}
55
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
55
29630514
56
7864536
538736.618182
Counter: formula size (positive hit) {Cache - component caching}
26
6819296
120
1769664
262280.615385
Counter: formula size (negative hit) {Cache - component caching}
29
22811218
56
7864536
786593.724138
Counter: #variables (cache record structure) {Cache - component caching}
55
3148916
28
786516
57253.018182
Counter: #variables (positive hit) {Cache - component caching}
26
787836
48
196684
30301.384615
Counter: #variables (negative hit) {Cache - component caching}
29
2361080
28
786516
81416.551724
Counter: #clauses (cache record structure) {Cache - component caching}
55
3148971
20
786531
57254.018182
Counter: #clauses (positive hit) {Cache - component caching}
26
787860
43
196696
30302.307692
Counter: #clauses (negative hit) {Cache - component caching}
29
2361111
20
786531
81417.620690
Counter: #removed clauses / #clauses {Cache - component caching}
55
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
26
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
29
9180
50
910
316.551724
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
29
29
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
