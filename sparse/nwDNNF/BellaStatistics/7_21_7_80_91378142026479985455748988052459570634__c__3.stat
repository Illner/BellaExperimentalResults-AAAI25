Number: formula size {Formula representation}
1
17294844
Number: #variables {Formula representation}
1
2470874
Number: #clauses {Formula representation}
1
2470832
Timer (reduced): initialize [ns] {Formula representation}
1
1645766161
Timer: compute connected components [ns] {Formula representation}
85
7363666813
14170
1114559124
86631374.270588
Number: circuit size {Circuit}
1
86861364
Number: #nodes {Circuit}
1
12762602
Number: #edges {Circuit}
1
86861364
Number: #variables {Circuit}
1
2470874
Timer: copy subcircuit [ns] {Circuit}
36
9830131588
209237
1441022992
273059210.777778
Counter: formula size (copy subcircuit) {Circuit}
36
32765712
1680
4286163
910158.666667
Counter: #variables (copy subcircuit) {Circuit}
36
5201868
630
655704
144496.333333
Counter: #clauses (copy subcircuit) {Circuit}
36
5198928
568
655647
144414.666667
Timer (reduced): initialize [ns] {Compiler}
1
1744419707
Timer (reduced): compile [ns] {Compiler}
1
1252298048481
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
0
Number: #decisions {Compiler}
1
42
Counter: ratio of recomputed hypergraph cuts {Compiler}
78
60
0
1
0.769231
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
33
28
0
1
0.848485
Counter: #connected components {Compiler}
85
78
0
1
0.917647
Counter: #monotone residual formulae / #residual formulae {Compiler}
85
7
0
1
0.082353
Counter: monotone residual formula size {Compiler}
7
1078
154
154
154.000000
Counter: #pure clauses / #clauses {Compiler}
85
7.720953
0.000000
1.000000
0.090835
Counter: pure residual formula size / residual formula size {Compiler}
85
7.500653
0.000000
1.000000
0.088243
Timer: assign literal [ns] {Compiler}
133
1160040407938
1720
321859353750
8722108330.360902
Timer: unassign literal [ns] {Compiler}
133
793600492
360
96028517
5966920.992481
Timer: get decision variable [ns] {Decision heuristic}
42
389908132
100
82023472
9283526.952381
Counter: #preselected variables {Decision heuristic}
42
13830508
1
2470874
329297.809524
Counter: #restricted variables / #preselected variables {Decision heuristic}
28
0.021585
0.000020
0.003392
0.000771
Timer (reduced): initialize [ns] {SAT solver}
1
494149370
Timer (reduced): initial simplification [ns] {SAT solver}
1
1440
Timer (reduced): initially implied literals [ns] {SAT solver}
1
860
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
85
4423967346
42729
520369092
52046674.658824
Timer: unit propagation [ns] {SAT solver}
85
430456
250
204258
5064.188235
Counter: #implied literals {SAT solver}
85
203
0
7
2.388235
Counter: #implied literals / #variables {SAT solver}
85
0.099178
0.000000
0.012821
0.001167
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
8
33200656
597952
9384680
4150082.000000
Counter: #implicit implied literals / #variables {SAT solver}
8
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
8
0.004255
0.000000
0.004255
0.000532
Timer: compute cut [ns] {Partitioning hypergraph}
2
9181624
3598355
5583269
4590812.000000
Counter: cut size {Partitioning hypergraph}
2
22
10
12
11.000000
Counter: cut size / #variables {Partitioning hypergraph}
2
0.007082
0.002779
0.004303
0.003541
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
5
7258018
32160
6079573
1451603.600000
Counter: #vertices {Partitioning hypergraph}
5
201
0
150
40.200000
Counter: #vertices / #clauses {Partitioning hypergraph}
5
0.058733
0.000000
0.035697
0.011747
Counter: #hyperedges {Partitioning hypergraph}
5
31
0
17
6.200000
Counter: #hyperedges / #variables {Partitioning hypergraph}
5
0.009961
0.000000
0.006024
0.001992
Counter: hypergraph size {Partitioning hypergraph}
5
570
0
458
114.000000
Counter: hypergraph size / formula size {Partitioning hypergraph}
5
0.040157
0.000000
0.026097
0.008031
Timer: create equivalence structure [ns] {Partitioning hypergraph}
5
865730
17610
509364
173146.000000
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
78
36
0
1
0.461538
Number: #current entries {Cache - component caching}
1
42
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
78
64447785864
153708
10823690644
826253664.923077
Timer: search cache record structure [ns] {Cache - component caching}
78
81695288
180
9521960
1047375.487179
Timer: add cache record structure [ns] {Cache - component caching}
42
31874721
370
4957102
758921.928571
Counter: #empty cache records / #cache records {Cache - component caching}
78
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
78
127093288
470
17294844
1629401.128205
Counter: formula size (positive hit) {Cache - component caching}
36
32765712
1680
4286163
910158.666667
Counter: formula size (negative hit) {Cache - component caching}
42
94327576
470
17294844
2245894.666667
Counter: #variables (cache record structure) {Cache - component caching}
78
19052565
235
2470874
244263.653846
Counter: #variables (positive hit) {Cache - component caching}
36
5201868
630
655704
144496.333333
Counter: #variables (negative hit) {Cache - component caching}
42
13850697
235
2470874
329778.500000
Counter: #clauses (cache record structure) {Cache - component caching}
78
19046048
158
2470832
244180.102564
Counter: #clauses (positive hit) {Cache - component caching}
36
5198928
568
655647
144414.666667
Counter: #clauses (negative hit) {Cache - component caching}
42
13847120
158
2470832
329693.333333
Counter: #removed clauses / #clauses {Cache - component caching}
78
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
36
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
42
16350
40
1070
389.285714
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
42
42
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
