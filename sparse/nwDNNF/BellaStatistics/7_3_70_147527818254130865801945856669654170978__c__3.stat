Number: formula size {Formula representation}
1
10311
Number: #variables {Formula representation}
1
1764
Number: #clauses {Formula representation}
1
1750
Timer (reduced): initialize [ns] {Formula representation}
1
1561491
Timer: compute connected components [ns] {Formula representation}
25
3134414
2070
757091
125376.560000
Number: circuit size {Circuit}
1
32914
Number: #nodes {Circuit}
1
14216
Number: #edges {Circuit}
1
32914
Number: #variables {Circuit}
1
1764
Timer: copy subcircuit [ns] {Circuit}
13
4468068
12100
1636241
343697.538462
Counter: formula size (copy subcircuit) {Circuit}
13
13548
96
3978
1042.153846
Counter: #variables (copy subcircuit) {Circuit}
13
3186
42
786
245.076923
Counter: #clauses (copy subcircuit) {Circuit}
13
3014
34
771
231.846154
Timer (reduced): initialize [ns] {Compiler}
1
4014492
Timer (reduced): compile [ns] {Compiler}
1
47990182
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
6
Number: #decisions {Compiler}
1
12
Counter: ratio of recomputed hypergraph cuts {Compiler}
25
8
0
1
0.320000
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
3
0
0
0
0.000000
Counter: #connected components {Compiler}
25
25
0
2
1.000000
Counter: #monotone residual formulae / #residual formulae {Compiler}
25
3
0
1
0.120000
Counter: monotone residual formula size {Compiler}
3
54
18
18
18.000000
Counter: #pure clauses / #clauses {Compiler}
25
3.126761
0.000000
1.000000
0.125070
Counter: pure residual formula size / residual formula size {Compiler}
25
3.090909
0.000000
1.000000
0.123636
Timer: assign literal [ns] {Compiler}
42
1066847
520
351986
25401.119048
Timer: unassign literal [ns] {Compiler}
42
227636
280
40210
5419.904762
Timer: get decision variable [ns] {Decision heuristic}
12
3059
60
829
254.916667
Counter: #preselected variables {Decision heuristic}
12
89
1
15
7.416667
Counter: #restricted variables / #preselected variables {Decision heuristic}
0
0.000000
0.000000
0.000000
0.000000
Timer (reduced): initialize [ns] {SAT solver}
1
625273
Timer (reduced): initial simplification [ns] {SAT solver}
1
900
Timer (reduced): initially implied literals [ns] {SAT solver}
1
670
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
25
645630
1770
113758
25825.200000
Timer: unit propagation [ns] {SAT solver}
25
8249
100
790
329.960000
Counter: #implied literals {SAT solver}
25
42
0
3
1.680000
Counter: #implied literals / #variables {SAT solver}
25
0.384341
0.000000
0.100000
0.015374
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
8
1062686
15080
937529
132835.750000
Counter: #implicit implied literals / #variables {SAT solver}
8
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
8
0.032258
0.000000
0.032258
0.004032
Timer: compute cut [ns] {Partitioning hypergraph}
1
22053284
22053284
22053284
22053284.000000
Counter: cut size {Partitioning hypergraph}
1
15
15
15
15.000000
Counter: cut size / #variables {Partitioning hypergraph}
1
0.008503
0.008503
0.008503
0.008503
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
3
3763355
5580
3748635
1254451.666667
Counter: #vertices {Partitioning hypergraph}
3
574
0
574
191.333333
Counter: #vertices / #clauses {Partitioning hypergraph}
3
0.328000
0.000000
0.328000
0.109333
Counter: #hyperedges {Partitioning hypergraph}
3
21
0
21
7.000000
Counter: #hyperedges / #variables {Partitioning hypergraph}
3
0.011905
0.000000
0.011905
0.003968
Counter: hypergraph size {Partitioning hypergraph}
3
2289
0
2289
763.000000
Counter: hypergraph size / formula size {Partitioning hypergraph}
3
0.221996
0.000000
0.221996
0.073999
Timer: create equivalence structure [ns] {Partitioning hypergraph}
3
146739
2780
139979
48913.000000
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
25
13
0
1
0.520000
Number: #current entries {Cache - component caching}
1
12
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
25
9953493
19450
1963326
398139.720000
Timer: search cache record structure [ns] {Cache - component caching}
25
20410
110
3880
816.400000
Timer: add cache record structure [ns] {Cache - component caching}
12
9840
130
1910
820.000000
Counter: #empty cache records / #cache records {Cache - component caching}
25
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
25
42753
62
10311
1710.120000
Counter: formula size (positive hit) {Cache - component caching}
13
13548
96
3978
1042.153846
Counter: formula size (negative hit) {Cache - component caching}
12
29205
62
10311
2433.750000
Counter: #variables (cache record structure) {Cache - component caching}
25
8931
31
1764
357.240000
Counter: #variables (positive hit) {Cache - component caching}
13
3186
42
786
245.076923
Counter: #variables (negative hit) {Cache - component caching}
12
5745
31
1764
478.750000
Counter: #clauses (cache record structure) {Cache - component caching}
25
8577
22
1750
343.080000
Counter: #clauses (positive hit) {Cache - component caching}
13
3014
34
771
231.846154
Counter: #clauses (negative hit) {Cache - component caching}
12
5563
22
1750
463.583333
Counter: #removed clauses / #clauses {Cache - component caching}
25
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
13
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
12
680
30
160
56.666667
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
12
12
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
