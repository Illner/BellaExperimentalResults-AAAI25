Number: formula size {Formula representation}
1
2534775
Number: #variables {Formula representation}
1
506550
Number: #clauses {Formula representation}
1
507915
Timer (reduced): initialize [ns] {Formula representation}
1
304417612
Timer: compute connected components [ns] {Formula representation}
154
1730746211
750
214494057
11238611.759740
Number: circuit size {Circuit}
1
671084260
Number: #nodes {Circuit}
1
187289954
Number: #edges {Circuit}
1
671084260
Number: #variables {Circuit}
1
506550
Timer: copy subcircuit [ns] {Circuit}
205
320949671060
35280
39084910545
1565608151.512195
Counter: formula size (copy subcircuit) {Circuit}
205
10046595
255
617520
49007.780488
Counter: #variables (copy subcircuit) {Circuit}
205
2141430
30
128520
10446.000000
Counter: #clauses (copy subcircuit) {Circuit}
205
2207223
121
129794
10766.941463
Timer (reduced): initialize [ns] {Compiler}
1
535146644
Timer (reduced): compile [ns] {Compiler}
1
400922953128
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
15
Number: #splits {Compiler}
1
180
Number: #decisions {Compiler}
1
84
Counter: ratio of recomputed hypergraph cuts {Compiler}
289
221
0
1
0.764706
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
44
42
0
1
0.954545
Counter: #connected components {Compiler}
154
289
1
4
1.876623
Counter: #monotone residual formulae / #residual formulae {Compiler}
154
0
0
0
0.000000
Counter: monotone residual formula size {Compiler}
0
0
0
0
0.000000
Counter: #pure clauses / #clauses {Compiler}
154
0.000000
0.000000
0.000000
0.000000
Counter: pure residual formula size / residual formula size {Compiler}
154
0.000000
0.000000
0.000000
0.000000
Timer: assign literal [ns] {Compiler}
258
24468372227
350
3867919842
94838652.042636
Timer: unassign literal [ns] {Compiler}
258
1530778674
240
252836904
5933250.674419
Timer: get decision variable [ns] {Decision heuristic}
84
655188694
60
132045554
7799865.404762
Counter: #preselected variables {Decision heuristic}
84
5886755
1
506550
70080.416667
Counter: #restricted variables / #preselected variables {Decision heuristic}
0
0.000000
0.000000
0.000000
0.000000
Timer (reduced): initialize [ns] {SAT solver}
1
160278854
Timer (reduced): initial simplification [ns] {SAT solver}
1
1540
Timer (reduced): initially implied literals [ns] {SAT solver}
1
1040
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
169
3709399332
420
460316085
21949108.473373
Timer: unit propagation [ns] {SAT solver}
169
665310
110
51540
3936.745562
Counter: #implied literals {SAT solver}
169
726
0
15
4.295858
Counter: #implied literals / #variables {SAT solver}
169
8.930441
0.000000
1.000000
0.052843
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
151
68631589
27020
5097509
454513.834437
Counter: #implicit implied literals / #variables {SAT solver}
151
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
151
0.000000
0.000000
0.000000
0.000000
Timer: compute cut [ns] {Partitioning hypergraph}
2
384853398
661998
384191400
192426699.000000
Counter: cut size {Partitioning hypergraph}
2
45
14
31
22.500000
Counter: cut size / #variables {Partitioning hypergraph}
2
0.506339
0.006339
0.500000
0.253170
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
2
18568640
60220
18508420
9284320.000000
Counter: #vertices {Partitioning hypergraph}
2
4779
15
4764
2389.500000
Counter: #vertices / #clauses {Partitioning hypergraph}
2
0.975981
0.141509
0.834472
0.487991
Counter: #hyperedges {Partitioning hypergraph}
2
149
14
135
74.500000
Counter: #hyperedges / #variables {Partitioning hypergraph}
2
0.527607
0.027607
0.500000
0.263804
Counter: hypergraph size {Partitioning hypergraph}
2
13018
28
12990
6509.000000
Counter: hypergraph size / formula size {Partitioning hypergraph}
2
0.786574
0.125000
0.661574
0.393287
Timer: create equivalence structure [ns] {Partitioning hypergraph}
2
1094228
7910
1086318
547114.000000
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
289
205
0
1
0.709343
Number: #current entries {Cache - component caching}
1
84
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
289
46246515022
2280
5207978697
160022543.328720
Timer: search cache record structure [ns] {Cache - component caching}
289
41106158
30
11422514
142235.840830
Timer: add cache record structure [ns] {Cache - component caching}
84
297612835
200
39632974
3543009.940476
Counter: #empty cache records / #cache records {Cache - component caching}
289
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
289
39316857
8
2534775
136044.487889
Counter: formula size (positive hit) {Cache - component caching}
205
10046595
255
617520
49007.780488
Counter: formula size (negative hit) {Cache - component caching}
84
29270262
8
2534775
348455.500000
Counter: #variables (cache record structure) {Cache - component caching}
289
8079768
4
506550
27957.674740
Counter: #variables (positive hit) {Cache - component caching}
205
2141430
30
128520
10446.000000
Counter: #variables (negative hit) {Cache - component caching}
84
5938338
4
506550
70694.500000
Counter: #clauses (cache record structure) {Cache - component caching}
289
8213265
4
507915
28419.602076
Counter: #clauses (positive hit) {Cache - component caching}
205
2207223
121
129794
10766.941463
Counter: #clauses (negative hit) {Cache - component caching}
84
6006042
4
507915
71500.500000
Counter: #removed clauses / #clauses {Cache - component caching}
289
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
205
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
84
49300
30
2010
586.904762
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
84
84
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
