Number: formula size {Formula representation}
1
17500945
Number: #variables {Formula representation}
1
2187710
Number: #clauses {Formula representation}
1
2187920
Timer (reduced): initialize [ns] {Formula representation}
1
1586925737
Timer: compute connected components [ns] {Formula representation}
60
1348088910
460
226794340
22468148.500000
Number: circuit size {Circuit}
1
80335925
Number: #nodes {Circuit}
1
37742604
Number: #edges {Circuit}
1
80335925
Number: #variables {Circuit}
1
2187710
Timer: copy subcircuit [ns] {Circuit}
163
28280107712
6060
9058007684
173497593.325153
Counter: formula size (copy subcircuit) {Circuit}
163
18029705
35
3579035
110611.687117
Counter: #variables (copy subcircuit) {Circuit}
163
2621510
10
500200
16082.883436
Counter: #clauses (copy subcircuit) {Circuit}
163
2626784
16
500404
16115.239264
Timer (reduced): initialize [ns] {Compiler}
1
1720931367
Timer (reduced): compile [ns] {Compiler}
1
1534626896219
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
5
Number: #splits {Compiler}
1
145
Number: #decisions {Compiler}
1
32
Counter: ratio of recomputed hypergraph cuts {Compiler}
195
179
0
1
0.917949
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
22
19
0
1
0.863636
Counter: #connected components {Compiler}
60
195
1
24
3.250000
Counter: #monotone residual formulae / #residual formulae {Compiler}
60
0
0
0
0.000000
Counter: monotone residual formula size {Compiler}
0
0
0
0
0.000000
Counter: #pure clauses / #clauses {Compiler}
60
0.000000
0.000000
0.000000
0.000000
Counter: pure residual formula size / residual formula size {Compiler}
60
0.000000
0.000000
0.000000
0.000000
Timer: assign literal [ns] {Compiler}
104
1456718800685
270
552165170797
14006911545.048077
Timer: unassign literal [ns] {Compiler}
104
896051622
200
120418950
8615880.980769
Timer: get decision variable [ns] {Decision heuristic}
32
471488997
70
144543297
14734031.156250
Counter: #preselected variables {Decision heuristic}
32
8076074
2
2187710
252377.312500
Counter: #restricted variables / #preselected variables {Decision heuristic}
0
0.000000
0.000000
0.000000
0.000000
Timer (reduced): initialize [ns] {SAT solver}
1
477449635
Timer (reduced): initial simplification [ns] {SAT solver}
1
1210
Timer (reduced): initially implied literals [ns] {SAT solver}
1
680
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
65
3446857290
450
537842310
53028573.692308
Timer: unit propagation [ns] {SAT solver}
65
461984
120
285081
7107.446154
Counter: #implied literals {SAT solver}
65
128
0
5
1.969231
Counter: #implied literals / #variables {SAT solver}
65
3.441042
0.000000
1.000000
0.052939
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
144
30674491
3900
9766245
213017.298611
Counter: #implicit implied literals / #variables {SAT solver}
144
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
144
0.000245
0.000000
0.000245
0.000002
Timer: compute cut [ns] {Partitioning hypergraph}
3
465885584
335121
319937753
155295194.666667
Counter: cut size {Partitioning hypergraph}
3
26
5
11
8.666667
Counter: cut size / #variables {Partitioning hypergraph}
3
0.506596
0.002690
0.500000
0.168865
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
3
9152542
14050
6184542
3050847.333333
Counter: #vertices {Partitioning hypergraph}
3
6413
6
3967
2137.666667
Counter: #vertices / #clauses {Partitioning hypergraph}
3
2.194768
0.375000
0.929257
0.731589
Counter: #hyperedges {Partitioning hypergraph}
3
306
5
151
102.000000
Counter: #hyperedges / #variables {Partitioning hypergraph}
3
0.595522
0.036928
0.500000
0.198507
Counter: hypergraph size {Partitioning hypergraph}
3
21532
10
14437
7177.333333
Counter: hypergraph size / formula size {Partitioning hypergraph}
3
1.748270
0.285714
0.760723
0.582757
Timer: create equivalence structure [ns] {Partitioning hypergraph}
3
1327695
2500
777173
442565.000000
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
195
163
0
1
0.835897
Number: #current entries {Cache - component caching}
1
32
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
195
42439262403
2400
10199863119
217637243.092308
Timer: search cache record structure [ns] {Cache - component caching}
195
33461551
60
5605649
171597.697436
Timer: add cache record structure [ns] {Cache - component caching}
32
40063874
640
13154427
1251996.062500
Counter: #empty cache records / #cache records {Cache - component caching}
195
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
195
80628681
8
17500945
413480.415385
Counter: formula size (positive hit) {Cache - component caching}
163
18029705
35
3579035
110611.687117
Counter: formula size (negative hit) {Cache - component caching}
32
62598976
8
17500945
1956218.000000
Counter: #variables (cache record structure) {Cache - component caching}
195
10711374
4
2187710
54930.123077
Counter: #variables (positive hit) {Cache - component caching}
163
2621510
10
500200
16082.883436
Counter: #variables (negative hit) {Cache - component caching}
32
8089864
4
2187710
252808.250000
Counter: #clauses (cache record structure) {Cache - component caching}
195
10721840
4
2187920
54983.794872
Counter: #clauses (positive hit) {Cache - component caching}
163
2626784
16
500404
16115.239264
Counter: #clauses (negative hit) {Cache - component caching}
32
8095056
4
2187920
252970.500000
Counter: #removed clauses / #clauses {Cache - component caching}
195
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
163
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
32
22860
30
4900
714.375000
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
32
32
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
