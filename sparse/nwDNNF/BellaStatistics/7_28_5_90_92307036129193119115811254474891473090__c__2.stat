Number: formula size {Formula representation}
1
17500245
Number: #variables {Formula representation}
1
2187710
Number: #clauses {Formula representation}
1
2187612
Timer (reduced): initialize [ns] {Formula representation}
1
1614438338
Timer: compute connected components [ns] {Formula representation}
65
7350665355
22210
1382313470
113087159.307692
Number: circuit size {Circuit}
1
14767175
Number: #nodes {Circuit}
1
7098854
Number: #edges {Circuit}
1
14767175
Number: #variables {Circuit}
1
2187710
Timer: copy subcircuit [ns] {Circuit}
26
5752381680
537128
1257232495
221245449.230769
Counter: formula size (copy subcircuit) {Circuit}
26
23863762
698
4609585
917837.000000
Counter: #variables (copy subcircuit) {Circuit}
26
3365936
349
625200
129459.076923
Counter: #clauses (copy subcircuit) {Circuit}
26
3362948
234
625096
129344.153846
Timer (reduced): initialize [ns] {Compiler}
1
2147827979
Timer (reduced): compile [ns] {Compiler}
1
1555793301051
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
0
Number: #decisions {Compiler}
1
32
Counter: ratio of recomputed hypergraph cuts {Compiler}
58
44
0
1
0.758621
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
22
19
0
1
0.863636
Counter: #connected components {Compiler}
65
58
0
1
0.892308
Counter: #monotone residual formulae / #residual formulae {Compiler}
65
7
0
1
0.107692
Counter: monotone residual formula size {Compiler}
7
1560
220
230
222.857143
Counter: #pure clauses / #clauses {Compiler}
65
7.633632
0.000000
1.000000
0.117440
Counter: pure residual formula size / residual formula size {Compiler}
65
7.437376
0.000000
1.000000
0.114421
Timer: assign literal [ns] {Compiler}
104
1468735836193
2960
512498838677
14122459963.394231
Timer: unassign literal [ns] {Compiler}
104
1381266314
500
258943897
13281406.865385
Timer: get decision variable [ns] {Decision heuristic}
32
417604370
100
119770022
13050136.562500
Counter: #preselected variables {Decision heuristic}
32
8821673
1
2187710
275677.281250
Counter: #restricted variables / #preselected variables {Decision heuristic}
19
0.009202
0.000016
0.002042
0.000484
Timer (reduced): initialize [ns] {SAT solver}
1
564863918
Timer (reduced): initial simplification [ns] {SAT solver}
1
2590
Timer (reduced): initially implied literals [ns] {SAT solver}
1
2000
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
65
4999940923
198999
737996467
76922168.046154
Timer: unit propagation [ns] {SAT solver}
65
345480
220
47030
5315.076923
Counter: #implied literals {SAT solver}
65
128
0
5
1.969231
Counter: #implied literals / #variables {SAT solver}
65
0.080396
0.000000
0.009009
0.001237
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
9
49340293
884686
25813888
5482254.777778
Counter: #implicit implied literals / #variables {SAT solver}
9
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
9
0.014551
0.000000
0.002865
0.001617
Timer: compute cut [ns] {Partitioning hypergraph}
2
4680334
2148383
2531951
2340167.000000
Counter: cut size {Partitioning hypergraph}
2
15
7
8
7.500000
Counter: cut size / #variables {Partitioning hypergraph}
2
0.004526
0.001792
0.002734
0.002263
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
3
6493067
48920
4151115
2164355.666667
Counter: #vertices {Partitioning hypergraph}
3
54
0
27
18.000000
Counter: #vertices / #clauses {Partitioning hypergraph}
3
0.017329
0.000000
0.011102
0.005776
Counter: #hyperedges {Partitioning hypergraph}
3
21
0
11
7.000000
Counter: #hyperedges / #variables {Partitioning hypergraph}
3
0.006370
0.000000
0.003906
0.002123
Counter: hypergraph size {Partitioning hypergraph}
3
145
0
85
48.333333
Counter: hypergraph size / formula size {Partitioning hypergraph}
3
0.010527
0.000000
0.006386
0.003509
Timer: create equivalence structure [ns] {Partitioning hypergraph}
3
1306045
30570
766907
435348.333333
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
58
26
0
1
0.448276
Number: #current entries {Cache - component caching}
1
32
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
58
61858736645
212649
13696714591
1066529942.155172
Timer: search cache record structure [ns] {Cache - component caching}
58
75842423
220
12647575
1307627.982759
Timer: add cache record structure [ns] {Cache - component caching}
32
79152416
400
21165014
2473513.000000
Counter: #empty cache records / #cache records {Cache - component caching}
58
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
58
92307460
668
17500245
1591507.931034
Counter: formula size (positive hit) {Cache - component caching}
26
23863762
698
4609585
917837.000000
Counter: formula size (negative hit) {Cache - component caching}
32
68443698
668
17500245
2138865.562500
Counter: #variables (cache record structure) {Cache - component caching}
58
12204266
334
2187710
210418.379310
Counter: #variables (positive hit) {Cache - component caching}
26
3365936
349
625200
129459.076923
Counter: #variables (negative hit) {Cache - component caching}
32
8838330
334
2187710
276197.812500
Counter: #clauses (cache record structure) {Cache - component caching}
58
12197521
224
2187612
210302.086207
Counter: #clauses (positive hit) {Cache - component caching}
26
3362948
234
625096
129344.153846
Counter: #clauses (negative hit) {Cache - component caching}
32
8834573
224
2187612
276080.406250
Counter: #removed clauses / #clauses {Cache - component caching}
58
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
26
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
32
31120
40
3840
972.500000
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
32
32
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
