Number: formula size {Formula representation}
1
20254800
Number: #variables {Formula representation}
1
4050450
Number: #clauses {Formula representation}
1
4052330
Timer (reduced): initialize [ns] {Formula representation}
1
2109909023
Timer: compute connected components [ns] {Formula representation}
233
46671020621
11900
2205322431
200304809.532189
Number: circuit size {Circuit}
1
79339600
Number: #nodes {Circuit}
1
17253059
Number: #edges {Circuit}
1
79339600
Number: #variables {Circuit}
1
4050450
Timer: copy subcircuit [ns] {Circuit}
117
23282364647
1175189
960018329
198994569.632479
Counter: formula size (copy subcircuit) {Circuit}
117
136862580
6360
4485840
1169765.641026
Counter: #variables (copy subcircuit) {Circuit}
117
28344780
1920
918390
242263.076923
Counter: #clauses (copy subcircuit) {Circuit}
117
28428878
2266
919864
242981.863248
Timer (reduced): initialize [ns] {Compiler}
1
2743074531
Timer (reduced): compile [ns] {Compiler}
1
2064064957494
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
60
Number: #decisions {Compiler}
1
116
Counter: ratio of recomputed hypergraph cuts {Compiler}
233
231
0
1
0.991416
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
116
86
0
1
0.741379
Counter: #connected components {Compiler}
233
233
0
2
1.000000
Counter: #monotone residual formulae / #residual formulae {Compiler}
233
30
0
1
0.128755
Counter: monotone residual formula size {Compiler}
30
3600
120
120
120.000000
Counter: #pure clauses / #clauses {Compiler}
233
30.391986
0.000000
1.000000
0.130438
Counter: pure residual formula size / residual formula size {Compiler}
233
30.280374
0.000000
1.000000
0.129959
Timer: assign literal [ns] {Compiler}
352
1452272200768
1180
125207992934
4125773297.636364
Timer: unassign literal [ns] {Compiler}
352
4287511324
480
209501639
12180429.897727
Timer: get decision variable [ns] {Decision heuristic}
116
2418026356
60
125012432
20845054.793103
Counter: #preselected variables {Decision heuristic}
116
89039599
1
4050450
767582.750000
Counter: #restricted variables / #preselected variables {Decision heuristic}
86
0.065965
0.000037
0.005845
0.000767
Timer (reduced): initialize [ns] {SAT solver}
1
671829275
Timer (reduced): initial simplification [ns] {SAT solver}
1
990
Timer (reduced): initially implied literals [ns] {SAT solver}
1
580
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
233
34448346568
100690
925470598
147846980.978541
Timer: unit propagation [ns] {SAT solver}
233
6420826
310
3088108
27557.193133
Counter: #implied literals {SAT solver}
233
1864
0
30
8.000000
Counter: #implied literals / #variables {SAT solver}
233
0.462884
0.000000
0.016393
0.001987
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
87
209832256
373650
5189385
2411865.011494
Counter: #implicit implied literals / #variables {SAT solver}
87
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
87
0.005697
0.000000
0.005435
0.000065
Timer: compute cut [ns] {Partitioning hypergraph}
1
2083678
2083678
2083678
2083678.000000
Counter: cut size {Partitioning hypergraph}
1
16
16
16
16.000000
Counter: cut size / #variables {Partitioning hypergraph}
1
0.004195
0.004195
0.004195
0.004195
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
30
7571515
24810
1359199
252383.833333
Counter: #vertices {Partitioning hypergraph}
30
31
0
31
1.033333
Counter: #vertices / #clauses {Partitioning hypergraph}
30
0.007506
0.000000
0.007506
0.000250
Counter: #hyperedges {Partitioning hypergraph}
30
31
0
31
1.033333
Counter: #hyperedges / #variables {Partitioning hypergraph}
30
0.008128
0.000000
0.008128
0.000271
Counter: hypergraph size {Partitioning hypergraph}
30
90
0
90
3.000000
Counter: hypergraph size / formula size {Partitioning hypergraph}
30
0.005789
0.000000
0.005789
0.000193
Timer: create equivalence structure [ns] {Partitioning hypergraph}
30
2441238
13070
279280
81374.600000
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
233
117
0
1
0.502146
Number: #current entries {Cache - component caching}
1
116
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
233
467017202067
127720
19701429018
2004365674.107296
Timer: search cache record structure [ns] {Cache - component caching}
233
391811227
150
12515719
1681593.248927
Timer: add cache record structure [ns] {Cache - component caching}
116
208592943
280
13638537
1798215.025862
Counter: #empty cache records / #cache records {Cache - component caching}
233
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
233
579386108
368
20254800
2486635.656652
Counter: formula size (positive hit) {Cache - component caching}
117
136862580
6360
4485840
1169765.641026
Counter: formula size (negative hit) {Cache - component caching}
116
442523528
368
20254800
3814858.000000
Counter: #variables (cache record structure) {Cache - component caching}
233
117418222
184
4050450
503940.866953
Counter: #variables (positive hit) {Cache - component caching}
117
28344780
1920
918390
242263.076923
Counter: #variables (negative hit) {Cache - component caching}
116
89073442
184
4050450
767874.500000
Counter: #clauses (cache record structure) {Cache - component caching}
233
117599702
124
4052330
504719.751073
Counter: #clauses (positive hit) {Cache - component caching}
117
28428878
2266
919864
242981.863248
Counter: #clauses (negative hit) {Cache - component caching}
116
89170824
124
4052330
768714.000000
Counter: #removed clauses / #clauses {Cache - component caching}
233
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
117
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
116
50390
50
2740
434.396552
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
116
116
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
