Number: formula size {Formula representation}
1
1000
Number: #variables {Formula representation}
1
190
Number: #clauses {Formula representation}
1
180
Timer (reduced): initialize [ns] {Formula representation}
1
129009
Timer: compute connected components [ns] {Formula representation}
11
267399
1020
81799
24309.000000
Number: circuit size {Circuit}
1
994
Number: #nodes {Circuit}
1
807
Number: #edges {Circuit}
1
994
Number: #variables {Circuit}
1
190
Timer: copy subcircuit [ns] {Circuit}
4
158049
8100
91920
39512.250000
Counter: formula size (copy subcircuit) {Circuit}
4
744
32
432
186.000000
Counter: #variables (copy subcircuit) {Circuit}
4
226
16
106
56.500000
Counter: #clauses (copy subcircuit) {Circuit}
4
192
12
96
48.000000
Timer (reduced): initialize [ns] {Compiler}
1
2873631
Timer (reduced): compile [ns] {Compiler}
1
2437952
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
0
Number: #decisions {Compiler}
1
5
Counter: ratio of recomputed hypergraph cuts {Compiler}
9
3
0
1
0.333333
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
2
0
0
0
0.000000
Counter: #connected components {Compiler}
11
9
0
1
0.818182
Counter: #monotone residual formulae / #residual formulae {Compiler}
11
2
0
1
0.181818
Counter: monotone residual formula size {Compiler}
2
16
8
8
8.000000
Counter: #pure clauses / #clauses {Compiler}
11
2.666667
0.000000
1.000000
0.242424
Counter: pure residual formula size / residual formula size {Compiler}
11
2.545455
0.000000
1.000000
0.231405
Timer: assign literal [ns] {Compiler}
20
64230
540
17690
3211.500000
Timer: unassign literal [ns] {Compiler}
20
22960
250
4680
1148.000000
Timer: get decision variable [ns] {Decision heuristic}
5
1020
60
620
204.000000
Counter: #preselected variables {Decision heuristic}
5
11
1
4
2.200000
Counter: #restricted variables / #preselected variables {Decision heuristic}
0
0.000000
0.000000
0.000000
0.000000
Timer (reduced): initialize [ns] {SAT solver}
1
91460
Timer (reduced): initial simplification [ns] {SAT solver}
1
450
Timer (reduced): initially implied literals [ns] {SAT solver}
1
340
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
11
67170
980
15600
6106.363636
Timer: unit propagation [ns] {SAT solver}
11
3430
140
740
311.818182
Counter: #implied literals {SAT solver}
11
20
0
2
1.818182
Counter: #implied literals / #variables {SAT solver}
11
0.606420
0.000000
0.200000
0.055129
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
3
133650
8580
115260
44550.000000
Counter: #implicit implied literals / #variables {SAT solver}
3
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
3
0.151316
0.026316
0.062500
0.050439
Timer: compute cut [ns] {Partitioning hypergraph}
1
536868
536868
536868
536868.000000
Counter: cut size {Partitioning hypergraph}
1
4
4
4
4.000000
Counter: cut size / #variables {Partitioning hypergraph}
1
0.021053
0.021053
0.021053
0.021053
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
2
277689
5120
272569
138844.500000
Counter: #vertices {Partitioning hypergraph}
2
3
0
3
1.500000
Counter: #vertices / #clauses {Partitioning hypergraph}
2
0.016667
0.000000
0.016667
0.008333
Counter: #hyperedges {Partitioning hypergraph}
2
5
0
5
2.500000
Counter: #hyperedges / #variables {Partitioning hypergraph}
2
0.026316
0.000000
0.026316
0.013158
Counter: hypergraph size {Partitioning hypergraph}
2
12
0
12
6.000000
Counter: hypergraph size / formula size {Partitioning hypergraph}
2
0.012000
0.000000
0.012000
0.006000
Timer: create equivalence structure [ns] {Partitioning hypergraph}
2
20540
2160
18380
10270.000000
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
9
4
0
1
0.444444
Number: #current entries {Cache - component caching}
1
5
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
9
707167
10980
286519
78574.111111
Timer: search cache record structure [ns] {Cache - component caching}
9
2470
130
610
274.444444
Timer: add cache record structure [ns] {Cache - component caching}
5
5190
140
4190
1038.000000
Counter: #empty cache records / #cache records {Cache - component caching}
9
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
9
2488
32
1000
276.444444
Counter: formula size (positive hit) {Cache - component caching}
4
744
32
432
186.000000
Counter: formula size (negative hit) {Cache - component caching}
5
1744
32
1000
348.800000
Counter: #variables (cache record structure) {Cache - component caching}
9
642
16
190
71.333333
Counter: #variables (positive hit) {Cache - component caching}
4
226
16
106
56.500000
Counter: #variables (negative hit) {Cache - component caching}
5
416
16
190
83.200000
Counter: #clauses (cache record structure) {Cache - component caching}
9
564
12
180
62.666667
Counter: #clauses (positive hit) {Cache - component caching}
4
192
12
96
48.000000
Counter: #clauses (negative hit) {Cache - component caching}
5
372
12
180
74.400000
Counter: #removed clauses / #clauses {Cache - component caching}
9
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
4
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
5
480
40
230
96.000000
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
5
5
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
