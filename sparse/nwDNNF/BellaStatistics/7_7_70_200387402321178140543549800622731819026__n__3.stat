Number: formula size {Formula representation}
1
706335
Number: #variables {Formula representation}
1
117796
Number: #clauses {Formula representation}
1
117852
Timer (reduced): initialize [ns] {Formula representation}
1
78593862
Timer: compute connected components [ns] {Formula representation}
436981
16229845771
3350
46917443
37140.849993
Number: circuit size {Circuit}
1
7149736
Number: #nodes {Circuit}
1
1515991
Number: #edges {Circuit}
1
7149736
Number: #variables {Circuit}
1
117796
Timer: copy subcircuit [ns] {Circuit}
0
0
0
0
0.000000
Counter: formula size (copy subcircuit) {Circuit}
0
0
0
0
0.000000
Counter: #variables (copy subcircuit) {Circuit}
0
0
0
0
0.000000
Counter: #clauses (copy subcircuit) {Circuit}
0
0
0
0
0.000000
Timer (reduced): initialize [ns] {Compiler}
1
76155795
Timer (reduced): compile [ns] {Compiler}
1
72410798473
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
33614
Number: #decisions {Compiler}
1
218490
Counter: ratio of recomputed hypergraph cuts {Compiler}
218490
200804
0
1
0.919054
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
200804
293
0
1
0.001459
Counter: #connected components {Compiler}
436981
218490
0
2
0.499999
Counter: #monotone residual formulae / #residual formulae {Compiler}
436981
235298
0
1
0.538463
Counter: monotone residual formula size {Compiler}
235298
9882516
42
42
42.000000
Counter: #pure clauses / #clauses {Compiler}
436981
235625.713092
0.000000
1.000000
0.539213
Counter: pure residual formula size / residual formula size {Compiler}
436981
235528.232877
0.000000
1.000000
0.538990
Timer: assign literal [ns] {Compiler}
691885
6450068861
390
468051833
9322.458011
Timer: unassign literal [ns] {Compiler}
691885
1912757511
190
7176243
2764.559878
Timer: get decision variable [ns] {Decision heuristic}
218490
47609634
40
1285649
217.903034
Counter: #preselected variables {Decision heuristic}
218490
4366872
1
117796
19.986599
Counter: #restricted variables / #preselected variables {Decision heuristic}
293
1.145840
0.000416
0.005898
0.003911
Timer (reduced): initialize [ns] {SAT solver}
1
29915410
Timer (reduced): initial simplification [ns] {SAT solver}
1
820
Timer (reduced): initially implied literals [ns] {SAT solver}
1
590
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
436981
5989571819
2390
17014643
13706.709946
Timer: unit propagation [ns] {SAT solver}
436981
140316044
120
38970
321.103307
Counter: #implied literals {SAT solver}
436981
1056035
0
7
2.416661
Counter: #implied literals / #variables {SAT solver}
436981
8787.240532
0.000000
0.045455
0.020109
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
200511
14166364368
24080
4126046
70651.307749
Counter: #implicit implied literals / #variables {SAT solver}
200511
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
200511
501.714115
0.000000
0.014925
0.002502
Timer: compute cut [ns] {Partitioning hypergraph}
1715
292406162
108660
440949
170499.219825
Counter: cut size {Partitioning hypergraph}
1715
15180
7
23
8.851312
Counter: cut size / #variables {Partitioning hypergraph}
1715
9.527163
0.003864
0.007582
0.005555
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
200511
7189884277
8340
8018182
35857.804694
Counter: #vertices {Partitioning hypergraph}
200511
223979
0
249
1.117041
Counter: #vertices / #clauses {Partitioning hypergraph}
200511
137.837614
0.000000
0.098927
0.000687
Counter: #hyperedges {Partitioning hypergraph}
200511
38465
0
29
0.191835
Counter: #hyperedges / #variables {Partitioning hypergraph}
200511
25.544582
0.000000
0.015957
0.000127
Counter: hypergraph size {Partitioning hypergraph}
200511
482601
0
665
2.406855
Counter: hypergraph size / formula size {Partitioning hypergraph}
200511
78.099303
0.000000
0.052557
0.000390
Timer: create equivalence structure [ns] {Partitioning hypergraph}
200511
2018426086
3850
394440
10066.410751
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
218490
0
0
0
0.000000
Number: #current entries {Cache - component caching}
1
218490
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
218490
10178205843
8400
9955610
46584.309776
Timer: search cache record structure [ns] {Cache - component caching}
218490
100554583
110
145860
460.225104
Timer: add cache record structure [ns] {Cache - component caching}
218490
483095818
130
330949080
2211.066035
Counter: #empty cache records / #cache records {Cache - component caching}
218490
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
218490
146495731
134
706335
670.491698
Counter: formula size (positive hit) {Cache - component caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - component caching}
218490
146495731
134
706335
670.491698
Counter: #variables (cache record structure) {Cache - component caching}
218490
46186278
67
117796
211.388521
Counter: #variables (positive hit) {Cache - component caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - component caching}
218490
46186278
67
117796
211.388521
Counter: #clauses (cache record structure) {Cache - component caching}
218490
42948065
46
117852
196.567646
Counter: #clauses (positive hit) {Cache - component caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - component caching}
218490
42948065
46
117852
196.567646
Counter: #removed clauses / #clauses {Cache - component caching}
218490
24431.463015
0.013453
1.000000
0.111820
Counter: #identical mappings / #mappings {Cache - component caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
218490
10730368
20
17480
49.111483
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
218490
218490
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
