Number: formula size {Formula representation}
1
9002100
Number: #variables {Formula representation}
1
1500250
Number: #clauses {Formula representation}
1
1500970
Timer (reduced): initialize [ns] {Formula representation}
1
900905921
Timer: compute connected components [ns] {Formula representation}
99
1317126124
560
132716419
13304304.282828
Number: circuit size {Circuit}
1
107904430
Number: #nodes {Circuit}
1
39042719
Number: #edges {Circuit}
1
107904430
Number: #variables {Circuit}
1
1500250
Timer: copy subcircuit [ns] {Circuit}
185
22034069811
17690
2695168471
119103080.059459
Counter: formula size (copy subcircuit) {Circuit}
185
13823880
120
1301980
74723.675676
Counter: #variables (copy subcircuit) {Circuit}
185
2617840
20
240230
14150.486486
Counter: #clauses (copy subcircuit) {Circuit}
185
2643940
56
240914
14291.567568
Timer (reduced): initialize [ns] {Compiler}
1
871480892
Timer (reduced): compile [ns] {Compiler}
1
379734171720
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
10
Number: #splits {Compiler}
1
160
Number: #decisions {Compiler}
1
54
Counter: ratio of recomputed hypergraph cuts {Compiler}
239
213
0
1
0.891213
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
34
31
0
1
0.911765
Counter: #connected components {Compiler}
99
239
1
9
2.414141
Counter: #monotone residual formulae / #residual formulae {Compiler}
99
0
0
0
0.000000
Counter: monotone residual formula size {Compiler}
0
0
0
0
0.000000
Counter: #pure clauses / #clauses {Compiler}
99
0.000000
0.000000
0.000000
0.000000
Counter: pure residual formula size / residual formula size {Compiler}
99
0.000000
0.000000
0.000000
0.000000
Timer: assign literal [ns] {Compiler}
168
310915223171
250
77199328581
1850685852.208333
Timer: unassign literal [ns] {Compiler}
168
899146643
240
123367332
5352063.351190
Timer: get decision variable [ns] {Decision heuristic}
54
403962764
60
68004196
7480791.925926
Counter: #preselected variables {Decision heuristic}
54
10096160
2
1500250
186965.925926
Counter: #restricted variables / #preselected variables {Decision heuristic}
0
0.000000
0.000000
0.000000
0.000000
Timer (reduced): initialize [ns] {SAT solver}
1
286963206
Timer (reduced): initial simplification [ns] {SAT solver}
1
1120
Timer (reduced): initially implied literals [ns] {SAT solver}
1
630
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
109
3218743030
450
274215187
29529752.568807
Timer: unit propagation [ns] {SAT solver}
109
779808
100
566938
7154.201835
Counter: #implied literals {SAT solver}
109
336
0
10
3.082569
Counter: #implied literals / #variables {SAT solver}
109
6.175701
0.000000
1.000000
0.056658
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
155
17887545
10510
5854045
115403.516129
Counter: #implicit implied literals / #variables {SAT solver}
155
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
155
0.000000
0.000000
0.000000
0.000000
Timer: compute cut [ns] {Partitioning hypergraph}
3
424124925
451949
390947225
141374975.000000
Counter: cut size {Partitioning hypergraph}
3
36
10
16
12.000000
Counter: cut size / #variables {Partitioning hypergraph}
3
0.513503
0.003602
0.500000
0.171168
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
3
8734168
38719
7408132
2911389.333333
Counter: #vertices {Partitioning hypergraph}
3
5224
11
4293
1741.333333
Counter: #vertices / #clauses {Partitioning hypergraph}
3
1.721780
0.196429
0.853819
0.573927
Counter: #hyperedges {Partitioning hypergraph}
3
276
10
166
92.000000
Counter: #hyperedges / #variables {Partitioning hypergraph}
3
0.636380
0.037371
0.500000
0.212127
Counter: hypergraph size {Partitioning hypergraph}
3
14232
20
12302
4744.000000
Counter: hypergraph size / formula size {Partitioning hypergraph}
3
1.361734
0.166667
0.681627
0.453911
Timer: create equivalence structure [ns] {Partitioning hypergraph}
3
1052508
4350
872478
350836.000000
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
239
185
0
1
0.774059
Number: #current entries {Cache - component caching}
1
54
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
239
40028087748
2120
8263871203
167481538.694561
Timer: search cache record structure [ns] {Cache - component caching}
239
32251449
30
2633063
134943.301255
Timer: add cache record structure [ns] {Cache - component caching}
54
17663990
180
2875813
327110.925926
Counter: #empty cache records / #cache records {Cache - component caching}
239
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
239
73314132
8
9002100
306753.690377
Counter: formula size (positive hit) {Cache - component caching}
185
13823880
120
1301980
74723.675676
Counter: formula size (negative hit) {Cache - component caching}
54
59490252
8
9002100
1101671.333333
Counter: #variables (cache record structure) {Cache - component caching}
239
12735298
4
1500250
53285.765690
Counter: #variables (positive hit) {Cache - component caching}
185
2617840
20
240230
14150.486486
Counter: #variables (negative hit) {Cache - component caching}
54
10117458
4
1500250
187360.333333
Counter: #clauses (cache record structure) {Cache - component caching}
239
12787714
4
1500970
53505.079498
Counter: #clauses (positive hit) {Cache - component caching}
185
2643940
56
240914
14291.567568
Counter: #clauses (negative hit) {Cache - component caching}
54
10143774
4
1500970
187847.666667
Counter: #removed clauses / #clauses {Cache - component caching}
239
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
185
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
54
18900
30
1250
350.000000
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
54
54
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
