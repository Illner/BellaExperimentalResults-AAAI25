Number: formula size {Formula representation}
1
6000600
Number: #variables {Formula representation}
1
1000200
Number: #clauses {Formula representation}
1
1000280
Timer (reduced): initialize [ns] {Formula representation}
1
572387215
Timer: compute connected components [ns] {Formula representation}
199999
46862817654
13500
445058720
234315.259846
Number: circuit size {Circuit}
1
11052012
Number: #nodes {Circuit}
1
3523995
Number: #edges {Circuit}
1
11052012
Number: #variables {Circuit}
1
1000200
Timer: copy subcircuit [ns] {Circuit}
0
0
0
0
0.000000
Counter: formula size (copy subcircuit) {Circuit}
0
0
0
0
0.000000
Counter: #variables (copy subcircuit) {Circuit}
0
0
0
0
0.000000
Counter: #clauses (copy subcircuit) {Circuit}
0
0
0
0
0.000000
Timer (reduced): initialize [ns] {Compiler}
1
621747812
Timer (reduced): compile [ns] {Compiler}
1
528778600017
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
0
Number: #decisions {Compiler}
1
99999
Counter: ratio of recomputed hypergraph cuts {Compiler}
99999
88819
0
1
0.888199
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
88819
3999
0
1
0.045024
Counter: #connected components {Compiler}
199999
99999
0
1
0.499997
Counter: #monotone residual formulae / #residual formulae {Compiler}
199999
100000
0
1
0.500003
Counter: monotone residual formula size {Compiler}
100000
16000000
160
160
160.000000
Counter: #pure clauses / #clauses {Compiler}
199999
100301.881682
0.000000
1.000000
0.501512
Counter: pure residual formula size / residual formula size {Compiler}
199999
100207.562057
0.000000
1.000000
0.501040
Timer: assign literal [ns] {Compiler}
311675
340563650120
1270
47700112745
1092688.377701
Timer: unassign literal [ns] {Compiler}
311675
7878711244
210
36237069
25278.611515
Timer: get decision variable [ns] {Decision heuristic}
99999
802971857
40
28030105
8029.798868
Counter: #preselected variables {Decision heuristic}
99999
65992356
1
1000200
659.930159
Counter: #restricted variables / #preselected variables {Decision heuristic}
3999
10.647808
0.000050
0.003399
0.002663
Timer (reduced): initialize [ns] {SAT solver}
1
194558305
Timer (reduced): initial simplification [ns] {SAT solver}
1
1210
Timer (reduced): initially implied literals [ns] {SAT solver}
1
860
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
199999
25447923301
7900
200026134
127240.252706
Timer: unit propagation [ns] {SAT solver}
199999
82826510
160
227678
414.134621
Counter: #implied literals {SAT solver}
199999
620767
0
10
3.103851
Counter: #implied literals / #variables {SAT solver}
199999
1060.318015
0.000000
0.012346
0.005302
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
84820
33883573973
99149
3462561
399476.231702
Counter: #implicit implied literals / #variables {SAT solver}
84820
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
84820
43.634480
0.000000
0.004673
0.000514
Timer: compute cut [ns] {Partitioning hypergraph}
1000
157363896
131460
362698
157363.896000
Counter: cut size {Partitioning hypergraph}
1000
12589
12
13
12.589000
Counter: cut size / #variables {Partitioning hypergraph}
1000
2.693410
0.002567
0.002781
0.002693
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
84820
10874238459
26600
4728774
128203.707369
Counter: #vertices {Partitioning hypergraph}
84820
72000
0
72
0.848856
Counter: #vertices / #clauses {Partitioning hypergraph}
84820
15.567568
0.000000
0.015568
0.000184
Counter: #hyperedges {Partitioning hypergraph}
84820
17000
0
17
0.200424
Counter: #hyperedges / #variables {Partitioning hypergraph}
84820
3.637142
0.000000
0.003637
0.000043
Counter: hypergraph size {Partitioning hypergraph}
84820
157000
0
157
1.850979
Counter: hypergraph size / formula size {Partitioning hypergraph}
84820
8.720769
0.000000
0.008721
0.000103
Timer: create equivalence structure [ns] {Partitioning hypergraph}
84820
3336488072
13700
660466
39336.100825
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
99999
0
0
0
0.000000
Number: #current entries {Cache - component caching}
1
99999
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
99999
38110291629
36919
71578995
381106.727357
Timer: search cache record structure [ns] {Cache - component caching}
99999
158412578
150
272339
1584.141621
Timer: add cache record structure [ns] {Cache - component caching}
99999
197067907
280
1154694
1970.698777
Counter: #empty cache records / #cache records {Cache - component caching}
99999
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
99999
525421050
488
6000600
5254.263043
Counter: formula size (positive hit) {Cache - component caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - component caching}
99999
525421050
488
6000600
5254.263043
Counter: #variables (cache record structure) {Cache - component caching}
99999
135588996
244
1000200
1355.903519
Counter: #variables (positive hit) {Cache - component caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - component caching}
99999
135588996
244
1000200
1355.903519
Counter: #clauses (cache record structure) {Cache - component caching}
99999
129099678
164
1000280
1291.009690
Counter: #clauses (positive hit) {Cache - component caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - component caching}
99999
129099678
164
1000280
1291.009690
Counter: #removed clauses / #clauses {Cache - component caching}
99999
4006.513412
0.003639
1.000000
0.040066
Counter: #identical mappings / #mappings {Cache - component caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
99999
4611708
20
17449
46.117541
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
99999
99999
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
