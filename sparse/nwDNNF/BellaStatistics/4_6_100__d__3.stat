Number: formula size {Formula representation}
1
186960
Number: #variables {Formula representation}
1
31176
Number: #clauses {Formula representation}
1
31256
Timer (reduced): initialize [ns] {Formula representation}
1
27051562
Timer: compute connected components [ns] {Formula representation}
55
14976487
750
3194507
272299.763636
Number: circuit size {Circuit}
1
462400
Number: #nodes {Circuit}
1
247763
Number: #edges {Circuit}
1
462400
Number: #variables {Circuit}
1
31176
Timer: copy subcircuit [ns] {Circuit}
53
67456078
5830
16037595
1272756.188679
Counter: formula size (copy subcircuit) {Circuit}
53
154399
35
26208
2913.188679
Counter: #variables (copy subcircuit) {Circuit}
53
32126
10
5244
606.150943
Counter: #clauses (copy subcircuit) {Circuit}
53
33386
16
5314
629.924528
Timer (reduced): initialize [ns] {Compiler}
1
21673098
Timer (reduced): compile [ns] {Compiler}
1
1026130801
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
6
Number: #splits {Compiler}
1
39
Number: #decisions {Compiler}
1
30
Counter: ratio of recomputed hypergraph cuts {Compiler}
83
25
0
1
0.301205
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
9
6
0
1
0.666667
Counter: #connected components {Compiler}
55
83
1
4
1.509091
Counter: #monotone residual formulae / #residual formulae {Compiler}
55
0
0
0
0.000000
Counter: monotone residual formula size {Compiler}
0
0
0
0
0.000000
Counter: #pure clauses / #clauses {Compiler}
55
0.000000
0.000000
0.000000
0.000000
Counter: pure residual formula size / residual formula size {Compiler}
55
0.000000
0.000000
0.000000
0.000000
Timer: assign literal [ns] {Compiler}
96
209314904
310
86350734
2180363.583333
Timer: unassign literal [ns] {Compiler}
96
7293918
270
1411895
75978.312500
Timer: get decision variable [ns] {Decision heuristic}
30
1973148
50
840931
65771.600000
Counter: #preselected variables {Decision heuristic}
30
109530
1
31176
3651.000000
Counter: #restricted variables / #preselected variables {Decision heuristic}
0
0.000000
0.000000
0.000000
0.000000
Timer (reduced): initialize [ns] {SAT solver}
1
8199276
Timer (reduced): initial simplification [ns] {SAT solver}
1
510
Timer (reduced): initially implied literals [ns] {SAT solver}
1
290
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
61
19417870
440
4889450
318325.737705
Timer: unit propagation [ns] {SAT solver}
61
24540
100
4760
402.295082
Counter: #implied literals {SAT solver}
61
136
0
6
2.229508
Counter: #implied literals / #variables {SAT solver}
61
4.501180
0.000000
1.000000
0.073790
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
14
3570985
6090
2869881
255070.357143
Counter: #implicit implied literals / #variables {SAT solver}
14
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
14
0.000000
0.000000
0.000000
0.000000
Timer: compute cut [ns] {Partitioning hypergraph}
3
417839542
374246
383350216
139279847.333333
Counter: cut size {Partitioning hypergraph}
3
48
4
27
16.000000
Counter: cut size / #variables {Partitioning hypergraph}
3
0.524808
0.006167
0.500000
0.174936
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
3
18171704
8960
17002906
6057234.666667
Counter: #vertices {Partitioning hypergraph}
3
5231
5
4344
1743.666667
Counter: #vertices / #clauses {Partitioning hypergraph}
3
2.339451
0.454545
0.977498
0.779817
Counter: #hyperedges {Partitioning hypergraph}
3
81
4
41
27.000000
Counter: #hyperedges / #variables {Partitioning hypergraph}
3
0.548839
0.009365
0.500000
0.182946
Counter: hypergraph size {Partitioning hypergraph}
3
19986
8
17338
6662.000000
Counter: hypergraph size / formula size {Partitioning hypergraph}
3
1.840213
0.333333
0.792594
0.613404
Timer: create equivalence structure [ns] {Partitioning hypergraph}
3
999419
4330
844751
333139.666667
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
83
53
0
1
0.638554
Number: #current entries {Cache - component caching}
1
30
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
83
259288701
2730
66593577
3123960.253012
Timer: search cache record structure [ns] {Cache - component caching}
83
217369
40
34140
2618.903614
Timer: add cache record structure [ns] {Cache - component caching}
30
358476
90
103228
11949.200000
Counter: #empty cache records / #cache records {Cache - component caching}
83
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
83
882560
8
186960
10633.253012
Counter: formula size (positive hit) {Cache - component caching}
53
154399
35
26208
2913.188679
Counter: formula size (negative hit) {Cache - component caching}
30
728161
8
186960
24272.033333
Counter: #variables (cache record structure) {Cache - component caching}
83
157988
4
31176
1903.469880
Counter: #variables (positive hit) {Cache - component caching}
53
32126
10
5244
606.150943
Counter: #variables (negative hit) {Cache - component caching}
30
125862
4
31176
4195.400000
Counter: #clauses (cache record structure) {Cache - component caching}
83
160608
4
31256
1935.036145
Counter: #clauses (positive hit) {Cache - component caching}
53
33386
16
5314
629.924528
Counter: #clauses (negative hit) {Cache - component caching}
30
127222
4
31256
4240.733333
Counter: #removed clauses / #clauses {Cache - component caching}
83
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
53
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
30
2559
40
300
85.300000
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
30
30
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
