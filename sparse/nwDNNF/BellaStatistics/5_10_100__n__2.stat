Number: formula size {Formula representation}
1
35000600
Number: #variables {Formula representation}
1
5000150
Number: #clauses {Formula representation}
1
5000280
Timer (reduced): initialize [ns] {Formula representation}
1
3220448335
Timer: compute connected components [ns] {Formula representation}
199999
53204147783
8210
2130491701
266022.069025
Number: circuit size {Circuit}
1
15840859
Number: #nodes {Circuit}
1
15519068
Number: #edges {Circuit}
1
15840859
Number: #variables {Circuit}
1
5000150
Timer: copy subcircuit [ns] {Circuit}
0
0
0
0
0.000000
Counter: formula size (copy subcircuit) {Circuit}
0
0
0
0
0.000000
Counter: #variables (copy subcircuit) {Circuit}
0
0
0
0
0.000000
Counter: #clauses (copy subcircuit) {Circuit}
0
0
0
0
0.000000
Timer (reduced): initialize [ns] {Compiler}
1
3762591684
Timer (reduced): compile [ns] {Compiler}
1
7049856494939
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
0
Number: #decisions {Compiler}
1
99999
Counter: ratio of recomputed hypergraph cuts {Compiler}
99999
85253
0
1
0.852539
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
85253
1999
0
1
0.023448
Counter: #connected components {Compiler}
199999
99999
0
1
0.499997
Counter: #monotone residual formulae / #residual formulae {Compiler}
199999
100000
0
1
0.500003
Counter: monotone residual formula size {Compiler}
100000
10000000
100
100
100.000000
Counter: #pure clauses / #clauses {Compiler}
199999
100000.000000
0.000000
1.000000
0.500003
Counter: pure residual formula size / residual formula size {Compiler}
199999
100000.000000
0.000000
1.000000
0.500003
Timer: assign literal [ns] {Compiler}
317422
6822339822128
680
1857642195057
21492964.640535
Timer: unassign literal [ns] {Compiler}
317422
10183552996
200
258107926
32082.064243
Timer: get decision variable [ns] {Decision heuristic}
99999
1711416358
40
150408876
17114.334723
Counter: #preselected variables {Decision heuristic}
99999
86738432
1
5000150
867.392994
Counter: #restricted variables / #preselected variables {Decision heuristic}
1999
4.889397
0.000010
0.003929
0.002446
Timer (reduced): initialize [ns] {SAT solver}
1
1056683508
Timer (reduced): initial simplification [ns] {SAT solver}
1
1150
Timer (reduced): initially implied literals [ns] {SAT solver}
1
740
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
199999
37759825396
5150
1168442073
188800.070980
Timer: unit propagation [ns] {SAT solver}
199999
81931488
150
255449
409.659488
Counter: #implied literals {SAT solver}
199999
597394
0
10
2.986985
Counter: #implied literals / #variables {SAT solver}
199999
1723.294648
0.000000
0.019608
0.008617
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
83254
36978940897
55830
9887545
444170.140738
Counter: #implicit implied literals / #variables {SAT solver}
83254
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
83254
102.583478
0.000000
0.006494
0.001232
Timer: compute cut [ns] {Partitioning hypergraph}
1902
249249327
32419
562339
131045.913249
Counter: cut size {Partitioning hypergraph}
1902
16706
3
14
8.783386
Counter: cut size / #variables {Partitioning hypergraph}
1902
10.568105
0.003051
0.008333
0.005556
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
83254
8776201304
17210
10749742
105414.770510
Counter: #vertices {Partitioning hypergraph}
83254
95608
0
92
1.148389
Counter: #vertices / #clauses {Partitioning hypergraph}
83254
31.592594
0.000000
0.019991
0.000379
Counter: #hyperedges {Partitioning hypergraph}
83254
22608
0
19
0.271555
Counter: #hyperedges / #variables {Partitioning hypergraph}
83254
14.163460
0.000000
0.011111
0.000170
Counter: hypergraph size {Partitioning hypergraph}
83254
207118
0
199
2.487784
Counter: hypergraph size / formula size {Partitioning hypergraph}
83254
17.560439
0.000000
0.010923
0.000211
Timer: create equivalence structure [ns] {Partitioning hypergraph}
83254
2406168117
7879
1539886
28901.531662
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
99999
0
0
0
0.000000
Number: #current entries {Cache - component caching}
1
99999
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
99999
46490914302
20300
391646522
464913.792158
Timer: search cache record structure [ns] {Cache - component caching}
99999
170721456
140
958568
1707.231632
Timer: add cache record structure [ns] {Cache - component caching}
99999
234131043
190
3031332
2341.333843
Counter: #empty cache records / #cache records {Cache - component caching}
99999
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
99999
685376808
308
35000600
6853.836618
Counter: formula size (positive hit) {Cache - component caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - component caching}
99999
685376808
308
35000600
6853.836618
Counter: #variables (cache record structure) {Cache - component caching}
99999
141359786
154
5000150
1413.611996
Counter: #variables (positive hit) {Cache - component caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - component caching}
99999
141359786
154
5000150
1413.611996
Counter: #clauses (cache record structure) {Cache - component caching}
99999
137924664
104
5000280
1379.260433
Counter: #clauses (positive hit) {Cache - component caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - component caching}
99999
137924664
104
5000280
1379.260433
Counter: #removed clauses / #clauses {Cache - component caching}
99999
5545.855340
0.000448
1.000000
0.055459
Counter: #identical mappings / #mappings {Cache - component caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
99999
5556767
20
23530
55.568226
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
99999
99999
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
