Number: formula size {Formula representation}
1
9002100
Number: #variables {Formula representation}
1
1500250
Number: #clauses {Formula representation}
1
1500970
Timer (reduced): initialize [ns] {Formula representation}
1
898094575
Timer: compute connected components [ns] {Formula representation}
99
1306097539
480
114164090
13192904.434343
Number: circuit size {Circuit}
1
147864430
Number: #nodes {Circuit}
1
52362719
Number: #edges {Circuit}
1
147864430
Number: #variables {Circuit}
1
1500250
Timer: copy subcircuit [ns] {Circuit}
185
33514018081
16250
4423089240
181156854.491892
Counter: formula size (copy subcircuit) {Circuit}
185
19268880
120
1851980
104156.108108
Counter: #variables (copy subcircuit) {Circuit}
185
3529000
20
330230
19075.675676
Counter: #clauses (copy subcircuit) {Circuit}
185
3556396
56
330914
19223.762162
Timer (reduced): initialize [ns] {Compiler}
1
847720339
Timer (reduced): compile [ns] {Compiler}
1
436480906334
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
10
Number: #splits {Compiler}
1
160
Number: #decisions {Compiler}
1
54
Counter: ratio of recomputed hypergraph cuts {Compiler}
239
215
0
1
0.899582
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
35
32
0
1
0.914286
Counter: #connected components {Compiler}
99
239
1
13
2.414141
Counter: #monotone residual formulae / #residual formulae {Compiler}
99
0
0
0
0.000000
Counter: monotone residual formula size {Compiler}
0
0
0
0
0.000000
Counter: #pure clauses / #clauses {Compiler}
99
0.000000
0.000000
0.000000
0.000000
Counter: pure residual formula size / residual formula size {Compiler}
99
0.000000
0.000000
0.000000
0.000000
Timer: assign literal [ns] {Compiler}
168
349879742876
290
89397551236
2082617517.119048
Timer: unassign literal [ns] {Compiler}
168
661027005
250
82611345
3934684.553571
Timer: get decision variable [ns] {Decision heuristic}
54
370421856
70
64621027
6859664.000000
Counter: #preselected variables {Decision heuristic}
54
11006230
2
1500250
203819.074074
Counter: #restricted variables / #preselected variables {Decision heuristic}
0
0.000000
0.000000
0.000000
0.000000
Timer (reduced): initialize [ns] {SAT solver}
1
298533442
Timer (reduced): initial simplification [ns] {SAT solver}
1
1040
Timer (reduced): initially implied literals [ns] {SAT solver}
1
710
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
109
2936896562
390
262088667
26944005.155963
Timer: unit propagation [ns] {SAT solver}
109
248490
120
33330
2279.724771
Counter: #implied literals {SAT solver}
109
336
0
10
3.082569
Counter: #implied literals / #variables {SAT solver}
109
6.144062
0.000000
1.000000
0.056368
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
156
25095533
9830
5674021
160868.801282
Counter: #implicit implied literals / #variables {SAT solver}
156
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
156
0.000000
0.000000
0.000000
0.000000
Timer: compute cut [ns] {Partitioning hypergraph}
3
502153152
433841
454894989
167384384.000000
Counter: cut size {Partitioning hypergraph}
3
46
10
26
15.333333
Counter: cut size / #variables {Partitioning hypergraph}
3
0.512336
0.005439
0.500000
0.170779
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
3
11621793
27660
9786446
3873931.000000
Counter: #vertices {Partitioning hypergraph}
3
5967
11
4632
1989.000000
Counter: #vertices / #clauses {Partitioning hypergraph}
3
1.737870
0.196429
0.863857
0.579290
Counter: #hyperedges {Partitioning hypergraph}
3
315
10
165
105.000000
Counter: #hyperedges / #variables {Partitioning hypergraph}
3
0.631071
0.034519
0.500000
0.210357
Counter: hypergraph size {Partitioning hypergraph}
3
16150
20
13380
5383.333333
Counter: hypergraph size / formula size {Partitioning hypergraph}
3
1.371325
0.166667
0.687741
0.457108
Timer: create equivalence structure [ns] {Partitioning hypergraph}
3
1171454
4080
936203
390484.666667
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
239
185
0
1
0.774059
Number: #current entries {Cache - component caching}
1
54
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
239
46761212558
2190
8633467247
195653609.029289
Timer: search cache record structure [ns] {Cache - component caching}
239
50180456
40
4253204
209960.066946
Timer: add cache record structure [ns] {Cache - component caching}
54
71734438
160
17645846
1328415.518519
Counter: #empty cache records / #cache records {Cache - component caching}
239
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
239
84204132
8
9002100
352318.543933
Counter: formula size (positive hit) {Cache - component caching}
185
19268880
120
1851980
104156.108108
Counter: formula size (negative hit) {Cache - component caching}
54
64935252
8
9002100
1202504.666667
Counter: #variables (cache record structure) {Cache - component caching}
239
14557618
4
1500250
60910.535565
Counter: #variables (positive hit) {Cache - component caching}
185
3529000
20
330230
19075.675676
Counter: #variables (negative hit) {Cache - component caching}
54
11028618
4
1500250
204233.666667
Counter: #clauses (cache record structure) {Cache - component caching}
239
14612626
4
1500970
61140.694561
Counter: #clauses (positive hit) {Cache - component caching}
185
3556396
56
330914
19223.762162
Counter: #clauses (negative hit) {Cache - component caching}
54
11056230
4
1500970
204745.000000
Counter: #removed clauses / #clauses {Cache - component caching}
239
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
185
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
54
17630
30
940
326.481481
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
54
54
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
