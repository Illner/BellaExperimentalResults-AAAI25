Number: formula size {Formula representation}
1
31353168
Number: #variables {Formula representation}
1
3919272
Number: #clauses {Formula representation}
1
3919258
Timer (reduced): initialize [ns] {Formula representation}
1
2759766671
Timer: compute connected components [ns] {Formula representation}
81
10884665505
11680
2174554190
134378586.481481
Number: circuit size {Circuit}
1
30410368
Number: #nodes {Circuit}
1
13642547
Number: #edges {Circuit}
1
30410368
Number: #variables {Circuit}
1
3919272
Timer: copy subcircuit [ns] {Circuit}
33
8281099213
74320
1595494853
250942400.393939
Counter: formula size (copy subcircuit) {Circuit}
33
40025320
368
6485472
1212888.484848
Counter: #variables (copy subcircuit) {Circuit}
33
5648624
184
886620
171170.424242
Counter: #clauses (copy subcircuit) {Circuit}
33
5647038
124
886596
171122.363636
Timer (reduced): initialize [ns] {Compiler}
1
3094476048
Timer (reduced): compile [ns] {Compiler}
1
5492291077968
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
0
Number: #decisions {Compiler}
1
40
Counter: ratio of recomputed hypergraph cuts {Compiler}
73
57
0
1
0.780822
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
29
24
0
1
0.827586
Counter: #connected components {Compiler}
81
73
0
1
0.901235
Counter: #monotone residual formulae / #residual formulae {Compiler}
81
8
0
1
0.098765
Counter: monotone residual formula size {Compiler}
8
1008
120
144
126.000000
Counter: #pure clauses / #clauses {Compiler}
81
8.860778
0.000000
1.000000
0.109392
Counter: pure residual formula size / residual formula size {Compiler}
81
8.600931
0.000000
1.000000
0.106184
Timer: assign literal [ns] {Compiler}
128
5338780334090
1100
1966248500248
41709221360.078125
Timer: unassign literal [ns] {Compiler}
128
1155893265
340
225570351
9030416.132812
Timer: get decision variable [ns] {Decision heuristic}
40
537193775
60
126099202
13429844.375000
Counter: #preselected variables {Decision heuristic}
40
17394471
1
3919272
434861.775000
Counter: #restricted variables / #preselected variables {Decision heuristic}
24
0.014911
0.000011
0.002952
0.000621
Timer (reduced): initialize [ns] {SAT solver}
1
787883447
Timer (reduced): initial simplification [ns] {SAT solver}
1
1160
Timer (reduced): initially implied literals [ns] {SAT solver}
1
610
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
81
7077989553
14230
971986457
87382587.074074
Timer: unit propagation [ns] {SAT solver}
81
365980
210
29850
4518.271605
Counter: #implied literals {SAT solver}
81
176
0
6
2.172840
Counter: #implied literals / #variables {SAT solver}
81
0.161734
0.000000
0.016393
0.001997
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
13
8824100
98409
2020223
678776.923077
Counter: #implicit implied literals / #variables {SAT solver}
13
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
13
0.040384
0.000000
0.005618
0.003106
Timer: compute cut [ns] {Partitioning hypergraph}
2
6285519
3020530
3264989
3142759.500000
Counter: cut size {Partitioning hypergraph}
2
17
8
9
8.500000
Counter: cut size / #variables {Partitioning hypergraph}
2
0.006421
0.002522
0.003899
0.003211
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
5
5026634
28600
3906027
1005326.800000
Counter: #vertices {Partitioning hypergraph}
5
76
0
38
15.200000
Counter: #vertices / #clauses {Partitioning hypergraph}
5
0.029959
0.000000
0.019115
0.005992
Counter: #hyperedges {Partitioning hypergraph}
5
25
0
13
5.000000
Counter: #hyperedges / #variables {Partitioning hypergraph}
5
0.009491
0.000000
0.005848
0.001898
Counter: hypergraph size {Partitioning hypergraph}
5
204
0
120
40.800000
Counter: hypergraph size / formula size {Partitioning hypergraph}
5
0.018236
0.000000
0.010972
0.003647
Timer: create equivalence structure [ns] {Partitioning hypergraph}
5
510369
14950
260220
102073.800000
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
73
33
0
1
0.452055
Number: #current entries {Cache - component caching}
1
40
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
73
117118563658
123019
22625002240
1604363885.726027
Timer: search cache record structure [ns] {Cache - component caching}
73
64895665
140
6788258
888981.712329
Timer: add cache record structure [ns] {Cache - component caching}
40
38804812
270
8429763
970120.300000
Counter: #empty cache records / #cache records {Cache - component caching}
73
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
73
175685200
368
31353168
2406646.575342
Counter: formula size (positive hit) {Cache - component caching}
33
40025320
368
6485472
1212888.484848
Counter: formula size (negative hit) {Cache - component caching}
40
135659880
368
31353168
3391497.000000
Counter: #variables (cache record structure) {Cache - component caching}
73
23057568
184
3919272
315857.095890
Counter: #variables (positive hit) {Cache - component caching}
33
5648624
184
886620
171170.424242
Counter: #variables (negative hit) {Cache - component caching}
40
17408944
184
3919272
435223.600000
Counter: #clauses (cache record structure) {Cache - component caching}
73
23053954
124
3919258
315807.589041
Counter: #clauses (positive hit) {Cache - component caching}
33
5647038
124
886596
171122.363636
Counter: #clauses (negative hit) {Cache - component caching}
40
17406916
124
3919258
435172.900000
Counter: #removed clauses / #clauses {Cache - component caching}
73
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
33
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
40
18380
50
940
459.500000
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
40
40
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
