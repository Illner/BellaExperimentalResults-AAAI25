Number: formula size {Formula representation}
1
1250600
Number: #variables {Formula representation}
1
250350
Number: #clauses {Formula representation}
1
250280
Timer (reduced): initialize [ns] {Formula representation}
1
159976416
Timer: compute connected components [ns] {Formula representation}
91
1192148631
25590
103150666
13100534.406593
Number: circuit size {Circuit}
1
15975430
Number: #nodes {Circuit}
1
1383919
Number: #edges {Circuit}
1
15975430
Number: #variables {Circuit}
1
250350
Timer: copy subcircuit [ns] {Circuit}
36
1557029612
564909
183478759
43250822.555556
Counter: formula size (copy subcircuit) {Circuit}
36
5500800
4020
468480
152800.000000
Counter: #variables (copy subcircuit) {Circuit}
36
1188540
1450
97330
33015.000000
Counter: #clauses (copy subcircuit) {Circuit}
36
1184040
1356
97224
32890.000000
Timer (reduced): initialize [ns] {Compiler}
1
229563874
Timer (reduced): compile [ns] {Compiler}
1
17127986653
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
0
Number: #decisions {Compiler}
1
45
Counter: ratio of recomputed hypergraph cuts {Compiler}
81
69
0
1
0.851852
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
40
30
0
1
0.750000
Counter: #connected components {Compiler}
91
81
0
1
0.890110
Counter: #monotone residual formulae / #residual formulae {Compiler}
91
10
0
1
0.109890
Counter: monotone residual formula size {Compiler}
10
2600
260
260
260.000000
Counter: #pure clauses / #clauses {Compiler}
91
10.719970
0.000000
1.000000
0.117802
Counter: pure residual formula size / residual formula size {Compiler}
91
10.492132
0.000000
1.000000
0.115298
Timer: assign literal [ns] {Compiler}
140
5972668058
2040
1182254804
42661914.700000
Timer: unassign literal [ns] {Compiler}
140
121155752
490
13413524
865398.228571
Timer: get decision variable [ns] {Decision heuristic}
45
56201353
100
7317942
1248918.955556
Counter: #preselected variables {Decision heuristic}
45
2413682
1
250350
53637.377778
Counter: #restricted variables / #preselected variables {Decision heuristic}
30
0.032233
0.000200
0.003484
0.001074
Timer (reduced): initialize [ns] {SAT solver}
1
84222289
Timer (reduced): initial simplification [ns] {SAT solver}
1
700
Timer (reduced): initially implied literals [ns] {SAT solver}
1
420
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
91
479320815
36830
29462295
5267261.703297
Timer: unit propagation [ns] {SAT solver}
91
115020
270
9220
1263.956044
Counter: #implied literals {SAT solver}
91
280
0
10
3.076923
Counter: #implied literals / #variables {SAT solver}
91
0.082501
0.000000
0.007634
0.000907
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
12
10170648
240789
3226446
847554.000000
Counter: #implicit implied literals / #variables {SAT solver}
12
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
12
0.002538
0.000000
0.002538
0.000212
Timer: compute cut [ns] {Partitioning hypergraph}
1
4282585
4282585
4282585
4282585.000000
Counter: cut size {Partitioning hypergraph}
1
11
11
11
11.000000
Counter: cut size / #variables {Partitioning hypergraph}
1
0.002358
0.002358
0.002358
0.002358
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
10
3622447
50400
2296518
362244.700000
Counter: #vertices {Partitioning hypergraph}
10
72
0
72
7.200000
Counter: #vertices / #clauses {Partitioning hypergraph}
10
0.016054
0.000000
0.016054
0.001605
Counter: #hyperedges {Partitioning hypergraph}
10
17
0
17
1.700000
Counter: #hyperedges / #variables {Partitioning hypergraph}
10
0.003645
0.000000
0.003645
0.000364
Counter: hypergraph size {Partitioning hypergraph}
10
157
0
157
15.700000
Counter: hypergraph size / formula size {Partitioning hypergraph}
10
0.009702
0.000000
0.009702
0.000970
Timer: create equivalence structure [ns] {Partitioning hypergraph}
10
1287379
23150
529469
128737.900000
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
81
36
0
1
0.444444
Number: #current entries {Cache - component caching}
1
45
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
81
7095498565
301820
589848249
87598747.716049
Timer: search cache record structure [ns] {Cache - component caching}
81
9318738
150
1193118
115046.148148
Timer: add cache record structure [ns] {Cache - component caching}
45
12567765
1320
1890428
279283.666667
Counter: #empty cache records / #cache records {Cache - component caching}
81
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
81
17367060
788
1250600
214408.148148
Counter: formula size (positive hit) {Cache - component caching}
36
5500800
4020
468480
152800.000000
Counter: formula size (negative hit) {Cache - component caching}
45
11866260
788
1250600
263694.666667
Counter: #variables (cache record structure) {Cache - component caching}
81
3630870
394
250350
44825.555556
Counter: #variables (positive hit) {Cache - component caching}
36
1188540
1450
97330
33015.000000
Counter: #variables (negative hit) {Cache - component caching}
45
2442330
394
250350
54274.000000
Counter: #clauses (cache record structure) {Cache - component caching}
81
3620220
264
250280
44694.074074
Counter: #clauses (positive hit) {Cache - component caching}
36
1184040
1356
97224
32890.000000
Counter: #clauses (negative hit) {Cache - component caching}
45
2436180
264
250280
54137.333333
Counter: #removed clauses / #clauses {Cache - component caching}
81
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
36
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
45
15330
40
1020
340.666667
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
45
45
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
