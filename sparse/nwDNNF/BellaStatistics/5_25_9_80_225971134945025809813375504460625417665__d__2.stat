Number: formula size {Formula representation}
1
8859870
Number: #variables {Formula representation}
1
1476540
Number: #clauses {Formula representation}
1
1477380
Timer (reduced): initialize [ns] {Formula representation}
1
850134481
Timer: compute connected components [ns] {Formula representation}
88
1168123683
520
105640846
13274132.761364
Number: circuit size {Circuit}
1
111090838
Number: #nodes {Circuit}
1
41585885
Number: #edges {Circuit}
1
111090838
Number: #variables {Circuit}
1
1476540
Timer: copy subcircuit [ns] {Circuit}
256
24305550544
14560
3148294148
94943556.812500
Counter: formula size (copy subcircuit) {Circuit}
256
16988256
99
1787013
66360.375000
Counter: #variables (copy subcircuit) {Circuit}
256
3152448
18
321786
12314.250000
Counter: #clauses (copy subcircuit) {Circuit}
256
3182016
46
322598
12429.750000
Timer (reduced): initialize [ns] {Compiler}
1
850693734
Timer (reduced): compile [ns] {Compiler}
1
466573878543
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
9
Number: #splits {Compiler}
1
234
Number: #decisions {Compiler}
1
48
Counter: ratio of recomputed hypergraph cuts {Compiler}
304
286
0
1
0.940789
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
33
30
0
1
0.909091
Counter: #connected components {Compiler}
88
304
1
19
3.454545
Counter: #monotone residual formulae / #residual formulae {Compiler}
88
0
0
0
0.000000
Counter: monotone residual formula size {Compiler}
0
0
0
0
0.000000
Counter: #pure clauses / #clauses {Compiler}
88
0.000000
0.000000
0.000000
0.000000
Counter: pure residual formula size / residual formula size {Compiler}
88
0.000000
0.000000
0.000000
0.000000
Timer: assign literal [ns] {Compiler}
150
397931416535
210
80397361492
2652876110.233333
Timer: unassign literal [ns] {Compiler}
150
521590372
200
59943498
3477269.146667
Timer: get decision variable [ns] {Decision heuristic}
48
385919420
50
70628752
8039987.916667
Counter: #preselected variables {Decision heuristic}
48
9778596
2
1476540
203720.750000
Counter: #restricted variables / #preselected variables {Decision heuristic}
0
0.000000
0.000000
0.000000
0.000000
Timer (reduced): initialize [ns] {SAT solver}
1
286263795
Timer (reduced): initial simplification [ns] {SAT solver}
1
1200
Timer (reduced): initially implied literals [ns] {SAT solver}
1
620
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
97
2743421410
500
247802443
28282694.948454
Timer: unit propagation [ns] {SAT solver}
97
227922
110
45900
2349.711340
Counter: #implied literals {SAT solver}
97
276
0
9
2.845361
Counter: #implied literals / #variables {SAT solver}
97
5.593217
0.000000
1.000000
0.057662
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
232
27798485
8450
5898339
119821.056034
Counter: #implicit implied literals / #variables {SAT solver}
232
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
232
0.000000
0.000000
0.000000
0.000000
Timer: compute cut [ns] {Partitioning hypergraph}
3
333924742
413452
275957194
111308247.333333
Counter: cut size {Partitioning hypergraph}
3
36
9
18
12.000000
Counter: cut size / #variables {Partitioning hypergraph}
3
0.509646
0.004438
0.500000
0.169882
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
3
9807058
46630
7677618
3269019.333333
Counter: #vertices {Partitioning hypergraph}
3
5424
10
3846
1808.000000
Counter: #vertices / #clauses {Partitioning hypergraph}
3
1.706468
0.217391
0.803762
0.568823
Counter: #hyperedges {Partitioning hypergraph}
3
426
9
237
142.000000
Counter: #hyperedges / #variables {Partitioning hypergraph}
3
0.662599
0.058432
0.500000
0.220866
Counter: hypergraph size {Partitioning hypergraph}
3
14307
18
11022
4769.000000
Counter: hypergraph size / formula size {Partitioning hypergraph}
3
1.363370
0.181818
0.659250
0.454457
Timer: create equivalence structure [ns] {Partitioning hypergraph}
3
908296
3410
639814
302765.333333
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
304
256
0
1
0.842105
Number: #current entries {Cache - component caching}
1
48
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
304
38726031093
2080
7637294101
127388260.174342
Timer: search cache record structure [ns] {Cache - component caching}
304
40006051
30
3835049
131598.851974
Timer: add cache record structure [ns] {Cache - component caching}
48
20890834
190
3080585
435225.708333
Counter: #empty cache records / #cache records {Cache - component caching}
304
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
304
74478168
8
8859870
244993.973684
Counter: formula size (positive hit) {Cache - component caching}
256
16988256
99
1787013
66360.375000
Counter: formula size (negative hit) {Cache - component caching}
48
57489912
8
8859870
1197706.500000
Counter: #variables (cache record structure) {Cache - component caching}
304
12946992
4
1476540
42588.789474
Counter: #variables (positive hit) {Cache - component caching}
256
3152448
18
321786
12314.250000
Counter: #variables (negative hit) {Cache - component caching}
48
9794544
4
1476540
204053.000000
Counter: #clauses (cache record structure) {Cache - component caching}
304
13005960
4
1477380
42782.763158
Counter: #clauses (positive hit) {Cache - component caching}
256
3182016
46
322598
12429.750000
Counter: #clauses (negative hit) {Cache - component caching}
48
9823944
4
1477380
204665.500000
Counter: #removed clauses / #clauses {Cache - component caching}
304
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
256
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
48
19330
30
1350
402.708333
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
48
48
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
