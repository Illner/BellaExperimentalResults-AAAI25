Number: formula size {Formula representation}
1
14655
Number: #variables {Formula representation}
1
2490
Number: #clauses {Formula representation}
1
2465
Timer (reduced): initialize [ns] {Formula representation}
1
3176973
Timer: compute connected components [ns] {Formula representation}
21
3211652
3520
918842
152935.809524
Number: circuit size {Circuit}
1
13312
Number: #nodes {Circuit}
1
9188
Number: #edges {Circuit}
1
13312
Number: #variables {Circuit}
1
2490
Timer: copy subcircuit [ns] {Circuit}
8
1608657
21500
596555
201082.125000
Counter: formula size (copy subcircuit) {Circuit}
8
13260
177
4110
1657.500000
Counter: #variables (copy subcircuit) {Circuit}
8
3144
78
864
393.000000
Counter: #clauses (copy subcircuit) {Circuit}
8
2948
61
838
368.500000
Timer (reduced): initialize [ns] {Compiler}
1
6374356
Timer (reduced): compile [ns] {Compiler}
1
36716467
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
0
Number: #decisions {Compiler}
1
10
Counter: ratio of recomputed hypergraph cuts {Compiler}
18
2
0
1
0.111111
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
2
0
0
0
0.000000
Counter: #connected components {Compiler}
21
18
0
1
0.857143
Counter: #monotone residual formulae / #residual formulae {Compiler}
21
3
0
1
0.142857
Counter: monotone residual formula size {Compiler}
3
108
36
36
36.000000
Counter: #pure clauses / #clauses {Compiler}
21
3.493151
0.000000
1.000000
0.166341
Counter: pure residual formula size / residual formula size {Compiler}
21
3.358209
0.000000
1.000000
0.159915
Timer: assign literal [ns] {Compiler}
35
1995566
540
770554
57016.171429
Timer: unassign literal [ns] {Compiler}
35
260707
280
63889
7448.771429
Timer: get decision variable [ns] {Decision heuristic}
10
2040
50
660
204.000000
Counter: #preselected variables {Decision heuristic}
10
66
1
13
6.600000
Counter: #restricted variables / #preselected variables {Decision heuristic}
0
0.000000
0.000000
0.000000
0.000000
Timer (reduced): initialize [ns] {SAT solver}
1
1337389
Timer (reduced): initial simplification [ns] {SAT solver}
1
2320
Timer (reduced): initially implied literals [ns] {SAT solver}
1
240
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
21
672765
2250
135049
32036.428571
Timer: unit propagation [ns] {SAT solver}
21
7290
120
890
347.142857
Counter: #implied literals {SAT solver}
21
35
0
3
1.666667
Counter: #implied literals / #variables {SAT solver}
21
0.212835
0.000000
0.052632
0.010135
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
2
1175180
24080
1151100
587590.000000
Counter: #implicit implied literals / #variables {SAT solver}
2
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
2
0.017241
0.000000
0.017241
0.008621
Timer: compute cut [ns] {Partitioning hypergraph}
1
11890698
11890698
11890698
11890698.000000
Counter: cut size {Partitioning hypergraph}
1
13
13
13
13.000000
Counter: cut size / #variables {Partitioning hypergraph}
1
0.005221
0.005221
0.005221
0.005221
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
2
4491512
10160
4481352
2245756.000000
Counter: #vertices {Partitioning hypergraph}
2
329
0
329
164.500000
Counter: #vertices / #clauses {Partitioning hypergraph}
2
0.133469
0.000000
0.133469
0.066734
Counter: #hyperedges {Partitioning hypergraph}
2
15
0
15
7.500000
Counter: #hyperedges / #variables {Partitioning hypergraph}
2
0.006024
0.000000
0.006024
0.003012
Counter: hypergraph size {Partitioning hypergraph}
2
1311
0
1311
655.500000
Counter: hypergraph size / formula size {Partitioning hypergraph}
2
0.089458
0.000000
0.089458
0.044729
Timer: create equivalence structure [ns] {Partitioning hypergraph}
2
209639
5460
204179
104819.500000
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
18
8
0
1
0.444444
Number: #current entries {Cache - component caching}
1
10
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
18
9844291
33819
2887135
546905.055556
Timer: search cache record structure [ns] {Cache - component caching}
18
16500
100
3640
916.666667
Timer: add cache record structure [ns] {Cache - component caching}
10
11150
150
3900
1115.000000
Counter: #empty cache records / #cache records {Cache - component caching}
18
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
18
49135
116
14655
2729.722222
Counter: formula size (positive hit) {Cache - component caching}
8
13260
177
4110
1657.500000
Counter: formula size (negative hit) {Cache - component caching}
10
35875
116
14655
3587.500000
Counter: #variables (cache record structure) {Cache - component caching}
18
10058
58
2490
558.777778
Counter: #variables (positive hit) {Cache - component caching}
8
3144
78
864
393.000000
Counter: #variables (negative hit) {Cache - component caching}
10
6914
58
2490
691.400000
Counter: #clauses (cache record structure) {Cache - component caching}
18
9611
40
2465
533.944444
Counter: #clauses (positive hit) {Cache - component caching}
8
2948
61
838
368.500000
Counter: #clauses (negative hit) {Cache - component caching}
10
6663
40
2465
666.300000
Counter: #removed clauses / #clauses {Cache - component caching}
18
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
8
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
10
700
30
150
70.000000
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
10
10
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
