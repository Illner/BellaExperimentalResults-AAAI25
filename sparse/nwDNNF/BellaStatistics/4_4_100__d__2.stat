Number: formula size {Formula representation}
1
24736
Number: #variables {Formula representation}
1
4144
Number: #clauses {Formula representation}
1
4168
Timer (reduced): initialize [ns] {Formula representation}
1
4447330
Timer: compute connected components [ns] {Formula representation}
27
1751903
800
483606
64885.296296
Number: circuit size {Circuit}
1
33609
Number: #nodes {Circuit}
1
23047
Number: #edges {Circuit}
1
33609
Number: #variables {Circuit}
1
4144
Timer: copy subcircuit [ns] {Circuit}
24
5852386
4420
1817553
243849.416667
Counter: formula size (copy subcircuit) {Circuit}
24
20376
24
5256
849.000000
Counter: #variables (copy subcircuit) {Circuit}
24
4440
8
1064
185.000000
Counter: #clauses (copy subcircuit) {Circuit}
24
4647
11
1085
193.625000
Timer (reduced): initialize [ns] {Compiler}
1
6739209
Timer (reduced): compile [ns] {Compiler}
1
426803666
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
4
Number: #splits {Compiler}
1
16
Number: #decisions {Compiler}
1
15
Counter: ratio of recomputed hypergraph cuts {Compiler}
39
6
0
1
0.153846
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
2
0
0
0
0.000000
Counter: #connected components {Compiler}
27
39
1
4
1.444444
Counter: #monotone residual formulae / #residual formulae {Compiler}
27
0
0
0
0.000000
Counter: monotone residual formula size {Compiler}
0
0
0
0
0.000000
Counter: #pure clauses / #clauses {Compiler}
27
0.000000
0.000000
0.000000
0.000000
Counter: pure residual formula size / residual formula size {Compiler}
27
0.000000
0.000000
0.000000
0.000000
Timer: assign literal [ns] {Compiler}
50
7548121
350
2463297
150962.420000
Timer: unassign literal [ns] {Compiler}
50
832213
230
162779
16644.260000
Timer: get decision variable [ns] {Decision heuristic}
15
7320
60
2450
488.000000
Counter: #preselected variables {Decision heuristic}
15
186
1
22
12.400000
Counter: #restricted variables / #preselected variables {Decision heuristic}
0
0.000000
0.000000
0.000000
0.000000
Timer (reduced): initialize [ns] {SAT solver}
1
1579645
Timer (reduced): initial simplification [ns] {SAT solver}
1
700
Timer (reduced): initially implied literals [ns] {SAT solver}
1
480
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
31
2904727
480
891402
93700.870968
Timer: unit propagation [ns] {SAT solver}
31
20759
90
10749
669.645161
Counter: #implied literals {SAT solver}
31
55
0
4
1.774194
Counter: #implied literals / #variables {SAT solver}
31
3.111030
0.000000
1.000000
0.100356
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
6
2382788
4540
2350979
397131.333333
Counter: #implicit implied literals / #variables {SAT solver}
6
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
6
0.000000
0.000000
0.000000
0.000000
Timer: compute cut [ns] {Partitioning hypergraph}
2
355294398
428336
354866062
177647199.000000
Counter: cut size {Partitioning hypergraph}
2
25
3
22
12.500000
Counter: cut size / #variables {Partitioning hypergraph}
2
0.505309
0.005309
0.500000
0.252654
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
2
26425973
7250
26418723
13212986.500000
Counter: #vertices {Partitioning hypergraph}
2
4124
4
4120
2062.000000
Counter: #vertices / #clauses {Partitioning hypergraph}
2
1.559912
0.571429
0.988484
0.779956
Counter: #hyperedges {Partitioning hypergraph}
2
35
3
32
17.500000
Counter: #hyperedges / #variables {Partitioning hypergraph}
2
0.507722
0.007722
0.500000
0.253861
Counter: hypergraph size {Partitioning hypergraph}
2
20534
6
20528
10267.000000
Counter: hypergraph size / formula size {Partitioning hypergraph}
2
1.229884
0.400000
0.829884
0.614942
Timer: create equivalence structure [ns] {Partitioning hypergraph}
2
1405247
2930
1402317
702623.500000
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
39
24
0
1
0.615385
Number: #current entries {Cache - component caching}
1
15
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
39
21300027
4320
5512920
546154.538462
Timer: search cache record structure [ns] {Cache - component caching}
39
32760
50
5160
840.000000
Timer: add cache record structure [ns] {Cache - component caching}
15
31640
130
11490
2109.333333
Counter: #empty cache records / #cache records {Cache - component caching}
39
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
39
91363
8
24736
2342.641026
Counter: formula size (positive hit) {Cache - component caching}
24
20376
24
5256
849.000000
Counter: formula size (negative hit) {Cache - component caching}
15
70987
8
24736
4732.466667
Counter: #variables (cache record structure) {Cache - component caching}
39
17106
4
4144
438.615385
Counter: #variables (positive hit) {Cache - component caching}
24
4440
8
1064
185.000000
Counter: #variables (negative hit) {Cache - component caching}
15
12666
4
4144
844.400000
Counter: #clauses (cache record structure) {Cache - component caching}
39
17531
4
4168
449.512821
Counter: #clauses (positive hit) {Cache - component caching}
24
4647
11
1085
193.625000
Counter: #clauses (negative hit) {Cache - component caching}
15
12884
4
4168
858.933333
Counter: #removed clauses / #clauses {Cache - component caching}
39
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
24
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
15
1890
30
500
126.000000
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
15
15
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
