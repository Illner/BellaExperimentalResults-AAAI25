Number: formula size {Formula representation}
1
5432
Number: #variables {Formula representation}
1
980
Number: #clauses {Formula representation}
1
924
Timer (reduced): initialize [ns] {Formula representation}
1
673246
Timer: compute connected components [ns] {Formula representation}
15
1632222
6220
382158
108814.800000
Number: circuit size {Circuit}
1
8898
Number: #nodes {Circuit}
1
3987
Number: #edges {Circuit}
1
8898
Number: #variables {Circuit}
1
980
Timer: copy subcircuit [ns] {Circuit}
6
962213
25330
445708
160368.833333
Counter: formula size (copy subcircuit) {Circuit}
6
7772
188
3296
1295.333333
Counter: #variables (copy subcircuit) {Circuit}
6
1988
94
672
331.333333
Counter: #clauses (copy subcircuit) {Circuit}
6
1688
64
616
281.333333
Timer (reduced): initialize [ns] {Compiler}
1
3516559
Timer (reduced): compile [ns] {Compiler}
1
13253302
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
0
Number: #decisions {Compiler}
1
7
Counter: ratio of recomputed hypergraph cuts {Compiler}
13
3
0
1
0.230769
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
2
0
0
0
0.000000
Counter: #connected components {Compiler}
15
13
0
1
0.866667
Counter: #monotone residual formulae / #residual formulae {Compiler}
15
2
0
1
0.133333
Counter: monotone residual formula size {Compiler}
2
120
60
60
60.000000
Counter: #pure clauses / #clauses {Compiler}
15
2.552837
0.000000
1.000000
0.170189
Counter: pure residual formula size / residual formula size {Compiler}
15
2.391026
0.000000
1.000000
0.159402
Timer: assign literal [ns] {Compiler}
28
363058
670
89049
12966.357143
Timer: unassign literal [ns] {Compiler}
28
88529
230
13129
3161.750000
Timer: get decision variable [ns] {Decision heuristic}
7
1380
60
720
197.142857
Counter: #preselected variables {Decision heuristic}
7
22
1
6
3.142857
Counter: #restricted variables / #preselected variables {Decision heuristic}
0
0.000000
0.000000
0.000000
0.000000
Timer (reduced): initialize [ns] {SAT solver}
1
352118
Timer (reduced): initial simplification [ns] {SAT solver}
1
509
Timer (reduced): initially implied literals [ns] {SAT solver}
1
279
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
15
332388
3650
62530
22159.200000
Timer: unit propagation [ns] {SAT solver}
15
5320
150
760
354.666667
Counter: #implied literals {SAT solver}
15
28
0
2
1.866667
Counter: #implied literals / #variables {SAT solver}
15
0.136272
0.000000
0.032258
0.009085
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
3
639935
35790
565226
213311.666667
Counter: #implicit implied literals / #variables {SAT solver}
3
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
3
0.028419
0.007143
0.010638
0.009473
Timer: compute cut [ns] {Partitioning hypergraph}
1
1519671
1519671
1519671
1519671.000000
Counter: cut size {Partitioning hypergraph}
1
6
6
6
6.000000
Counter: cut size / #variables {Partitioning hypergraph}
1
0.006122
0.006122
0.006122
0.006122
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
2
2083498
14430
2069068
1041749.000000
Counter: #vertices {Partitioning hypergraph}
2
20
0
20
10.000000
Counter: #vertices / #clauses {Partitioning hypergraph}
2
0.021645
0.000000
0.021645
0.010823
Counter: #hyperedges {Partitioning hypergraph}
2
7
0
7
3.500000
Counter: #hyperedges / #variables {Partitioning hypergraph}
2
0.007143
0.000000
0.007143
0.003571
Counter: hypergraph size {Partitioning hypergraph}
2
80
0
80
40.000000
Counter: hypergraph size / formula size {Partitioning hypergraph}
2
0.014728
0.000000
0.014728
0.007364
Timer: create equivalence structure [ns] {Partitioning hypergraph}
2
102600
7400
95200
51300.000000
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
13
6
0
1
0.461538
Number: #current entries {Cache - component caching}
1
7
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
13
4759901
62889
1165593
366146.230769
Timer: search cache record structure [ns] {Cache - component caching}
13
10390
140
3000
799.230769
Timer: add cache record structure [ns] {Cache - component caching}
7
5790
240
1940
827.142857
Counter: #empty cache records / #cache records {Cache - component caching}
13
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
13
20976
188
5432
1613.538462
Counter: formula size (positive hit) {Cache - component caching}
6
7772
188
3296
1295.333333
Counter: formula size (negative hit) {Cache - component caching}
7
13204
188
5432
1886.285714
Counter: #variables (cache record structure) {Cache - component caching}
13
4956
94
980
381.230769
Counter: #variables (positive hit) {Cache - component caching}
6
1988
94
672
331.333333
Counter: #variables (negative hit) {Cache - component caching}
7
2968
94
980
424.000000
Counter: #clauses (cache record structure) {Cache - component caching}
13
4300
64
924
330.769231
Counter: #clauses (positive hit) {Cache - component caching}
6
1688
64
616
281.333333
Counter: #clauses (negative hit) {Cache - component caching}
7
2612
64
924
373.142857
Counter: #removed clauses / #clauses {Cache - component caching}
13
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
6
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
7
630
30
320
90.000000
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
7
7
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
