Number: formula size {Formula representation}
1
17294844
Number: #variables {Formula representation}
1
2470874
Number: #clauses {Formula representation}
1
2470832
Timer (reduced): initialize [ns] {Formula representation}
1
1621462266
Timer: compute connected components [ns] {Formula representation}
95
6764273030
16670
894091589
71202874.000000
Number: circuit size {Circuit}
1
99315351
Number: #nodes {Circuit}
1
12930672
Number: #edges {Circuit}
1
99315351
Number: #variables {Circuit}
1
2470874
Timer: copy subcircuit [ns] {Circuit}
41
12061124782
262907
1777142205
294173775.170732
Counter: formula size (copy subcircuit) {Circuit}
41
32375798
554
4286163
789653.609756
Counter: #variables (copy subcircuit) {Circuit}
41
5144447
277
655704
125474.317073
Counter: #clauses (copy subcircuit) {Circuit}
41
5140980
186
655647
125389.756098
Timer (reduced): initialize [ns] {Compiler}
1
1781635629
Timer (reduced): compile [ns] {Compiler}
1
1409582779208
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
0
Number: #decisions {Compiler}
1
47
Counter: ratio of recomputed hypergraph cuts {Compiler}
88
68
0
1
0.772727
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
33
29
0
1
0.878788
Counter: #connected components {Compiler}
95
88
0
1
0.926316
Counter: #monotone residual formulae / #residual formulae {Compiler}
95
7
0
1
0.073684
Counter: monotone residual formula size {Compiler}
7
1274
182
182
182.000000
Counter: #pure clauses / #clauses {Compiler}
95
8.618100
0.000000
1.000000
0.090717
Counter: pure residual formula size / residual formula size {Compiler}
95
8.142723
0.000000
1.000000
0.085713
Timer: assign literal [ns] {Compiler}
148
1315899936050
1900
479861256903
8891215784.121622
Timer: unassign literal [ns] {Compiler}
148
924377881
520
140167496
6245796.493243
Timer: get decision variable [ns] {Decision heuristic}
47
373809884
80
87291023
7953401.787234
Counter: #preselected variables {Decision heuristic}
47
13772086
1
2470874
293023.106383
Counter: #restricted variables / #preselected variables {Decision heuristic}
29
0.020149
0.000020
0.002763
0.000695
Timer (reduced): initialize [ns] {SAT solver}
1
622285486
Timer (reduced): initial simplification [ns] {SAT solver}
1
1660
Timer (reduced): initially implied literals [ns] {SAT solver}
1
1370
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
95
4580096560
39820
525867319
48211542.736842
Timer: unit propagation [ns] {SAT solver}
95
362348
220
48409
3814.189474
Counter: #implied literals {SAT solver}
95
228
0
7
2.400000
Counter: #implied literals / #variables {SAT solver}
95
0.114319
0.000000
0.010870
0.001203
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
15
24785355
332247
5864947
1652357.000000
Counter: #implicit implied literals / #variables {SAT solver}
15
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
15
0.033056
0.000000
0.003960
0.002204
Timer: compute cut [ns] {Partitioning hypergraph}
2
7352340
3528501
3823839
3676170.000000
Counter: cut size {Partitioning hypergraph}
2
20
10
10
10.000000
Counter: cut size / #variables {Partitioning hypergraph}
2
0.005318
0.002143
0.003175
0.002659
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
4
5253513
37439
3524002
1313378.250000
Counter: #vertices {Partitioning hypergraph}
4
102
0
51
25.500000
Counter: #vertices / #clauses {Partitioning hypergraph}
4
0.027949
0.000000
0.016738
0.006987
Counter: #hyperedges {Partitioning hypergraph}
4
29
0
15
7.250000
Counter: #hyperedges / #variables {Partitioning hypergraph}
4
0.007659
0.000000
0.004444
0.001915
Counter: hypergraph size {Partitioning hypergraph}
4
273
0
161
68.250000
Counter: hypergraph size / formula size {Partitioning hypergraph}
4
0.017808
0.000000
0.009744
0.004452
Timer: create equivalence structure [ns] {Partitioning hypergraph}
4
786963
17120
463955
196740.750000
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
88
41
0
1
0.465909
Number: #current entries {Cache - component caching}
1
47
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
88
64176906129
180728
11023707851
729283024.193182
Timer: search cache record structure [ns] {Cache - component caching}
88
73493371
190
8638888
835151.943182
Timer: add cache record structure [ns] {Cache - component caching}
47
83633535
380
16995018
1779436.914894
Counter: #empty cache records / #cache records {Cache - component caching}
88
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
88
126325320
554
17294844
1435515.000000
Counter: formula size (positive hit) {Cache - component caching}
41
32375798
554
4286163
789653.609756
Counter: formula size (negative hit) {Cache - component caching}
47
93949522
554
17294844
1998926.000000
Counter: #variables (cache record structure) {Cache - component caching}
88
18941213
277
2470874
215241.056818
Counter: #variables (positive hit) {Cache - component caching}
41
5144447
277
655704
125474.317073
Counter: #variables (negative hit) {Cache - component caching}
47
13796766
277
2470874
293548.212766
Counter: #clauses (cache record structure) {Cache - component caching}
88
18933482
186
2470832
215153.204545
Counter: #clauses (positive hit) {Cache - component caching}
41
5140980
186
655647
125389.756098
Counter: #clauses (negative hit) {Cache - component caching}
47
13792502
186
2470832
293457.489362
Counter: #removed clauses / #clauses {Cache - component caching}
88
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
41
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
47
38430
40
3800
817.659574
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
47
47
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
