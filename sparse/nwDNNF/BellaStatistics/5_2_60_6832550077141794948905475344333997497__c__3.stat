Number: formula size {Formula representation}
1
440
Number: #variables {Formula representation}
1
110
Number: #clauses {Formula representation}
1
100
Timer (reduced): initialize [ns] {Formula representation}
1
140960
Timer: compute connected components [ns] {Formula representation}
11
205420
690
63980
18674.545455
Number: circuit size {Circuit}
1
778
Number: #nodes {Circuit}
1
575
Number: #edges {Circuit}
1
778
Number: #variables {Circuit}
1
110
Timer: copy subcircuit [ns] {Circuit}
4
128580
7370
68120
32145.000000
Counter: formula size (copy subcircuit) {Circuit}
4
456
20
240
114.000000
Counter: #variables (copy subcircuit) {Circuit}
4
164
10
74
41.000000
Counter: #clauses (copy subcircuit) {Circuit}
4
136
8
64
34.000000
Timer (reduced): initialize [ns] {Compiler}
1
3174281
Timer (reduced): compile [ns] {Compiler}
1
2030135
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
0
Number: #decisions {Compiler}
1
5
Counter: ratio of recomputed hypergraph cuts {Compiler}
9
5
0
1
0.555556
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
3
0
0
0
0.000000
Counter: #connected components {Compiler}
11
9
0
1
0.818182
Counter: #monotone residual formulae / #residual formulae {Compiler}
11
2
0
1
0.181818
Counter: monotone residual formula size {Compiler}
2
8
4
4
4.000000
Counter: #pure clauses / #clauses {Compiler}
11
2.952381
0.000000
1.000000
0.268398
Counter: pure residual formula size / residual formula size {Compiler}
11
2.771429
0.000000
1.000000
0.251948
Timer: assign literal [ns] {Compiler}
20
36220
370
8000
1811.000000
Timer: unassign literal [ns] {Compiler}
20
15830
240
2020
791.500000
Timer: get decision variable [ns] {Decision heuristic}
5
970
50
630
194.000000
Counter: #preselected variables {Decision heuristic}
5
9
1
3
1.800000
Counter: #restricted variables / #preselected variables {Decision heuristic}
0
0.000000
0.000000
0.000000
0.000000
Timer (reduced): initialize [ns] {SAT solver}
1
71060
Timer (reduced): initial simplification [ns] {SAT solver}
1
280
Timer (reduced): initially implied literals [ns] {SAT solver}
1
150
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
11
54770
820
12070
4979.090909
Timer: unit propagation [ns] {SAT solver}
11
3110
170
770
282.727273
Counter: #implied literals {SAT solver}
11
20
0
2
1.818182
Counter: #implied literals / #variables {SAT solver}
11
0.925861
0.000000
0.333333
0.084169
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
5
125440
5390
73210
25088.000000
Counter: #implicit implied literals / #variables {SAT solver}
5
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
5
0.378788
0.045455
0.100000
0.075758
Timer: compute cut [ns] {Partitioning hypergraph}
1
643398
643398
643398
643398.000000
Counter: cut size {Partitioning hypergraph}
1
3
3
3
3.000000
Counter: cut size / #variables {Partitioning hypergraph}
1
0.027273
0.027273
0.027273
0.027273
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
3
141010
3140
126900
47003.333333
Counter: #vertices {Partitioning hypergraph}
3
4
0
4
1.333333
Counter: #vertices / #clauses {Partitioning hypergraph}
3
0.040000
0.000000
0.040000
0.013333
Counter: #hyperedges {Partitioning hypergraph}
3
4
0
4
1.333333
Counter: #hyperedges / #variables {Partitioning hypergraph}
3
0.036364
0.000000
0.036364
0.012121
Counter: hypergraph size {Partitioning hypergraph}
3
11
0
11
3.666667
Counter: hypergraph size / formula size {Partitioning hypergraph}
3
0.025000
0.000000
0.025000
0.008333
Timer: create equivalence structure [ns] {Partitioning hypergraph}
3
19810
1550
14360
6603.333333
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
9
4
0
1
0.444444
Number: #current entries {Cache - component caching}
1
5
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
9
504597
6450
170209
56066.333333
Timer: search cache record structure [ns] {Cache - component caching}
9
1830
60
360
203.333333
Timer: add cache record structure [ns] {Cache - component caching}
5
2080
150
1360
416.000000
Counter: #empty cache records / #cache records {Cache - component caching}
9
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
9
1352
20
440
150.222222
Counter: formula size (positive hit) {Cache - component caching}
4
456
20
240
114.000000
Counter: formula size (negative hit) {Cache - component caching}
5
896
20
440
179.200000
Counter: #variables (cache record structure) {Cache - component caching}
9
438
10
110
48.666667
Counter: #variables (positive hit) {Cache - component caching}
4
164
10
74
41.000000
Counter: #variables (negative hit) {Cache - component caching}
5
274
10
110
54.800000
Counter: #clauses (cache record structure) {Cache - component caching}
9
372
8
100
41.333333
Counter: #clauses (positive hit) {Cache - component caching}
4
136
8
64
34.000000
Counter: #clauses (negative hit) {Cache - component caching}
5
236
8
100
47.200000
Counter: #removed clauses / #clauses {Cache - component caching}
9
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
4
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
5
330
40
130
66.000000
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
5
5
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
