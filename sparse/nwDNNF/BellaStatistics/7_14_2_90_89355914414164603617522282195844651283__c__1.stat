Number: formula size {Formula representation}
1
14392
Number: #variables {Formula representation}
1
1848
Number: #clauses {Formula representation}
1
1820
Timer (reduced): initialize [ns] {Formula representation}
1
1860270
Timer: compute connected components [ns] {Formula representation}
15
1933889
3560
626523
128925.933333
Number: circuit size {Circuit}
1
8242
Number: #nodes {Circuit}
1
6571
Number: #edges {Circuit}
1
8242
Number: #variables {Circuit}
1
1848
Timer: copy subcircuit [ns] {Circuit}
6
1464655
17330
836261
244109.166667
Counter: formula size (copy subcircuit) {Circuit}
6
11684
104
6320
1947.333333
Counter: #variables (copy subcircuit) {Circuit}
6
2116
52
948
352.666667
Counter: #clauses (copy subcircuit) {Circuit}
6
1960
36
920
326.666667
Timer (reduced): initialize [ns] {Compiler}
1
8382818
Timer (reduced): compile [ns] {Compiler}
1
17680238
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
0
Number: #decisions {Compiler}
1
7
Counter: ratio of recomputed hypergraph cuts {Compiler}
13
1
0
1
0.076923
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
1
0
0
0
0.000000
Counter: #connected components {Compiler}
15
13
0
1
0.866667
Counter: #monotone residual formulae / #residual formulae {Compiler}
15
2
0
1
0.133333
Counter: monotone residual formula size {Compiler}
2
64
32
32
32.000000
Counter: #pure clauses / #clauses {Compiler}
15
2.500000
0.000000
1.000000
0.166667
Counter: pure residual formula size / residual formula size {Compiler}
15
2.375000
0.000000
1.000000
0.158333
Timer: assign literal [ns] {Compiler}
28
1971155
630
822061
70398.392857
Timer: unassign literal [ns] {Compiler}
28
171259
250
39820
6116.392857
Timer: get decision variable [ns] {Decision heuristic}
7
1400
50
770
200.000000
Counter: #preselected variables {Decision heuristic}
7
28
1
7
4.000000
Counter: #restricted variables / #preselected variables {Decision heuristic}
0
0.000000
0.000000
0.000000
0.000000
Timer (reduced): initialize [ns] {SAT solver}
1
620393
Timer (reduced): initial simplification [ns] {SAT solver}
1
4420
Timer (reduced): initially implied literals [ns] {SAT solver}
1
510
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
15
432957
2820
101749
28863.800000
Timer: unit propagation [ns] {SAT solver}
15
4880
120
940
325.333333
Counter: #implied literals {SAT solver}
15
28
0
2
1.866667
Counter: #implied literals / #variables {SAT solver}
15
0.208087
0.000000
0.058824
0.013872
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
1
869431
869431
869431
869431.000000
Counter: #implicit implied literals / #variables {SAT solver}
1
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
1
0.003788
0.003788
0.003788
0.003788
Timer: compute cut [ns] {Partitioning hypergraph}
1
765672
765672
765672
765672.000000
Counter: cut size {Partitioning hypergraph}
1
7
7
7
7.000000
Counter: cut size / #variables {Partitioning hypergraph}
1
0.003788
0.003788
0.003788
0.003788
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
1
2962038
2962038
2962038
2962038.000000
Counter: #vertices {Partitioning hypergraph}
1
6
6
6
6.000000
Counter: #vertices / #clauses {Partitioning hypergraph}
1
0.003297
0.003297
0.003297
0.003297
Counter: #hyperedges {Partitioning hypergraph}
1
7
7
7
7.000000
Counter: #hyperedges / #variables {Partitioning hypergraph}
1
0.003788
0.003788
0.003788
0.003788
Counter: hypergraph size {Partitioning hypergraph}
1
36
36
36
36.000000
Counter: hypergraph size / formula size {Partitioning hypergraph}
1
0.002501
0.002501
0.002501
0.002501
Timer: create equivalence structure [ns] {Partitioning hypergraph}
1
116459
116459
116459
116459.000000
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
13
6
0
1
0.461538
Number: #current entries {Cache - component caching}
1
7
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
13
6120623
31920
2157756
470817.153846
Timer: search cache record structure [ns] {Cache - component caching}
13
11850
60
5190
911.538462
Timer: add cache record structure [ns] {Cache - component caching}
7
11010
300
6260
1572.857143
Counter: #empty cache records / #cache records {Cache - component caching}
13
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
13
37760
104
14392
2904.615385
Counter: formula size (positive hit) {Cache - component caching}
6
11684
104
6320
1947.333333
Counter: formula size (negative hit) {Cache - component caching}
7
26076
104
14392
3725.142857
Counter: #variables (cache record structure) {Cache - component caching}
13
6080
52
1848
467.692308
Counter: #variables (positive hit) {Cache - component caching}
6
2116
52
948
352.666667
Counter: #variables (negative hit) {Cache - component caching}
7
3964
52
1848
566.285714
Counter: #clauses (cache record structure) {Cache - component caching}
13
5740
36
1820
441.538462
Counter: #clauses (positive hit) {Cache - component caching}
6
1960
36
920
326.666667
Counter: #clauses (negative hit) {Cache - component caching}
7
3780
36
1820
540.000000
Counter: #removed clauses / #clauses {Cache - component caching}
13
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
6
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
7
480
40
130
68.571429
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
7
7
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
