Number: formula size {Formula representation}
1
12000600
Number: #variables {Formula representation}
1
2000300
Number: #clauses {Formula representation}
1
2000280
Timer (reduced): initialize [ns] {Formula representation}
1
1216990526
Timer: compute connected components [ns] {Formula representation}
91
6664098324
26521
1064405639
73231849.714286
Number: circuit size {Circuit}
1
20054430
Number: #nodes {Circuit}
1
6632819
Number: #edges {Circuit}
1
20054430
Number: #variables {Circuit}
1
2000300
Timer: copy subcircuit [ns] {Circuit}
36
4071701635
713823
505187782
113102823.194444
Counter: formula size (copy subcircuit) {Circuit}
36
16281000
4320
1550480
452250.000000
Counter: #variables (copy subcircuit) {Circuit}
36
3136860
1560
290280
87135.000000
Counter: #clauses (copy subcircuit) {Circuit}
36
3133440
1456
290224
87040.000000
Timer (reduced): initialize [ns] {Compiler}
1
1412754084
Timer (reduced): compile [ns] {Compiler}
1
665143049369
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
0
Number: #decisions {Compiler}
1
45
Counter: ratio of recomputed hypergraph cuts {Compiler}
81
75
0
1
0.925926
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
43
33
0
1
0.767442
Counter: #connected components {Compiler}
91
81
0
1
0.890110
Counter: #monotone residual formulae / #residual formulae {Compiler}
91
10
0
1
0.109890
Counter: monotone residual formula size {Compiler}
10
2800
280
280
280.000000
Counter: #pure clauses / #clauses {Compiler}
91
10.395778
0.000000
1.000000
0.114239
Counter: pure residual formula size / residual formula size {Compiler}
91
10.270270
0.000000
1.000000
0.112860
Timer: assign literal [ns] {Compiler}
140
587227036406
1630
148520492708
4194478831.471429
Timer: unassign literal [ns] {Compiler}
140
790145408
440
94444771
5643895.771429
Timer: get decision variable [ns] {Decision heuristic}
45
475237396
60
90195075
10560831.022222
Counter: #preselected variables {Decision heuristic}
45
13120928
1
2000300
291576.177778
Counter: #restricted variables / #preselected variables {Decision heuristic}
33
0.025810
0.000025
0.002924
0.000782
Timer (reduced): initialize [ns] {SAT solver}
1
381583929
Timer (reduced): initial simplification [ns] {SAT solver}
1
1430
Timer (reduced): initially implied literals [ns] {SAT solver}
1
1120
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
91
4848198188
18211
510522928
53276903.164835
Timer: unit propagation [ns] {SAT solver}
91
487883
280
246011
5361.351648
Counter: #implied literals {SAT solver}
91
280
0
10
3.076923
Counter: #implied literals / #variables {SAT solver}
91
0.072192
0.000000
0.007092
0.000793
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
15
10140556
161220
2853530
676037.066667
Counter: #implicit implied literals / #variables {SAT solver}
15
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
15
0.002358
0.000000
0.002358
0.000157
Timer: compute cut [ns] {Partitioning hypergraph}
1
3639274
3639274
3639274
3639274.000000
Counter: cut size {Partitioning hypergraph}
1
8
8
8
8.000000
Counter: cut size / #variables {Partitioning hypergraph}
1
0.001874
0.001874
0.001874
0.001874
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
10
3365558
56440
2005197
336555.800000
Counter: #vertices {Partitioning hypergraph}
10
42
0
42
4.200000
Counter: #vertices / #clauses {Partitioning hypergraph}
10
0.010226
0.000000
0.010226
0.001023
Counter: #hyperedges {Partitioning hypergraph}
10
14
0
14
1.400000
Counter: #hyperedges / #variables {Partitioning hypergraph}
10
0.003280
0.000000
0.003280
0.000328
Counter: hypergraph size {Partitioning hypergraph}
10
94
0
94
9.400000
Counter: hypergraph size / formula size {Partitioning hypergraph}
10
0.006079
0.000000
0.006079
0.000608
Timer: create equivalence structure [ns] {Partitioning hypergraph}
10
1146616
26731
502592
114661.600000
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
81
36
0
1
0.444444
Number: #current entries {Cache - component caching}
1
45
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
81
56623178454
287291
8919778068
699051585.851852
Timer: search cache record structure [ns] {Cache - component caching}
81
46398833
170
4056005
572825.098765
Timer: add cache record structure [ns] {Cache - component caching}
45
57468563
420
10783860
1277079.177778
Counter: #empty cache records / #cache records {Cache - component caching}
81
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
81
93454860
848
12000600
1153763.703704
Counter: formula size (positive hit) {Cache - component caching}
36
16281000
4320
1550480
452250.000000
Counter: formula size (negative hit) {Cache - component caching}
45
77173860
848
12000600
1714974.666667
Counter: #variables (cache record structure) {Cache - component caching}
81
16276860
424
2000300
200948.888889
Counter: #variables (positive hit) {Cache - component caching}
36
3136860
1560
290280
87135.000000
Counter: #variables (negative hit) {Cache - component caching}
45
13140000
424
2000300
292000.000000
Counter: #clauses (cache record structure) {Cache - component caching}
81
16268820
284
2000280
200849.629630
Counter: #clauses (positive hit) {Cache - component caching}
36
3133440
1456
290224
87040.000000
Counter: #clauses (negative hit) {Cache - component caching}
45
13135380
284
2000280
291897.333333
Counter: #removed clauses / #clauses {Cache - component caching}
81
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
36
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
45
38430
30
4210
854.000000
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
45
45
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
