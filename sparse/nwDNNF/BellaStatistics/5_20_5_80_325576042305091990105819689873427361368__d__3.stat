Number: formula size {Formula representation}
1
375675
Number: #variables {Formula representation}
1
62650
Number: #clauses {Formula representation}
1
62800
Timer (reduced): initialize [ns] {Formula representation}
1
39753504
Timer: compute connected components [ns] {Formula representation}
44
37076437
570
6001180
842646.295455
Number: circuit size {Circuit}
1
2188425
Number: #nodes {Circuit}
1
1034984
Number: #edges {Circuit}
1
2188425
Number: #variables {Circuit}
1
62650
Timer: copy subcircuit [ns] {Circuit}
115
464943453
5859
110110240
4042986.547826
Counter: formula size (copy subcircuit) {Circuit}
115
506065
35
94390
4400.565217
Counter: #variables (copy subcircuit) {Circuit}
115
100110
10
17640
870.521739
Counter: #clauses (copy subcircuit) {Circuit}
115
102768
16
17784
893.634783
Timer (reduced): initialize [ns] {Compiler}
1
37210624
Timer (reduced): compile [ns] {Compiler}
1
2070818471
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
5
Number: #splits {Compiler}
1
105
Number: #decisions {Compiler}
1
24
Counter: ratio of recomputed hypergraph cuts {Compiler}
139
119
0
1
0.856115
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
12
9
0
1
0.750000
Counter: #connected components {Compiler}
44
139
1
16
3.159091
Counter: #monotone residual formulae / #residual formulae {Compiler}
44
0
0
0
0.000000
Counter: monotone residual formula size {Compiler}
0
0
0
0
0.000000
Counter: #pure clauses / #clauses {Compiler}
44
0.000000
0.000000
0.000000
0.000000
Counter: pure residual formula size / residual formula size {Compiler}
44
0.000000
0.000000
0.000000
0.000000
Timer: assign literal [ns] {Compiler}
78
399649697
280
146516494
5123714.064103
Timer: unassign literal [ns] {Compiler}
78
20740147
210
3157583
265899.320513
Timer: get decision variable [ns] {Decision heuristic}
24
7154107
60
1703800
298087.791667
Counter: #preselected variables {Decision heuristic}
24
240117
2
62650
10004.875000
Counter: #restricted variables / #preselected variables {Decision heuristic}
0
0.000000
0.000000
0.000000
0.000000
Timer (reduced): initialize [ns] {SAT solver}
1
14518720
Timer (reduced): initial simplification [ns] {SAT solver}
1
840
Timer (reduced): initially implied literals [ns] {SAT solver}
1
500
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
49
57484288
410
9623957
1173148.734694
Timer: unit propagation [ns] {SAT solver}
49
49200
100
14250
1004.081633
Counter: #implied literals {SAT solver}
49
96
0
5
1.959184
Counter: #implied literals / #variables {SAT solver}
49
3.466036
0.000000
1.000000
0.070735
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
102
4314879
3970
2656349
42302.735294
Counter: #implicit implied literals / #variables {SAT solver}
102
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
102
0.000000
0.000000
0.000000
0.000000
Timer: compute cut [ns] {Partitioning hypergraph}
3
482923915
412935
413354070
160974638.333333
Counter: cut size {Partitioning hypergraph}
3
29
5
14
9.666667
Counter: cut size / #variables {Partitioning hypergraph}
3
0.509890
0.003311
0.500000
0.169963
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
3
16409198
14620
14753317
5469732.666667
Counter: #vertices {Partitioning hypergraph}
3
5575
6
4137
1858.333333
Counter: #vertices / #clauses {Partitioning hypergraph}
3
2.190029
0.375000
0.948201
0.730010
Counter: #hyperedges {Partitioning hypergraph}
3
229
5
114
76.333333
Counter: #hyperedges / #variables {Partitioning hypergraph}
3
0.599332
0.026963
0.500000
0.199777
Counter: hypergraph size {Partitioning hypergraph}
3
18983
10
14928
6327.666667
Counter: hypergraph size / formula size {Partitioning hypergraph}
3
1.737663
0.285714
0.765774
0.579221
Timer: create equivalence structure [ns] {Partitioning hypergraph}
3
1010318
2880
802300
336772.666667
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
139
115
0
1
0.827338
Number: #current entries {Cache - component caching}
1
24
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
139
565911979
2669
110404397
4071309.201439
Timer: search cache record structure [ns] {Cache - component caching}
139
531094
30
90639
3820.820144
Timer: add cache record structure [ns] {Cache - component caching}
24
786642
180
430825
32776.750000
Counter: #empty cache records / #cache records {Cache - component caching}
139
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
139
1972357
8
375675
14189.618705
Counter: formula size (positive hit) {Cache - component caching}
115
506065
35
94390
4400.565217
Counter: formula size (negative hit) {Cache - component caching}
24
1466292
8
375675
61095.500000
Counter: #variables (cache record structure) {Cache - component caching}
139
356198
4
62650
2562.575540
Counter: #variables (positive hit) {Cache - component caching}
115
100110
10
17640
870.521739
Counter: #variables (negative hit) {Cache - component caching}
24
256088
4
62650
10670.333333
Counter: #clauses (cache record structure) {Cache - component caching}
139
361460
4
62800
2600.431655
Counter: #clauses (positive hit) {Cache - component caching}
115
102768
16
17784
893.634783
Counter: #clauses (negative hit) {Cache - component caching}
24
258692
4
62800
10778.833333
Counter: #removed clauses / #clauses {Cache - component caching}
139
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
115
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
24
8130
30
2710
338.750000
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
24
24
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
