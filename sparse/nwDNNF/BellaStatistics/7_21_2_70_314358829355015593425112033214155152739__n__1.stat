Number: formula size {Formula representation}
1
4088
Number: #variables {Formula representation}
1
742
Number: #clauses {Formula representation}
1
700
Timer (reduced): initialize [ns] {Formula representation}
1
835930
Timer: compute connected components [ns] {Formula representation}
255
5198403
2610
304646
20385.894118
Number: circuit size {Circuit}
1
6298
Number: #nodes {Circuit}
1
3039
Number: #edges {Circuit}
1
6298
Number: #variables {Circuit}
1
742
Timer: copy subcircuit [ns] {Circuit}
0
0
0
0
0.000000
Counter: formula size (copy subcircuit) {Circuit}
0
0
0
0
0.000000
Counter: #variables (copy subcircuit) {Circuit}
0
0
0
0
0.000000
Counter: #clauses (copy subcircuit) {Circuit}
0
0
0
0
0.000000
Timer (reduced): initialize [ns] {Compiler}
1
6078888
Timer (reduced): compile [ns] {Compiler}
1
19746807
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
0
Number: #decisions {Compiler}
1
127
Counter: ratio of recomputed hypergraph cuts {Compiler}
127
68
0
1
0.535433
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
68
0
0
0
0.000000
Counter: #connected components {Compiler}
255
127
0
1
0.498039
Counter: #monotone residual formulae / #residual formulae {Compiler}
255
128
0
1
0.501961
Counter: monotone residual formula size {Compiler}
128
4864
32
44
38.000000
Counter: #pure clauses / #clauses {Compiler}
255
145.981493
0.000000
1.000000
0.572476
Counter: pure residual formula size / residual formula size {Compiler}
255
141.321093
0.000000
1.000000
0.554200
Timer: assign literal [ns] {Compiler}
508
1097985
360
91349
2161.387795
Timer: unassign literal [ns] {Compiler}
508
491626
110
12980
967.767717
Timer: get decision variable [ns] {Decision heuristic}
127
8930
40
920
70.314961
Counter: #preselected variables {Decision heuristic}
127
184
1
6
1.448819
Counter: #restricted variables / #preselected variables {Decision heuristic}
0
0.000000
0.000000
0.000000
0.000000
Timer (reduced): initialize [ns] {SAT solver}
1
288917
Timer (reduced): initial simplification [ns] {SAT solver}
1
580
Timer (reduced): initially implied literals [ns] {SAT solver}
1
370
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
255
1528882
1740
64629
5995.615686
Timer: unit propagation [ns] {SAT solver}
255
32899
80
1170
129.015686
Counter: #implied literals {SAT solver}
255
508
0
2
1.992157
Counter: #implied literals / #variables {SAT solver}
255
7.399299
0.000000
0.058824
0.029017
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
68
2501704
16649
424965
36789.764706
Counter: #implicit implied literals / #variables {SAT solver}
68
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
68
1.124350
0.009434
0.019231
0.016535
Timer: compute cut [ns] {Partitioning hypergraph}
4
385055
38959
247147
96263.750000
Counter: cut size {Partitioning hypergraph}
4
19
4
6
4.750000
Counter: cut size / #variables {Partitioning hypergraph}
4
0.042412
0.008086
0.011976
0.010603
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
68
2936205
6070
1388273
43179.485294
Counter: #vertices {Partitioning hypergraph}
68
28
0
15
0.411765
Counter: #vertices / #clauses {Partitioning hypergraph}
68
0.060189
0.000000
0.021429
0.000885
Counter: #hyperedges {Partitioning hypergraph}
68
23
0
7
0.338235
Counter: #hyperedges / #variables {Partitioning hypergraph}
68
0.051822
0.000000
0.014970
0.000762
Counter: hypergraph size {Partitioning hypergraph}
68
105
0
60
1.544118
Counter: hypergraph size / formula size {Partitioning hypergraph}
68
0.042212
0.000000
0.014677
0.000621
Timer: create equivalence structure [ns] {Partitioning hypergraph}
68
431325
3130
55849
6343.014706
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
127
0
0
0
0.000000
Number: #current entries {Cache - component caching}
1
127
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
127
2560769
6970
99909
20163.535433
Timer: search cache record structure [ns] {Cache - component caching}
127
26679
70
2300
210.070866
Timer: add cache record structure [ns] {Cache - component caching}
127
37300
70
5040
293.700787
Counter: #empty cache records / #cache records {Cache - component caching}
127
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
127
44472
104
4088
350.173228
Counter: formula size (positive hit) {Cache - component caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - component caching}
127
44472
104
4088
350.173228
Counter: #variables (cache record structure) {Cache - component caching}
127
15346
52
742
120.834646
Counter: #variables (positive hit) {Cache - component caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - component caching}
127
15346
52
742
120.834646
Counter: #clauses (cache record structure) {Cache - component caching}
127
11836
36
700
93.196850
Counter: #clauses (positive hit) {Cache - component caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - component caching}
127
11836
36
700
93.196850
Counter: #removed clauses / #clauses {Cache - component caching}
127
13.904750
0.081633
1.000000
0.109486
Counter: #identical mappings / #mappings {Cache - component caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
127
4770
20
500
37.559055
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
127
127
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
