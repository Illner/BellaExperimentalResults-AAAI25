Number: formula size {Formula representation}
1
56400
Number: #variables {Formula representation}
1
5170
Number: #clauses {Formula representation}
1
5160
Timer (reduced): initialize [ns] {Formula representation}
1
8691151
Timer: compute connected components [ns] {Formula representation}
21
5502810
1160
1906312
262038.571429
Number: circuit size {Circuit}
1
33266
Number: #nodes {Circuit}
1
24159
Number: #edges {Circuit}
1
33266
Number: #variables {Circuit}
1
5170
Timer: copy subcircuit [ns] {Circuit}
9
4891365
8720
2307759
543485.000000
Counter: formula size (copy subcircuit) {Circuit}
9
46544
44
25672
5171.555556
Counter: #variables (copy subcircuit) {Circuit}
9
5394
22
2606
599.333333
Counter: #clauses (copy subcircuit) {Circuit}
9
5308
16
2596
589.777778
Timer (reduced): initialize [ns] {Compiler}
1
6461061
Timer (reduced): compile [ns] {Compiler}
1
63220704
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
0
Number: #decisions {Compiler}
1
10
Counter: ratio of recomputed hypergraph cuts {Compiler}
19
5
0
1
0.263158
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
3
1
0
1
0.333333
Counter: #connected components {Compiler}
21
19
0
1
0.904762
Counter: #monotone residual formulae / #residual formulae {Compiler}
21
2
0
1
0.095238
Counter: monotone residual formula size {Compiler}
2
24
12
12
12.000000
Counter: #pure clauses / #clauses {Compiler}
21
2.400000
0.000000
1.000000
0.114286
Counter: pure residual formula size / residual formula size {Compiler}
21
2.307692
0.000000
1.000000
0.109890
Timer: assign literal [ns] {Compiler}
40
21827585
470
9596533
545689.625000
Timer: unassign literal [ns] {Compiler}
40
606452
200
145578
15161.300000
Timer: get decision variable [ns] {Decision heuristic}
10
29760
60
28630
2976.000000
Counter: #preselected variables {Decision heuristic}
10
5207
1
5170
520.700000
Counter: #restricted variables / #preselected variables {Decision heuristic}
1
0.003868
0.003868
0.003868
0.003868
Timer (reduced): initialize [ns] {SAT solver}
1
1994091
Timer (reduced): initial simplification [ns] {SAT solver}
1
460
Timer (reduced): initially implied literals [ns] {SAT solver}
1
200
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
21
1153787
1360
304377
54942.238095
Timer: unit propagation [ns] {SAT solver}
21
6730
140
710
320.476190
Counter: #implied literals {SAT solver}
21
40
0
2
1.904762
Counter: #implied literals / #variables {SAT solver}
21
0.524160
0.000000
0.142857
0.024960
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
4
2640466
12180
1311738
660116.500000
Counter: #implicit implied literals / #variables {SAT solver}
4
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
4
0.097816
0.003454
0.045455
0.024454
Timer: compute cut [ns] {Partitioning hypergraph}
1
599554
599554
599554
599554.000000
Counter: cut size {Partitioning hypergraph}
1
8
8
8
8.000000
Counter: cut size / #variables {Partitioning hypergraph}
1
0.003070
0.003070
0.003070
0.003070
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
2
3482658
4920
3477738
1741329.000000
Counter: #vertices {Partitioning hypergraph}
2
4
0
4
2.000000
Counter: #vertices / #clauses {Partitioning hypergraph}
2
0.001541
0.000000
0.001541
0.000770
Counter: #hyperedges {Partitioning hypergraph}
2
9
0
9
4.500000
Counter: #hyperedges / #variables {Partitioning hypergraph}
2
0.003454
0.000000
0.003454
0.001727
Counter: hypergraph size {Partitioning hypergraph}
2
32
0
32
16.000000
Counter: hypergraph size / formula size {Partitioning hypergraph}
2
0.001246
0.000000
0.001246
0.000623
Timer: create equivalence structure [ns] {Partitioning hypergraph}
2
202139
2030
200109
101069.500000
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
19
9
0
1
0.473684
Number: #current entries {Cache - component caching}
1
10
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
19
20207914
12930
7218354
1063574.421053
Timer: search cache record structure [ns] {Cache - component caching}
19
30560
50
14860
1608.421053
Timer: add cache record structure [ns] {Cache - component caching}
10
18160
150
5620
1816.000000
Counter: #empty cache records / #cache records {Cache - component caching}
19
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
19
149488
44
56400
7867.789474
Counter: formula size (positive hit) {Cache - component caching}
9
46544
44
25672
5171.555556
Counter: formula size (negative hit) {Cache - component caching}
10
102944
44
56400
10294.400000
Counter: #variables (cache record structure) {Cache - component caching}
19
15958
22
5170
839.894737
Counter: #variables (positive hit) {Cache - component caching}
9
5394
22
2606
599.333333
Counter: #variables (negative hit) {Cache - component caching}
10
10564
22
5170
1056.400000
Counter: #clauses (cache record structure) {Cache - component caching}
19
15776
16
5160
830.315789
Counter: #clauses (positive hit) {Cache - component caching}
9
5308
16
2596
589.777778
Counter: #clauses (negative hit) {Cache - component caching}
10
10468
16
5160
1046.800000
Counter: #removed clauses / #clauses {Cache - component caching}
19
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
9
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
10
540
30
120
54.000000
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
10
10
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
