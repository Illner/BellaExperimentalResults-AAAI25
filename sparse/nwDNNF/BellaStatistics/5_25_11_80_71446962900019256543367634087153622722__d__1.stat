Number: formula size {Formula representation}
1
24161390
Number: #variables {Formula representation}
1
4026660
Number: #clauses {Formula representation}
1
4028010
Timer (reduced): initialize [ns] {Formula representation}
1
2354961116
Timer: compute connected components [ns] {Formula representation}
110
5132533417
550
554330193
46659394.700000
Number: circuit size {Circuit}
1
405158914
Number: #nodes {Circuit}
1
137951197
Number: #edges {Circuit}
1
405158914
Number: #variables {Circuit}
1
4026660
Timer: copy subcircuit [ns] {Circuit}
314
3685099523963
15950
3546533501259
11735985745.105096
Counter: formula size (copy subcircuit) {Circuit}
314
52099212
143
4513025
165921.057325
Counter: #variables (copy subcircuit) {Circuit}
314
9534008
22
805618
30363.082803
Counter: #clauses (copy subcircuit) {Circuit}
314
9593138
67
806923
30551.394904
Timer (reduced): initialize [ns] {Compiler}
1
2892933420
Timer (reduced): compile [ns] {Compiler}
1
6490591780425
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
11
Number: #splits {Compiler}
1
286
Number: #decisions {Compiler}
1
60
Counter: ratio of recomputed hypergraph cuts {Compiler}
374
354
0
1
0.946524
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
42
39
0
1
0.928571
Counter: #connected components {Compiler}
110
374
1
19
3.400000
Counter: #monotone residual formulae / #residual formulae {Compiler}
110
0
0
0
0.000000
Counter: monotone residual formula size {Compiler}
0
0
0
0
0.000000
Counter: #pure clauses / #clauses {Compiler}
110
0.000000
0.000000
0.000000
0.000000
Counter: pure residual formula size / residual formula size {Compiler}
110
0.000000
0.000000
0.000000
0.000000
Timer: assign literal [ns] {Compiler}
186
2524666885805
300
598974646018
13573477880.672043
Timer: unassign literal [ns] {Compiler}
186
4380194883
250
783134474
23549434.854839
Timer: get decision variable [ns] {Decision heuristic}
60
1751525746
50
231811419
29192095.766667
Counter: #preselected variables {Decision heuristic}
60
31657283
2
4026660
527621.383333
Counter: #restricted variables / #preselected variables {Decision heuristic}
0
0.000000
0.000000
0.000000
0.000000
Timer (reduced): initialize [ns] {SAT solver}
1
750404058
Timer (reduced): initial simplification [ns] {SAT solver}
1
1690
Timer (reduced): initially implied literals [ns] {SAT solver}
1
790
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
121
14897335211
770
1159871901
123118472.818182
Timer: unit propagation [ns] {SAT solver}
121
1144903
100
260071
9462.008264
Counter: #implied literals {SAT solver}
121
402
0
11
3.322314
Counter: #implied literals / #variables {SAT solver}
121
6.642674
0.000000
1.000000
0.054898
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
285
44047051
11810
6030955
154551.056140
Counter: #implicit implied literals / #variables {SAT solver}
285
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
285
0.000239
0.000000
0.000239
0.000001
Timer: compute cut [ns] {Partitioning hypergraph}
3
340106703
459711
243546065
113368901.000000
Counter: cut size {Partitioning hypergraph}
3
34
11
12
11.333333
Counter: cut size / #variables {Partitioning hypergraph}
3
0.507216
0.002868
0.500000
0.169072
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
3
12214638
69360
8955591
4071546.000000
Counter: #vertices {Partitioning hypergraph}
3
6264
12
3922
2088.000000
Counter: #vertices / #clauses {Partitioning hypergraph}
3
1.590941
0.179104
0.732536
0.530314
Counter: #hyperedges {Partitioning hypergraph}
3
518
11
287
172.666667
Counter: #hyperedges / #variables {Partitioning hypergraph}
3
0.655551
0.068595
0.500000
0.218517
Counter: hypergraph size {Partitioning hypergraph}
3
15820
22
10969
5273.333333
Counter: hypergraph size / formula size {Partitioning hypergraph}
3
1.289629
0.153846
0.618704
0.429876
Timer: create equivalence structure [ns] {Partitioning hypergraph}
3
1158702
4400
698791
386234.000000
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
374
314
0
1
0.839572
Number: #current entries {Cache - component caching}
1
60
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
374
249950262308
2350
37884270504
668316209.379679
Timer: search cache record structure [ns] {Cache - component caching}
374
167722314
40
12235059
448455.385027
Timer: add cache record structure [ns] {Cache - component caching}
60
2691992765
160
1131990044
44866546.083333
Counter: #empty cache records / #cache records {Cache - component caching}
374
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
374
238874552
8
24161390
638702.010695
Counter: formula size (positive hit) {Cache - component caching}
314
52099212
143
4513025
165921.057325
Counter: formula size (negative hit) {Cache - component caching}
60
186775340
8
24161390
3112922.333333
Counter: #variables (cache record structure) {Cache - component caching}
374
41211268
4
4026660
110190.556150
Counter: #variables (positive hit) {Cache - component caching}
314
9534008
22
805618
30363.082803
Counter: #variables (negative hit) {Cache - component caching}
60
31677260
4
4026660
527954.333333
Counter: #clauses (cache record structure) {Cache - component caching}
374
41329438
4
4028010
110506.518717
Counter: #clauses (positive hit) {Cache - component caching}
314
9593138
67
806923
30551.394904
Counter: #clauses (negative hit) {Cache - component caching}
60
31736300
4
4028010
528938.333333
Counter: #removed clauses / #clauses {Cache - component caching}
374
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
314
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
60
29361
30
4430
489.350000
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
60
60
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
