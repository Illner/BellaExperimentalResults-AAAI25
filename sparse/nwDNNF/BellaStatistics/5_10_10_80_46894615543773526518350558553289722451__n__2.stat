Number: formula size {Formula representation}
1
6000600
Number: #variables {Formula representation}
1
1000200
Number: #clauses {Formula representation}
1
1000280
Timer (reduced): initialize [ns] {Formula representation}
1
629291807
Timer: compute connected components [ns] {Formula representation}
199999
23291040936
8440
553158015
116455.786959
Number: circuit size {Circuit}
1
9010327
Number: #nodes {Circuit}
1
3531916
Number: #edges {Circuit}
1
9010327
Number: #variables {Circuit}
1
1000200
Timer: copy subcircuit [ns] {Circuit}
0
0
0
0
0.000000
Counter: formula size (copy subcircuit) {Circuit}
0
0
0
0
0.000000
Counter: #variables (copy subcircuit) {Circuit}
0
0
0
0
0.000000
Counter: #clauses (copy subcircuit) {Circuit}
0
0
0
0
0.000000
Timer (reduced): initialize [ns] {Compiler}
1
1031567497
Timer (reduced): compile [ns] {Compiler}
1
249395580754
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
0
Number: #decisions {Compiler}
1
99999
Counter: ratio of recomputed hypergraph cuts {Compiler}
99999
84534
0
1
0.845348
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
84534
799
0
1
0.009452
Counter: #connected components {Compiler}
199999
99999
0
1
0.499997
Counter: #monotone residual formulae / #residual formulae {Compiler}
199999
100000
0
1
0.500003
Counter: monotone residual formula size {Compiler}
100000
11169840
100
140
111.698400
Counter: #pure clauses / #clauses {Compiler}
199999
101320.330573
0.000000
1.000000
0.506604
Counter: pure residual formula size / residual formula size {Compiler}
199999
100928.249532
0.000000
1.000000
0.504644
Timer: assign literal [ns] {Compiler}
315332
163839692750
710
44232213892
519578.389602
Timer: unassign literal [ns] {Compiler}
315332
2810906459
180
57835902
8914.117372
Timer: get decision variable [ns] {Decision heuristic}
99999
351748246
40
48578698
3517.517635
Counter: #preselected variables {Decision heuristic}
99999
16794085
1
1000200
167.942529
Counter: #restricted variables / #preselected variables {Decision heuristic}
799
2.577321
0.000050
0.004488
0.003226
Timer (reduced): initialize [ns] {SAT solver}
1
276129240
Timer (reduced): initial simplification [ns] {SAT solver}
1
1860
Timer (reduced): initially implied literals [ns] {SAT solver}
1
1240
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
199999
9347834722
5100
269050784
46739.407307
Timer: unit propagation [ns] {SAT solver}
199999
65158409
150
181779
325.793674
Counter: #implied literals {SAT solver}
199999
576368
0
10
2.881854
Counter: #implied literals / #variables {SAT solver}
199999
1564.672450
0.000000
0.019608
0.007823
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
83735
13957673081
54340
2434632
166688.637738
Counter: #implicit implied literals / #variables {SAT solver}
83735
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
83735
79.532297
0.000000
0.006494
0.000950
Timer: compute cut [ns] {Partitioning hypergraph}
957
126075747
33889
293028
131740.592476
Counter: cut size {Partitioning hypergraph}
957
14384
2
19
15.030303
Counter: cut size / #variables {Partitioning hypergraph}
957
4.992826
0.003300
0.008380
0.005217
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
83735
6268875961
18150
3973942
74865.659055
Counter: #vertices {Partitioning hypergraph}
83735
98270
0
163
1.173583
Counter: #vertices / #clauses {Partitioning hypergraph}
83735
32.467052
0.000000
0.036070
0.000388
Counter: #hyperedges {Partitioning hypergraph}
83735
18596
0
23
0.222082
Counter: #hyperedges / #variables {Partitioning hypergraph}
83735
6.516736
0.000000
0.011278
0.000078
Counter: hypergraph size {Partitioning hypergraph}
83735
211155
0
343
2.521705
Counter: hypergraph size / formula size {Partitioning hypergraph}
83735
19.036032
0.000000
0.020677
0.000227
Timer: create equivalence structure [ns] {Partitioning hypergraph}
83735
2054706969
8409
555296
24538.209458
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
99999
0
0
0
0.000000
Number: #current entries {Cache - component caching}
1
99999
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
99999
15464065787
22490
76530050
154642.204292
Timer: search cache record structure [ns] {Cache - component caching}
99999
108054641
170
315338
1080.557216
Timer: add cache record structure [ns] {Cache - component caching}
99999
140770317
210
3560095
1407.717247
Counter: #empty cache records / #cache records {Cache - component caching}
99999
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
99999
233040672
308
6000600
2330.430024
Counter: formula size (positive hit) {Cache - component caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - component caching}
99999
233040672
308
6000600
2330.430024
Counter: #variables (cache record structure) {Cache - component caching}
99999
67951644
154
1000200
679.523235
Counter: #variables (positive hit) {Cache - component caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - component caching}
99999
67951644
154
1000200
679.523235
Counter: #clauses (cache record structure) {Cache - component caching}
99999
63250374
104
1000280
632.510065
Counter: #clauses (positive hit) {Cache - component caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - component caching}
99999
63250374
104
1000280
632.510065
Counter: #removed clauses / #clauses {Cache - component caching}
99999
5335.683209
0.002235
1.000000
0.053357
Counter: #identical mappings / #mappings {Cache - component caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
99999
6585311
20
11930
65.853769
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
99999
99999
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
