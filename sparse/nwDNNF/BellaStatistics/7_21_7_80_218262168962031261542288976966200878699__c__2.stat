Number: formula size {Formula representation}
1
17294844
Number: #variables {Formula representation}
1
2470874
Number: #clauses {Formula representation}
1
2470832
Timer (reduced): initialize [ns] {Formula representation}
1
1734427169
Timer: compute connected components [ns] {Formula representation}
85
7893843459
13229
968531233
92868746.576471
Number: circuit size {Circuit}
1
74861166
Number: #nodes {Circuit}
1
12762602
Number: #edges {Circuit}
1
74861166
Number: #variables {Circuit}
1
2470874
Timer: copy subcircuit [ns] {Circuit}
36
9908705227
224768
1438180101
275241811.861111
Counter: formula size (copy subcircuit) {Circuit}
36
37082808
1386
5008864
1030078.000000
Counter: #variables (copy subcircuit) {Circuit}
36
5801712
518
756546
161158.666667
Counter: #clauses (copy subcircuit) {Circuit}
36
5798982
470
756489
161082.833333
Timer (reduced): initialize [ns] {Compiler}
1
1655903030
Timer (reduced): compile [ns] {Compiler}
1
1422802874756
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
0
Number: #decisions {Compiler}
1
42
Counter: ratio of recomputed hypergraph cuts {Compiler}
78
60
0
1
0.769231
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
33
28
0
1
0.848485
Counter: #connected components {Compiler}
85
78
0
1
0.917647
Counter: #monotone residual formulae / #residual formulae {Compiler}
85
7
0
1
0.082353
Counter: monotone residual formula size {Compiler}
7
882
126
126
126.000000
Counter: #pure clauses / #clauses {Compiler}
85
7.827290
0.000000
1.000000
0.092086
Counter: pure residual formula size / residual formula size {Compiler}
85
7.567880
0.000000
1.000000
0.089034
Timer: assign literal [ns] {Compiler}
133
1321801067095
1400
356033307649
9938353887.932331
Timer: unassign literal [ns] {Compiler}
133
892590726
380
99380757
6711208.466165
Timer: get decision variable [ns] {Decision heuristic}
42
424386491
60
88245368
10104440.261905
Counter: #preselected variables {Decision heuristic}
42
14429848
1
2470874
343567.809524
Counter: #restricted variables / #preselected variables {Decision heuristic}
28
0.020234
0.000020
0.003011
0.000723
Timer (reduced): initialize [ns] {SAT solver}
1
509452118
Timer (reduced): initial simplification [ns] {SAT solver}
1
1600
Timer (reduced): initially implied literals [ns] {SAT solver}
1
1030
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
85
4852440815
17000
570037342
57087539.000000
Timer: unit propagation [ns] {SAT solver}
85
531521
220
256087
6253.188235
Counter: #implied literals {SAT solver}
85
203
0
7
2.388235
Counter: #implied literals / #variables {SAT solver}
85
0.115117
0.000000
0.015625
0.001354
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
8
12511132
112119
3573378
1563891.500000
Counter: #implicit implied literals / #variables {SAT solver}
8
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
8
0.005181
0.000000
0.005181
0.000648
Timer: compute cut [ns] {Partitioning hypergraph}
2
9599047
3676387
5922660
4799523.500000
Counter: cut size {Partitioning hypergraph}
2
22
10
12
11.000000
Counter: cut size / #variables {Partitioning hypergraph}
2
0.006570
0.002489
0.004082
0.003285
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
5
8075242
30039
6810809
1615048.400000
Counter: #vertices {Partitioning hypergraph}
5
201
0
150
40.200000
Counter: #vertices / #clauses {Partitioning hypergraph}
5
0.053475
0.000000
0.031874
0.010695
Counter: #hyperedges {Partitioning hypergraph}
5
31
0
17
6.200000
Counter: #hyperedges / #variables {Partitioning hypergraph}
5
0.009240
0.000000
0.005714
0.001848
Counter: hypergraph size {Partitioning hypergraph}
5
570
0
458
114.000000
Counter: hypergraph size / formula size {Partitioning hypergraph}
5
0.035107
0.000000
0.022307
0.007021
Timer: create equivalence structure [ns] {Partitioning hypergraph}
5
802292
13960
495735
160458.400000
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
78
36
0
1
0.461538
Number: #current entries {Cache - component caching}
1
42
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
78
71557230863
143378
10675393113
917400395.679487
Timer: search cache record structure [ns] {Cache - component caching}
78
65233972
130
6157091
836332.974359
Timer: add cache record structure [ns] {Cache - component caching}
42
30113135
290
4947384
716979.404762
Counter: #empty cache records / #cache records {Cache - component caching}
78
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
78
135727480
386
17294844
1740095.897436
Counter: formula size (positive hit) {Cache - component caching}
36
37082808
1386
5008864
1030078.000000
Counter: formula size (negative hit) {Cache - component caching}
42
98644672
386
17294844
2348682.666667
Counter: #variables (cache record structure) {Cache - component caching}
78
20252253
193
2470874
259644.269231
Counter: #variables (positive hit) {Cache - component caching}
36
5801712
518
756546
161158.666667
Counter: #variables (negative hit) {Cache - component caching}
42
14450541
193
2470874
344060.500000
Counter: #clauses (cache record structure) {Cache - component caching}
78
20246156
130
2470832
259566.102564
Counter: #clauses (positive hit) {Cache - component caching}
36
5798982
470
756489
161082.833333
Counter: #clauses (negative hit) {Cache - component caching}
42
14447174
130
2470832
343980.333333
Counter: #removed clauses / #clauses {Cache - component caching}
78
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
36
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
42
15710
30
1060
374.047619
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
42
42
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
