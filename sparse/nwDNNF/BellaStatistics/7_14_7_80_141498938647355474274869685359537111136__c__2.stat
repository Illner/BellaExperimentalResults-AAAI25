Number: formula size {Formula representation}
1
11530043
Number: #variables {Formula representation}
1
1647282
Number: #clauses {Formula representation}
1
1647289
Timer (reduced): initialize [ns] {Formula representation}
1
1282293995
Timer: compute connected components [ns] {Formula representation}
85
5489423149
10950
877362649
64581448.811765
Number: circuit size {Circuit}
1
64625703
Number: #nodes {Circuit}
1
10291875
Number: #edges {Circuit}
1
64625703
Number: #variables {Circuit}
1
1647282
Timer: copy subcircuit [ns] {Circuit}
36
8597609830
2642716
1283237059
238822495.277778
Counter: formula size (copy subcircuit) {Circuit}
36
26715780
1239
3580269
742105.000000
Counter: #variables (copy subcircuit) {Circuit}
36
4165980
462
538006
115721.666667
Counter: #clauses (copy subcircuit) {Circuit}
36
4164636
421
537998
115684.333333
Timer (reduced): initialize [ns] {Compiler}
1
1826123284
Timer (reduced): compile [ns] {Compiler}
1
590861725504
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
0
Number: #decisions {Compiler}
1
42
Counter: ratio of recomputed hypergraph cuts {Compiler}
78
60
0
1
0.769231
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
33
28
0
1
0.848485
Counter: #connected components {Compiler}
85
78
0
1
0.917647
Counter: #monotone residual formulae / #residual formulae {Compiler}
85
7
0
1
0.082353
Counter: monotone residual formula size {Compiler}
7
784
112
112
112.000000
Counter: #pure clauses / #clauses {Compiler}
85
7.563372
0.000000
1.000000
0.088981
Counter: pure residual formula size / residual formula size {Compiler}
85
7.388430
0.000000
1.000000
0.086923
Timer: assign literal [ns] {Compiler}
133
520124089501
830
129731193583
3910707439.857143
Timer: unassign literal [ns] {Compiler}
133
739168631
440
114134203
5557658.879699
Timer: get decision variable [ns] {Decision heuristic}
42
325002739
80
104436649
7738160.452381
Counter: #preselected variables {Decision heuristic}
42
9915067
1
1647282
236073.023810
Counter: #restricted variables / #preselected variables {Decision heuristic}
28
0.024600
0.000030
0.003556
0.000879
Timer (reduced): initialize [ns] {SAT solver}
1
575549773
Timer (reduced): initial simplification [ns] {SAT solver}
1
1860
Timer (reduced): initially implied literals [ns] {SAT solver}
1
1010
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
85
3766400755
9120
517365926
44310597.117647
Timer: unit propagation [ns] {SAT solver}
85
317078
240
48159
3730.329412
Counter: #implied literals {SAT solver}
85
203
0
7
2.388235
Counter: #implied literals / #variables {SAT solver}
85
0.131961
0.000000
0.017544
0.001552
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
8
8671085
71910
4614200
1083885.625000
Counter: #implicit implied literals / #variables {SAT solver}
8
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
8
0.005814
0.000000
0.005814
0.000727
Timer: compute cut [ns] {Partitioning hypergraph}
2
9484337
3758467
5725870
4742168.500000
Counter: cut size {Partitioning hypergraph}
2
23
10
13
11.500000
Counter: cut size / #variables {Partitioning hypergraph}
2
0.008407
0.003231
0.005176
0.004203
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
5
5496420
20709
4399301
1099284.000000
Counter: #vertices {Partitioning hypergraph}
5
201
0
150
40.200000
Counter: #vertices / #clauses {Partitioning hypergraph}
5
0.065166
0.000000
0.037908
0.013033
Counter: #hyperedges {Partitioning hypergraph}
5
31
0
17
6.200000
Counter: #hyperedges / #variables {Partitioning hypergraph}
5
0.011471
0.000000
0.007246
0.002294
Counter: hypergraph size {Partitioning hypergraph}
5
570
0
458
114.000000
Counter: hypergraph size / formula size {Partitioning hypergraph}
5
0.042097
0.000000
0.025952
0.008419
Timer: create equivalence structure [ns] {Partitioning hypergraph}
5
822614
13080
534256
164522.800000
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
78
36
0
1
0.461538
Number: #current entries {Cache - component caching}
1
42
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
78
47901136749
107229
10428967472
614117137.807692
Timer: search cache record structure [ns] {Cache - component caching}
78
59938727
130
8405987
768445.217949
Timer: add cache record structure [ns] {Cache - component caching}
42
55387674
970
32936632
1318754.142857
Counter: #empty cache records / #cache records {Cache - component caching}
78
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
78
94473253
344
11530043
1211195.551282
Counter: formula size (positive hit) {Cache - component caching}
36
26715780
1239
3580269
742105.000000
Counter: formula size (negative hit) {Cache - component caching}
42
67757473
344
11530043
1613273.166667
Counter: #variables (cache record structure) {Cache - component caching}
78
14097972
172
1647282
180743.230769
Counter: #variables (positive hit) {Cache - component caching}
36
4165980
462
538006
115721.666667
Counter: #variables (negative hit) {Cache - component caching}
42
9931992
172
1647282
236476.000000
Counter: #clauses (cache record structure) {Cache - component caching}
78
14094941
116
1647289
180704.371795
Counter: #clauses (positive hit) {Cache - component caching}
36
4164636
421
537998
115684.333333
Counter: #clauses (negative hit) {Cache - component caching}
42
9930305
116
1647289
236435.833333
Counter: #removed clauses / #clauses {Cache - component caching}
78
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
36
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
42
37380
50
2960
890.000000
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
42
42
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
