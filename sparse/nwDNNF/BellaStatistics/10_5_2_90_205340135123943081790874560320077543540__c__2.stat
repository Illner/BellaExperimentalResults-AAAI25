Number: formula size {Formula representation}
1
56400
Number: #variables {Formula representation}
1
5170
Number: #clauses {Formula representation}
1
5160
Timer (reduced): initialize [ns] {Formula representation}
1
6177796
Timer: compute connected components [ns] {Formula representation}
21
5680760
950
1979073
270512.380952
Number: circuit size {Circuit}
1
26354
Number: #nodes {Circuit}
1
21855
Number: #edges {Circuit}
1
26354
Number: #variables {Circuit}
1
5170
Timer: copy subcircuit [ns] {Circuit}
9
3891045
8830
1778744
432338.333333
Counter: formula size (copy subcircuit) {Circuit}
9
46412
32
25672
5156.888889
Counter: #variables (copy subcircuit) {Circuit}
9
5356
16
2606
595.111111
Counter: #clauses (copy subcircuit) {Circuit}
9
5276
12
2596
586.222222
Timer (reduced): initialize [ns] {Compiler}
1
5623271
Timer (reduced): compile [ns] {Compiler}
1
64175844
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
4
Number: #decisions {Compiler}
1
10
Counter: ratio of recomputed hypergraph cuts {Compiler}
19
7
0
1
0.368421
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
4
1
0
1
0.250000
Counter: #connected components {Compiler}
21
19
0
2
0.904762
Counter: #monotone residual formulae / #residual formulae {Compiler}
21
4
0
1
0.190476
Counter: monotone residual formula size {Compiler}
4
40
8
12
10.000000
Counter: #pure clauses / #clauses {Compiler}
21
4.000000
0.000000
1.000000
0.190476
Counter: pure residual formula size / residual formula size {Compiler}
21
4.000000
0.000000
1.000000
0.190476
Timer: assign literal [ns] {Compiler}
40
23398507
430
10141322
584962.675000
Timer: unassign literal [ns] {Compiler}
40
627695
230
148689
15692.375000
Timer: get decision variable [ns] {Decision heuristic}
10
30809
50
29659
3080.900000
Counter: #preselected variables {Decision heuristic}
10
5200
1
5170
520.000000
Counter: #restricted variables / #preselected variables {Decision heuristic}
1
0.003868
0.003868
0.003868
0.003868
Timer (reduced): initialize [ns] {SAT solver}
1
1703135
Timer (reduced): initial simplification [ns] {SAT solver}
1
510
Timer (reduced): initially implied literals [ns] {SAT solver}
1
290
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
21
1161600
1150
286877
55314.285714
Timer: unit propagation [ns] {SAT solver}
21
9560
170
2560
455.238095
Counter: #implied literals {SAT solver}
21
40
0
2
1.904762
Counter: #implied literals / #variables {SAT solver}
21
0.766155
0.000000
0.200000
0.036484
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
6
2865616
8320
1441508
477602.666667
Counter: #implicit implied literals / #variables {SAT solver}
6
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
6
0.222816
0.003454
0.062500
0.037136
Timer: compute cut [ns] {Partitioning hypergraph}
1
386217
386217
386217
386217.000000
Counter: cut size {Partitioning hypergraph}
1
7
7
7
7.000000
Counter: cut size / #variables {Partitioning hypergraph}
1
0.002686
0.002686
0.002686
0.002686
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
3
3221692
4250
3213162
1073897.333333
Counter: #vertices {Partitioning hypergraph}
3
2
0
2
0.666667
Counter: #vertices / #clauses {Partitioning hypergraph}
3
0.000770
0.000000
0.000770
0.000257
Counter: #hyperedges {Partitioning hypergraph}
3
7
0
7
2.333333
Counter: #hyperedges / #variables {Partitioning hypergraph}
3
0.002686
0.000000
0.002686
0.000895
Counter: hypergraph size {Partitioning hypergraph}
3
14
0
14
4.666667
Counter: hypergraph size / formula size {Partitioning hypergraph}
3
0.000545
0.000000
0.000545
0.000182
Timer: create equivalence structure [ns] {Partitioning hypergraph}
3
212198
1820
208558
70732.666667
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
19
9
0
1
0.473684
Number: #current entries {Cache - component caching}
1
10
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
19
20548755
8660
7300547
1081513.421053
Timer: search cache record structure [ns] {Cache - component caching}
19
35990
120
18900
1894.210526
Timer: add cache record structure [ns] {Cache - component caching}
10
18929
140
6820
1892.900000
Counter: #empty cache records / #cache records {Cache - component caching}
19
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
19
149224
32
56400
7853.894737
Counter: formula size (positive hit) {Cache - component caching}
9
46412
32
25672
5156.888889
Counter: formula size (negative hit) {Cache - component caching}
10
102812
32
56400
10281.200000
Counter: #variables (cache record structure) {Cache - component caching}
19
15882
16
5170
835.894737
Counter: #variables (positive hit) {Cache - component caching}
9
5356
16
2606
595.111111
Counter: #variables (negative hit) {Cache - component caching}
10
10526
16
5170
1052.600000
Counter: #clauses (cache record structure) {Cache - component caching}
19
15712
12
5160
826.947368
Counter: #clauses (positive hit) {Cache - component caching}
9
5276
12
2596
586.222222
Counter: #clauses (negative hit) {Cache - component caching}
10
10436
12
5160
1043.600000
Counter: #removed clauses / #clauses {Cache - component caching}
19
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
9
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
10
580
30
140
58.000000
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
10
10
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
