Number: formula size {Formula representation}
1
15800
Number: #variables {Formula representation}
1
3200
Number: #clauses {Formula representation}
1
3205
Timer (reduced): initialize [ns] {Formula representation}
1
2212077
Timer: compute connected components [ns] {Formula representation}
61
10064243
2810
1156688
164987.590164
Number: circuit size {Circuit}
1
100825
Number: #nodes {Circuit}
1
31359
Number: #edges {Circuit}
1
100825
Number: #variables {Circuit}
1
3200
Timer: copy subcircuit [ns] {Circuit}
26
10725804
12920
2700776
412530.923077
Counter: formula size (copy subcircuit) {Circuit}
26
45772
150
7890
1760.461538
Counter: #variables (copy subcircuit) {Circuit}
26
11064
66
1690
425.538462
Counter: #clauses (copy subcircuit) {Circuit}
26
10773
52
1689
414.346154
Timer (reduced): initialize [ns] {Compiler}
1
6011811
Timer (reduced): compile [ns] {Compiler}
1
93016272
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
0
Number: #decisions {Compiler}
1
30
Counter: ratio of recomputed hypergraph cuts {Compiler}
56
12
0
1
0.214286
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
3
0
0
0
0.000000
Counter: #connected components {Compiler}
61
56
0
1
0.918033
Counter: #monotone residual formulae / #residual formulae {Compiler}
61
5
0
1
0.081967
Counter: monotone residual formula size {Compiler}
5
150
30
30
30.000000
Counter: #pure clauses / #clauses {Compiler}
61
6.724464
0.000000
1.000000
0.110237
Counter: pure residual formula size / residual formula size {Compiler}
61
6.214056
0.000000
1.000000
0.101870
Timer: assign literal [ns] {Compiler}
97
2380157
570
389470
24537.701031
Timer: unassign literal [ns] {Compiler}
97
588109
270
72100
6062.979381
Timer: get decision variable [ns] {Decision heuristic}
30
6030
50
750
201.000000
Counter: #preselected variables {Decision heuristic}
30
232
1
20
7.733333
Counter: #restricted variables / #preselected variables {Decision heuristic}
0
0.000000
0.000000
0.000000
0.000000
Timer (reduced): initialize [ns] {SAT solver}
1
1119798
Timer (reduced): initial simplification [ns] {SAT solver}
1
640
Timer (reduced): initially implied literals [ns] {SAT solver}
1
360
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
61
1774870
2430
179090
29096.229508
Timer: unit propagation [ns] {SAT solver}
61
20070
90
5100
329.016393
Counter: #implied literals {SAT solver}
61
121
0
5
1.983607
Counter: #implied literals / #variables {SAT solver}
61
0.635398
0.000000
0.062500
0.010416
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
12
2324868
24150
1918268
193739.000000
Counter: #implicit implied literals / #variables {SAT solver}
12
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
12
0.063886
0.000000
0.020408
0.005324
Timer: compute cut [ns] {Partitioning hypergraph}
2
21126951
392070
20734881
10563475.500000
Counter: cut size {Partitioning hypergraph}
2
23
3
20
11.500000
Counter: cut size / #variables {Partitioning hypergraph}
2
0.032337
0.006250
0.026087
0.016168
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
3
4880923
8880
4841653
1626974.333333
Counter: #vertices {Partitioning hypergraph}
3
634
0
630
211.333333
Counter: #vertices / #clauses {Partitioning hypergraph}
3
0.238235
0.000000
0.196568
0.079412
Counter: #hyperedges {Partitioning hypergraph}
3
29
0
25
9.666667
Counter: #hyperedges / #variables {Partitioning hypergraph}
3
0.042595
0.000000
0.034783
0.014198
Counter: hypergraph size {Partitioning hypergraph}
3
1909
0
1900
636.333333
Counter: hypergraph size / formula size {Partitioning hypergraph}
3
0.146880
0.000000
0.120253
0.048960
Timer: create equivalence structure [ns] {Partitioning hypergraph}
3
197390
4210
183870
65796.666667
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
56
26
0
1
0.464286
Number: #current entries {Cache - component caching}
1
30
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
56
34706350
32790
5033863
619756.250000
Timer: search cache record structure [ns] {Cache - component caching}
56
52710
120
6740
941.250000
Timer: add cache record structure [ns] {Cache - component caching}
30
19490
140
2240
649.666667
Counter: #empty cache records / #cache records {Cache - component caching}
56
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
56
137302
98
15800
2451.821429
Counter: formula size (positive hit) {Cache - component caching}
26
45772
150
7890
1760.461538
Counter: formula size (negative hit) {Cache - component caching}
30
91530
98
15800
3051.000000
Counter: #variables (cache record structure) {Cache - component caching}
56
31611
49
3200
564.482143
Counter: #variables (positive hit) {Cache - component caching}
26
11064
66
1690
425.538462
Counter: #variables (negative hit) {Cache - component caching}
30
20547
49
3200
684.900000
Counter: #clauses (cache record structure) {Cache - component caching}
56
30940
34
3205
552.500000
Counter: #clauses (positive hit) {Cache - component caching}
26
10773
52
1689
414.346154
Counter: #clauses (negative hit) {Cache - component caching}
30
20167
34
3205
672.233333
Counter: #removed clauses / #clauses {Cache - component caching}
56
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
26
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
30
1690
30
130
56.333333
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
30
30
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
