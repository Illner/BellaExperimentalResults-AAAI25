Number: formula size {Formula representation}
1
11600
Number: #variables {Formula representation}
1
1330
Number: #clauses {Formula representation}
1
1320
Timer (reduced): initialize [ns] {Formula representation}
1
1581735
Timer: compute connected components [ns] {Formula representation}
21
1737295
1100
503718
82728.333333
Number: circuit size {Circuit}
1
24178
Number: #nodes {Circuit}
1
12511
Number: #edges {Circuit}
1
24178
Number: #variables {Circuit}
1
1330
Timer: copy subcircuit [ns] {Circuit}
9
4713955
16040
2227993
523772.777778
Counter: formula size (copy subcircuit) {Circuit}
9
11472
44
5192
1274.666667
Counter: #variables (copy subcircuit) {Circuit}
9
1844
22
686
204.888889
Counter: #clauses (copy subcircuit) {Circuit}
9
1764
16
676
196.000000
Timer (reduced): initialize [ns] {Compiler}
1
12021962
Timer (reduced): compile [ns] {Compiler}
1
19755947
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
0
Number: #decisions {Compiler}
1
10
Counter: ratio of recomputed hypergraph cuts {Compiler}
19
5
0
1
0.263158
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
3
0
0
0
0.000000
Counter: #connected components {Compiler}
21
19
0
1
0.904762
Counter: #monotone residual formulae / #residual formulae {Compiler}
21
2
0
1
0.095238
Counter: monotone residual formula size {Compiler}
2
24
12
12
12.000000
Counter: #pure clauses / #clauses {Compiler}
21
2.197647
0.000000
1.000000
0.104650
Counter: pure residual formula size / residual formula size {Compiler}
21
2.112444
0.000000
1.000000
0.100593
Timer: assign literal [ns] {Compiler}
40
1298965
430
532308
32474.125000
Timer: unassign literal [ns] {Compiler}
40
172779
230
36969
4319.475000
Timer: get decision variable [ns] {Decision heuristic}
10
2590
50
1200
259.000000
Counter: #preselected variables {Decision heuristic}
10
39
1
8
3.900000
Counter: #restricted variables / #preselected variables {Decision heuristic}
0
0.000000
0.000000
0.000000
0.000000
Timer (reduced): initialize [ns] {SAT solver}
1
683938
Timer (reduced): initial simplification [ns] {SAT solver}
1
900
Timer (reduced): initially implied literals [ns] {SAT solver}
1
510
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
21
455540
1220
90000
21692.380952
Timer: unit propagation [ns] {SAT solver}
21
8040
180
780
382.857143
Counter: #implied literals {SAT solver}
21
40
0
2
1.904762
Counter: #implied literals / #variables {SAT solver}
21
0.630832
0.000000
0.142857
0.030040
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
5
766258
10570
704388
153251.600000
Counter: #implicit implied literals / #variables {SAT solver}
5
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
5
0.203691
0.007519
0.052632
0.040738
Timer: compute cut [ns] {Partitioning hypergraph}
1
776807
776807
776807
776807.000000
Counter: cut size {Partitioning hypergraph}
1
8
8
8
8.000000
Counter: cut size / #variables {Partitioning hypergraph}
1
0.006015
0.006015
0.006015
0.006015
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
3
2357143
4340
2339163
785714.333333
Counter: #vertices {Partitioning hypergraph}
3
5
0
5
1.666667
Counter: #vertices / #clauses {Partitioning hypergraph}
3
0.003788
0.000000
0.003788
0.001263
Counter: #hyperedges {Partitioning hypergraph}
3
10
0
10
3.333333
Counter: #hyperedges / #variables {Partitioning hypergraph}
3
0.007519
0.000000
0.007519
0.002506
Counter: hypergraph size {Partitioning hypergraph}
3
35
0
35
11.666667
Counter: hypergraph size / formula size {Partitioning hypergraph}
3
0.003017
0.000000
0.003017
0.001006
Timer: create equivalence structure [ns] {Partitioning hypergraph}
3
125649
2350
119519
41883.000000
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
19
9
0
1
0.473684
Number: #current entries {Cache - component caching}
1
10
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
19
6473639
14370
1977344
340717.842105
Timer: search cache record structure [ns] {Cache - component caching}
19
21040
150
5170
1107.368421
Timer: add cache record structure [ns] {Cache - component caching}
10
11750
260
2480
1175.000000
Counter: #empty cache records / #cache records {Cache - component caching}
19
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
19
34544
44
11600
1818.105263
Counter: formula size (positive hit) {Cache - component caching}
9
11472
44
5192
1274.666667
Counter: formula size (negative hit) {Cache - component caching}
10
23072
44
11600
2307.200000
Counter: #variables (cache record structure) {Cache - component caching}
19
5018
22
1330
264.105263
Counter: #variables (positive hit) {Cache - component caching}
9
1844
22
686
204.888889
Counter: #variables (negative hit) {Cache - component caching}
10
3174
22
1330
317.400000
Counter: #clauses (cache record structure) {Cache - component caching}
19
4848
16
1320
255.157895
Counter: #clauses (positive hit) {Cache - component caching}
9
1764
16
676
196.000000
Counter: #clauses (negative hit) {Cache - component caching}
10
3084
16
1320
308.400000
Counter: #removed clauses / #clauses {Cache - component caching}
19
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
9
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
10
860
30
270
86.000000
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
10
10
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
