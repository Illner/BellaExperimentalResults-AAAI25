Number: formula size {Formula representation}
1
2112
Number: #variables {Formula representation}
1
292
Number: #clauses {Formula representation}
1
288
Timer (reduced): initialize [ns] {Formula representation}
1
267579
Timer: compute connected components [ns] {Formula representation}
13
327528
410
126229
25194.461538
Number: circuit size {Circuit}
1
2338
Number: #nodes {Circuit}
1
1747
Number: #edges {Circuit}
1
2338
Number: #variables {Circuit}
1
292
Timer: copy subcircuit [ns] {Circuit}
7
370648
8220
192179
52949.714286
Counter: formula size (copy subcircuit) {Circuit}
7
1748
20
952
249.714286
Counter: #variables (copy subcircuit) {Circuit}
7
372
10
160
53.142857
Counter: #clauses (copy subcircuit) {Circuit}
7
352
8
156
50.285714
Timer (reduced): initialize [ns] {Compiler}
1
2760370
Timer (reduced): compile [ns] {Compiler}
1
3161309
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
4
Number: #decisions {Compiler}
1
6
Counter: ratio of recomputed hypergraph cuts {Compiler}
13
7
0
1
0.538462
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
3
0
0
0
0.000000
Counter: #connected components {Compiler}
13
13
0
2
1.000000
Counter: #monotone residual formulae / #residual formulae {Compiler}
13
2
0
1
0.153846
Counter: monotone residual formula size {Compiler}
2
8
4
4
4.000000
Counter: #pure clauses / #clauses {Compiler}
13
2.000000
0.000000
1.000000
0.153846
Counter: pure residual formula size / residual formula size {Compiler}
13
2.000000
0.000000
1.000000
0.153846
Timer: assign literal [ns] {Compiler}
24
110140
300
37350
4589.166667
Timer: unassign literal [ns] {Compiler}
24
29710
200
6120
1237.916667
Timer: get decision variable [ns] {Decision heuristic}
6
1300
40
990
216.666667
Counter: #preselected variables {Decision heuristic}
6
13
1
4
2.166667
Counter: #restricted variables / #preselected variables {Decision heuristic}
0
0.000000
0.000000
0.000000
0.000000
Timer (reduced): initialize [ns] {SAT solver}
1
137350
Timer (reduced): initial simplification [ns] {SAT solver}
1
720
Timer (reduced): initially implied literals [ns] {SAT solver}
1
340
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
13
86460
560
26990
6650.769231
Timer: unit propagation [ns] {SAT solver}
13
3540
130
1040
272.307692
Counter: #implied literals {SAT solver}
13
24
0
2
1.846154
Counter: #implied literals / #variables {SAT solver}
13
1.038399
0.000000
0.333333
0.079877
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
7
189330
3490
150300
27047.142857
Counter: #implicit implied literals / #variables {SAT solver}
7
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
7
0.671842
0.027397
0.111111
0.095977
Timer: compute cut [ns] {Partitioning hypergraph}
1
393598
393598
393598
393598.000000
Counter: cut size {Partitioning hypergraph}
1
4
4
4
4.000000
Counter: cut size / #variables {Partitioning hypergraph}
1
0.013699
0.013699
0.013699
0.013699
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
3
460498
2309
451429
153499.333333
Counter: #vertices {Partitioning hypergraph}
3
2
0
2
0.666667
Counter: #vertices / #clauses {Partitioning hypergraph}
3
0.006944
0.000000
0.006944
0.002315
Counter: #hyperedges {Partitioning hypergraph}
3
4
0
4
1.333333
Counter: #hyperedges / #variables {Partitioning hypergraph}
3
0.013699
0.000000
0.013699
0.004566
Counter: hypergraph size {Partitioning hypergraph}
3
8
0
8
2.666667
Counter: hypergraph size / formula size {Partitioning hypergraph}
3
0.003788
0.000000
0.003788
0.001263
Timer: create equivalence structure [ns] {Partitioning hypergraph}
3
31730
1030
28790
10576.666667
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
13
7
0
1
0.538462
Number: #current entries {Cache - component caching}
1
6
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
13
963917
5260
383508
74147.461538
Timer: search cache record structure [ns] {Cache - component caching}
13
4030
120
910
310.000000
Timer: add cache record structure [ns] {Cache - component caching}
6
4020
140
2360
670.000000
Counter: #empty cache records / #cache records {Cache - component caching}
13
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
13
5512
20
2112
424.000000
Counter: formula size (positive hit) {Cache - component caching}
7
1748
20
952
249.714286
Counter: formula size (negative hit) {Cache - component caching}
6
3764
20
2112
627.333333
Counter: #variables (cache record structure) {Cache - component caching}
13
1000
10
292
76.923077
Counter: #variables (positive hit) {Cache - component caching}
7
372
10
160
53.142857
Counter: #variables (negative hit) {Cache - component caching}
6
628
10
292
104.666667
Counter: #clauses (cache record structure) {Cache - component caching}
13
960
8
288
73.846154
Counter: #clauses (positive hit) {Cache - component caching}
7
352
8
156
50.285714
Counter: #clauses (negative hit) {Cache - component caching}
6
608
8
288
101.333333
Counter: #removed clauses / #clauses {Cache - component caching}
13
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
7
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
6
500
30
260
83.333333
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
6
6
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
