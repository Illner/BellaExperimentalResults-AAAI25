Number: formula size {Formula representation}
1
10320
Number: #variables {Formula representation}
1
1340
Number: #clauses {Formula representation}
1
1320
Timer (reduced): initialize [ns] {Formula representation}
1
1490467
Timer: compute connected components [ns] {Formula representation}
21
1938917
2170
464899
92329.380952
Number: circuit size {Circuit}
1
32498
Number: #nodes {Circuit}
1
12915
Number: #edges {Circuit}
1
32498
Number: #variables {Circuit}
1
1340
Timer: copy subcircuit [ns] {Circuit}
9
4119081
11330
1944026
457675.666667
Counter: formula size (copy subcircuit) {Circuit}
9
12500
68
5128
1388.888889
Counter: #variables (copy subcircuit) {Circuit}
9
2312
34
760
256.888889
Counter: #clauses (copy subcircuit) {Circuit}
9
2144
24
740
238.222222
Timer (reduced): initialize [ns] {Compiler}
1
4686561
Timer (reduced): compile [ns] {Compiler}
1
19685870
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
0
Number: #decisions {Compiler}
1
10
Counter: ratio of recomputed hypergraph cuts {Compiler}
19
3
0
1
0.157895
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
2
0
0
0
0.000000
Counter: #connected components {Compiler}
21
19
0
1
0.904762
Counter: #monotone residual formulae / #residual formulae {Compiler}
21
2
0
1
0.095238
Counter: monotone residual formula size {Compiler}
2
40
20
20
20.000000
Counter: #pure clauses / #clauses {Compiler}
21
2.580000
0.000000
1.000000
0.122857
Counter: pure residual formula size / residual formula size {Compiler}
21
2.435006
0.000000
1.000000
0.115953
Timer: assign literal [ns] {Compiler}
40
888990
360
286030
22224.750000
Timer: unassign literal [ns] {Compiler}
40
154589
200
29240
3864.725000
Timer: get decision variable [ns] {Decision heuristic}
10
2070
50
930
207.000000
Counter: #preselected variables {Decision heuristic}
10
46
1
9
4.600000
Counter: #restricted variables / #preselected variables {Decision heuristic}
0
0.000000
0.000000
0.000000
0.000000
Timer (reduced): initialize [ns] {SAT solver}
1
475089
Timer (reduced): initial simplification [ns] {SAT solver}
1
460
Timer (reduced): initially implied literals [ns] {SAT solver}
1
220
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
21
402069
1980
74230
19146.142857
Timer: unit propagation [ns] {SAT solver}
21
10680
140
5050
508.571429
Counter: #implied literals {SAT solver}
21
40
0
2
1.904762
Counter: #implied literals / #variables {SAT solver}
21
0.391776
0.000000
0.090909
0.018656
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
3
674189
14650
640449
224729.666667
Counter: #implicit implied literals / #variables {SAT solver}
3
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
3
0.066286
0.007463
0.029412
0.022095
Timer: compute cut [ns] {Partitioning hypergraph}
1
1376267
1376267
1376267
1376267.000000
Counter: cut size {Partitioning hypergraph}
1
9
9
9
9.000000
Counter: cut size / #variables {Partitioning hypergraph}
1
0.006716
0.006716
0.006716
0.006716
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
2
2552345
6600
2545745
1276172.500000
Counter: #vertices {Partitioning hypergraph}
2
10
0
10
5.000000
Counter: #vertices / #clauses {Partitioning hypergraph}
2
0.007576
0.000000
0.007576
0.003788
Counter: #hyperedges {Partitioning hypergraph}
2
10
0
10
5.000000
Counter: #hyperedges / #variables {Partitioning hypergraph}
2
0.007463
0.000000
0.007463
0.003731
Counter: hypergraph size {Partitioning hypergraph}
2
60
0
60
30.000000
Counter: hypergraph size / formula size {Partitioning hypergraph}
2
0.005814
0.000000
0.005814
0.002907
Timer: create equivalence structure [ns] {Partitioning hypergraph}
2
102980
3090
99890
51490.000000
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
19
9
0
1
0.473684
Number: #current entries {Cache - component caching}
1
10
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
19
6573796
21350
1737336
345989.263158
Timer: search cache record structure [ns] {Cache - component caching}
19
15770
130
5860
830.000000
Timer: add cache record structure [ns] {Cache - component caching}
10
12740
140
6040
1274.000000
Counter: #empty cache records / #cache records {Cache - component caching}
19
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
19
35320
68
10320
1858.947368
Counter: formula size (positive hit) {Cache - component caching}
9
12500
68
5128
1388.888889
Counter: formula size (negative hit) {Cache - component caching}
10
22820
68
10320
2282.000000
Counter: #variables (cache record structure) {Cache - component caching}
19
5964
34
1340
313.894737
Counter: #variables (positive hit) {Cache - component caching}
9
2312
34
760
256.888889
Counter: #variables (negative hit) {Cache - component caching}
10
3652
34
1340
365.200000
Counter: #clauses (cache record structure) {Cache - component caching}
19
5608
24
1320
295.157895
Counter: #clauses (positive hit) {Cache - component caching}
9
2144
24
740
238.222222
Counter: #clauses (negative hit) {Cache - component caching}
10
3464
24
1320
346.400000
Counter: #removed clauses / #clauses {Cache - component caching}
19
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
9
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
10
810
40
340
81.000000
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
10
10
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
