Number: formula size {Formula representation}
1
11530043
Number: #variables {Formula representation}
1
1647282
Number: #clauses {Formula representation}
1
1647289
Timer (reduced): initialize [ns] {Formula representation}
1
1150863826
Timer: compute connected components [ns] {Formula representation}
97
4829489248
11870
788543205
49788548.948454
Number: circuit size {Circuit}
1
68171980
Number: #nodes {Circuit}
1
10325489
Number: #edges {Circuit}
1
68171980
Number: #variables {Circuit}
1
1647282
Timer: copy subcircuit [ns] {Circuit}
38
8580886817
143080
1297572267
225812810.973684
Counter: formula size (copy subcircuit) {Circuit}
38
16920600
780
2134867
445278.947368
Counter: #variables (copy subcircuit) {Circuit}
38
2772510
323
336322
72960.789474
Counter: #clauses (copy subcircuit) {Circuit}
38
2770970
263
336314
72920.263158
Timer (reduced): initialize [ns] {Compiler}
1
1254405311
Timer (reduced): compile [ns] {Compiler}
1
536042266492
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
0
Number: #decisions {Compiler}
1
48
Counter: ratio of recomputed hypergraph cuts {Compiler}
86
62
0
1
0.720930
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
31
26
0
1
0.838710
Counter: #connected components {Compiler}
97
86
0
1
0.886598
Counter: #monotone residual formulae / #residual formulae {Compiler}
97
11
0
1
0.113402
Counter: monotone residual formula size {Compiler}
11
1288
112
126
117.090909
Counter: #pure clauses / #clauses {Compiler}
97
11.929894
0.000000
1.000000
0.122989
Counter: pure residual formula size / residual formula size {Compiler}
97
11.643426
0.000000
1.000000
0.120035
Timer: assign literal [ns] {Compiler}
152
468374191286
1430
151573666041
3081409153.197368
Timer: unassign literal [ns] {Compiler}
152
490468724
340
85163746
3226767.921053
Timer: get decision variable [ns] {Decision heuristic}
48
276744955
70
62517139
5765519.895833
Counter: #preselected variables {Decision heuristic}
48
8513340
1
1647282
177361.250000
Counter: #restricted variables / #preselected variables {Decision heuristic}
26
0.020993
0.000030
0.003529
0.000807
Timer (reduced): initialize [ns] {SAT solver}
1
369779799
Timer (reduced): initial simplification [ns] {SAT solver}
1
1440
Timer (reduced): initially implied literals [ns] {SAT solver}
1
1080
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
97
3152173246
15090
403223788
32496631.402062
Timer: unit propagation [ns] {SAT solver}
97
270671
250
25200
2790.422680
Counter: #implied literals {SAT solver}
97
232
0
7
2.391753
Counter: #implied literals / #variables {SAT solver}
97
0.205801
0.000000
0.017544
0.002122
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
12
12783410
109380
4519641
1065284.166667
Counter: #implicit implied literals / #variables {SAT solver}
12
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
12
0.005181
0.000000
0.005181
0.000432
Timer: compute cut [ns] {Partitioning hypergraph}
2
13343082
4109350
9233732
6671541.000000
Counter: cut size {Partitioning hypergraph}
2
24
10
14
12.000000
Counter: cut size / #variables {Partitioning hypergraph}
2
0.008019
0.002843
0.005176
0.004010
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
5
10148115
29370
9025742
2029623.000000
Counter: #vertices {Partitioning hypergraph}
5
299
0
248
59.800000
Counter: #vertices / #clauses {Partitioning hypergraph}
5
0.078266
0.000000
0.051008
0.015653
Counter: #hyperedges {Partitioning hypergraph}
5
33
0
19
6.600000
Counter: #hyperedges / #variables {Partitioning hypergraph}
5
0.011105
0.000000
0.007246
0.002221
Counter: hypergraph size {Partitioning hypergraph}
5
866
0
754
173.200000
Counter: hypergraph size / formula size {Partitioning hypergraph}
5
0.052146
0.000000
0.036001
0.010429
Timer: create equivalence structure [ns] {Partitioning hypergraph}
5
711992
13570
469012
142398.400000
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
86
38
0
1
0.441860
Number: #current entries {Cache - component caching}
1
48
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
86
47025041489
133080
9172441742
546802808.011628
Timer: search cache record structure [ns] {Cache - component caching}
86
40716736
150
4846272
473450.418605
Timer: add cache record structure [ns] {Cache - component caching}
48
21614879
200
3558508
450309.979167
Counter: #empty cache records / #cache records {Cache - component caching}
86
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
86
74892137
344
11530043
870838.802326
Counter: formula size (positive hit) {Cache - component caching}
38
16920600
780
2134867
445278.947368
Counter: formula size (negative hit) {Cache - component caching}
48
57971537
344
11530043
1207740.354167
Counter: #variables (cache record structure) {Cache - component caching}
86
11313984
172
1647282
131557.953488
Counter: #variables (positive hit) {Cache - component caching}
38
2772510
323
336322
72960.789474
Counter: #variables (negative hit) {Cache - component caching}
48
8541474
172
1647282
177947.375000
Counter: #clauses (cache record structure) {Cache - component caching}
86
11310303
116
1647289
131515.151163
Counter: #clauses (positive hit) {Cache - component caching}
38
2770970
263
336314
72920.263158
Counter: #clauses (negative hit) {Cache - component caching}
48
8539333
116
1647289
177902.770833
Counter: #removed clauses / #clauses {Cache - component caching}
86
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
38
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
48
36462
50
4330
759.625000
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
48
48
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
