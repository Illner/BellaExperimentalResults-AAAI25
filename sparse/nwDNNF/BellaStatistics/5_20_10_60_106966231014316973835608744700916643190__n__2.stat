Number: formula size {Formula representation}
1
1000600
Number: #variables {Formula representation}
1
200300
Number: #clauses {Formula representation}
1
200280
Timer (reduced): initialize [ns] {Formula representation}
1
113848813
Timer: compute connected components [ns] {Formula representation}
199999
35588666303
13910
77184281
177944.221236
Number: circuit size {Circuit}
1
12229568
Number: #nodes {Circuit}
1
1131844
Number: #edges {Circuit}
1
12229568
Number: #variables {Circuit}
1
200300
Timer: copy subcircuit [ns] {Circuit}
0
0
0
0
0.000000
Counter: formula size (copy subcircuit) {Circuit}
0
0
0
0
0.000000
Counter: #variables (copy subcircuit) {Circuit}
0
0
0
0
0.000000
Counter: #clauses (copy subcircuit) {Circuit}
0
0
0
0
0.000000
Timer (reduced): initialize [ns] {Compiler}
1
152147617
Timer (reduced): compile [ns] {Compiler}
1
154788848371
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
0
Number: #decisions {Compiler}
1
99999
Counter: ratio of recomputed hypergraph cuts {Compiler}
99999
84194
0
1
0.841948
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
84194
999
0
1
0.011865
Counter: #connected components {Compiler}
199999
99999
0
1
0.499997
Counter: #monotone residual formulae / #residual formulae {Compiler}
199999
100000
0
1
0.500003
Counter: monotone residual formula size {Compiler}
100000
19843620
180
240
198.436200
Counter: #pure clauses / #clauses {Compiler}
199999
101326.419959
0.000000
1.000000
0.506635
Counter: pure residual formula size / residual formula size {Compiler}
199999
100925.249628
0.000000
1.000000
0.504629
Timer: assign literal [ns] {Compiler}
314882
16648382256
1370
727913325
52871.813111
Timer: unassign literal [ns] {Compiler}
314882
5732466193
250
13189727
18205.125072
Timer: get decision variable [ns] {Decision heuristic}
99999
252621421
40
8050306
2526.239472
Counter: #preselected variables {Decision heuristic}
99999
15004705
1
200300
150.048550
Counter: #restricted variables / #preselected variables {Decision heuristic}
999
2.573560
0.000250
0.003804
0.002576
Timer (reduced): initialize [ns] {SAT solver}
1
53077091
Timer (reduced): initial simplification [ns] {SAT solver}
1
1490
Timer (reduced): initially implied literals [ns] {SAT solver}
1
1080
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
199999
16396754481
8510
46235851
81984.182326
Timer: unit propagation [ns] {SAT solver}
199999
101681437
159
427105
508.409727
Counter: #implied literals {SAT solver}
199999
574212
0
10
2.871074
Counter: #implied literals / #variables {SAT solver}
199999
884.157756
0.000000
0.010989
0.004421
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
83195
26032592496
101699
5613885
312910.541451
Counter: #implicit implied literals / #variables {SAT solver}
83195
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
83195
44.044974
0.000000
0.003650
0.000529
Timer: compute cut [ns] {Partitioning hypergraph}
1011
162276665
58539
753081
160511.043521
Counter: cut size {Partitioning hypergraph}
1011
15718
2
18
15.546983
Counter: cut size / #variables {Partitioning hypergraph}
1011
3.362788
0.002632
0.004386
0.003326
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
83195
9555691398
29190
5605564
114858.962654
Counter: #vertices {Partitioning hypergraph}
83195
102054
0
102
1.226684
Counter: #vertices / #clauses {Partitioning hypergraph}
83195
22.201160
0.000000
0.022116
0.000267
Counter: #hyperedges {Partitioning hypergraph}
83195
20049
0
20
0.240988
Counter: #hyperedges / #variables {Partitioning hypergraph}
83195
4.297975
0.000000
0.006579
0.000052
Counter: hypergraph size {Partitioning hypergraph}
83195
220123
0
220
2.645868
Counter: hypergraph size / formula size {Partitioning hypergraph}
83195
13.200525
0.000000
0.013142
0.000159
Timer: create equivalence structure [ns] {Partitioning hypergraph}
83195
3823929535
14290
1039438
45963.453753
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
99999
0
0
0
0.000000
Number: #current entries {Cache - component caching}
1
99999
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
99999
22109495319
38710
12498924
221097.164162
Timer: search cache record structure [ns] {Cache - component caching}
99999
144097522
270
61599
1440.989630
Timer: add cache record structure [ns] {Cache - component caching}
99999
261948487
350
2260824
2619.511065
Counter: #empty cache records / #cache records {Cache - component caching}
99999
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
99999
310453698
548
1000600
3104.568026
Counter: formula size (positive hit) {Cache - component caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - component caching}
99999
310453698
548
1000600
3104.568026
Counter: #variables (cache record structure) {Cache - component caching}
99999
101492512
274
200300
1014.935269
Counter: #variables (positive hit) {Cache - component caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - component caching}
99999
101492512
274
200300
1014.935269
Counter: #clauses (cache record structure) {Cache - component caching}
99999
91958075
184
200280
919.589946
Counter: #clauses (positive hit) {Cache - component caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - component caching}
99999
91958075
184
200280
919.589946
Counter: #removed clauses / #clauses {Cache - component caching}
99999
3155.944653
0.012114
1.000000
0.031560
Counter: #identical mappings / #mappings {Cache - component caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
99999
8867827
30
14040
88.679157
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
99999
99999
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
