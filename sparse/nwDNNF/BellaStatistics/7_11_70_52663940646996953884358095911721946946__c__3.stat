Number: formula size {Formula representation}
1
6765022
Number: #variables {Formula representation}
1
1127588
Number: #clauses {Formula representation}
1
1127770
Timer (reduced): initialize [ns] {Formula representation}
1
686547289
Timer: compute connected components [ns] {Formula representation}
121
4824239899
6100
478444256
39869751.231405
Number: circuit size {Circuit}
1
92763932
Number: #nodes {Circuit}
1
14541913
Number: #edges {Circuit}
1
92763932
Number: #variables {Circuit}
1
1127588
Timer: copy subcircuit [ns] {Circuit}
50
14804848896
1247386
1751619036
296096977.920000
Counter: formula size (copy subcircuit) {Circuit}
50
16113240
1232
1406251
322264.800000
Counter: #variables (copy subcircuit) {Circuit}
50
2934800
418
249084
58696.000000
Counter: #clauses (copy subcircuit) {Circuit}
50
2938250
430
249232
58765.000000
Timer (reduced): initialize [ns] {Compiler}
1
933958004
Timer (reduced): compile [ns] {Compiler}
1
276041588018
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
0
Number: #decisions {Compiler}
1
60
Counter: ratio of recomputed hypergraph cuts {Compiler}
110
73
0
1
0.663636
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
41
33
0
1
0.804878
Counter: #connected components {Compiler}
121
110
0
1
0.909091
Counter: #monotone residual formulae / #residual formulae {Compiler}
121
11
0
1
0.090909
Counter: monotone residual formula size {Compiler}
11
726
66
66
66.000000
Counter: #pure clauses / #clauses {Compiler}
121
11.842172
0.000000
1.000000
0.097869
Counter: pure residual formula size / residual formula size {Compiler}
121
11.591822
0.000000
1.000000
0.095800
Timer: assign literal [ns] {Compiler}
186
200401745646
820
35320707614
1077428740.032258
Timer: unassign literal [ns] {Compiler}
186
751193775
410
80945458
4038676.209677
Timer: get decision variable [ns] {Decision heuristic}
60
252260542
130
52637181
4204342.366667
Counter: #preselected variables {Decision heuristic}
60
9096350
1
1127566
151605.833333
Counter: #restricted variables / #preselected variables {Decision heuristic}
33
0.043062
0.000059
0.006105
0.001305
Timer (reduced): initialize [ns] {SAT solver}
1
299967667
Timer (reduced): initial simplification [ns] {SAT solver}
1
1660
Timer (reduced): initially implied literals [ns] {SAT solver}
1
930
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
121
3099148704
81879
306496433
25612799.206612
Timer: unit propagation [ns] {SAT solver}
121
519325
300
41560
4291.942149
Counter: #implied literals {SAT solver}
121
402
0
11
3.322314
Counter: #implied literals / #variables {SAT solver}
121
0.342382
0.000000
0.029412
0.002830
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
10
27921712
279047
14896121
2792171.200000
Counter: #implicit implied literals / #variables {SAT solver}
10
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
10
0.009709
0.000000
0.009709
0.000971
Timer: compute cut [ns] {Partitioning hypergraph}
2
13712593
5084952
8627641
6856296.500000
Counter: cut size {Partitioning hypergraph}
2
34
15
19
17.000000
Counter: cut size / #variables {Partitioning hypergraph}
2
0.011372
0.004041
0.007331
0.005686
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
8
6963511
13930
4849715
870438.875000
Counter: #vertices {Partitioning hypergraph}
8
423
0
300
52.875000
Counter: #vertices / #clauses {Partitioning hypergraph}
8
0.122765
0.000000
0.063345
0.015346
Counter: #hyperedges {Partitioning hypergraph}
8
52
0
30
6.500000
Counter: #hyperedges / #variables {Partitioning hypergraph}
8
0.017133
0.000000
0.010753
0.002142
Counter: hypergraph size {Partitioning hypergraph}
8
888
0
624
111.000000
Counter: hypergraph size / formula size {Partitioning hypergraph}
8
0.069661
0.000000
0.035556
0.008708
Timer: create equivalence structure [ns] {Partitioning hypergraph}
8
1727070
7870
984949
215883.750000
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
110
50
0
1
0.454545
Number: #current entries {Cache - component caching}
1
60
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
110
48709042471
71260
6122285023
442809477.009091
Timer: search cache record structure [ns] {Cache - component caching}
110
45939714
130
3412482
417633.763636
Timer: add cache record structure [ns] {Cache - component caching}
60
73984418
760
10888427
1233073.633333
Counter: #empty cache records / #cache records {Cache - component caching}
110
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
110
69941040
206
6765000
635827.636364
Counter: formula size (positive hit) {Cache - component caching}
50
16113240
1232
1406251
322264.800000
Counter: formula size (negative hit) {Cache - component caching}
60
53827800
206
6765000
897130.000000
Counter: #variables (cache record structure) {Cache - component caching}
110
12071960
103
1127566
109745.090909
Counter: #variables (positive hit) {Cache - component caching}
50
2934800
418
249084
58696.000000
Counter: #variables (negative hit) {Cache - component caching}
60
9137160
103
1127566
152286.000000
Counter: #clauses (cache record structure) {Cache - component caching}
110
12079080
70
1127759
109809.818182
Counter: #clauses (positive hit) {Cache - component caching}
50
2938250
430
249232
58765.000000
Counter: #clauses (negative hit) {Cache - component caching}
60
9140830
70
1127759
152347.166667
Counter: #removed clauses / #clauses {Cache - component caching}
110
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
50
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
60
48760
60
6110
812.666667
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
60
60
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
