Number: formula size {Formula representation}
1
3220
Number: #variables {Formula representation}
1
490
Number: #clauses {Formula representation}
1
490
Timer (reduced): initialize [ns] {Formula representation}
1
406972
Timer: compute connected components [ns] {Formula representation}
15
184720
610
60110
12314.666667
Number: circuit size {Circuit}
1
5810
Number: #nodes {Circuit}
1
3727
Number: #edges {Circuit}
1
5810
Number: #variables {Circuit}
1
490
Timer: copy subcircuit [ns] {Circuit}
19
688164
1200
341431
36219.157895
Counter: formula size (copy subcircuit) {Circuit}
19
3060
8
1420
161.052632
Counter: #variables (copy subcircuit) {Circuit}
19
708
4
262
37.263158
Counter: #clauses (copy subcircuit) {Circuit}
19
708
4
262
37.263158
Timer (reduced): initialize [ns] {Compiler}
1
3372346
Timer (reduced): compile [ns] {Compiler}
1
30694711
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
2
Number: #splits {Compiler}
1
18
Number: #decisions {Compiler}
1
8
Counter: ratio of recomputed hypergraph cuts {Compiler}
27
19
0
1
0.703704
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
4
1
0
1
0.250000
Counter: #connected components {Compiler}
15
27
1
4
1.800000
Counter: #monotone residual formulae / #residual formulae {Compiler}
15
0
0
0
0.000000
Counter: monotone residual formula size {Compiler}
0
0
0
0
0.000000
Counter: #pure clauses / #clauses {Compiler}
15
0.000000
0.000000
0.000000
0.000000
Counter: pure residual formula size / residual formula size {Compiler}
15
0.000000
0.000000
0.000000
0.000000
Timer: assign literal [ns] {Compiler}
32
190340
310
65630
5948.125000
Timer: unassign literal [ns] {Compiler}
32
56130
230
10030
1754.062500
Timer: get decision variable [ns] {Decision heuristic}
8
1730
50
780
216.250000
Counter: #preselected variables {Decision heuristic}
8
21
1
5
2.625000
Counter: #restricted variables / #preselected variables {Decision heuristic}
0
0.000000
0.000000
0.000000
0.000000
Timer (reduced): initialize [ns] {SAT solver}
1
259421
Timer (reduced): initial simplification [ns] {SAT solver}
1
710
Timer (reduced): initially implied literals [ns] {SAT solver}
1
450
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
17
318670
440
136090
18745.294118
Timer: unit propagation [ns] {SAT solver}
17
5542
110
1311
326.000000
Counter: #implied literals {SAT solver}
17
32
0
2
1.882353
Counter: #implied literals / #variables {SAT solver}
17
2.356311
0.000000
1.000000
0.138607
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
5
311082
7590
267621
62216.400000
Counter: #implicit implied literals / #variables {SAT solver}
5
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
5
0.760714
0.028571
0.187500
0.152143
Timer: compute cut [ns] {Partitioning hypergraph}
3
25447305
729644
23470955
8482435.000000
Counter: cut size {Partitioning hypergraph}
3
7
1
5
2.333333
Counter: cut size / #variables {Partitioning hypergraph}
3
0.108418
0.010204
0.062500
0.036139
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
3
1383927
14840
1346257
461309.000000
Counter: #vertices {Partitioning hypergraph}
3
490
10
462
163.333333
Counter: #vertices / #clauses {Partitioning hypergraph}
3
2.210714
0.625000
0.942857
0.736905
Counter: #hyperedges {Partitioning hypergraph}
3
22
3
14
7.333333
Counter: #hyperedges / #variables {Partitioning hypergraph}
3
0.394643
0.028571
0.187500
0.131548
Counter: hypergraph size {Partitioning hypergraph}
3
2754
18
2702
918.000000
Counter: hypergraph size / formula size {Partitioning hypergraph}
3
1.761353
0.450000
0.839130
0.587118
Timer: create equivalence structure [ns] {Partitioning hypergraph}
3
128701
3850
119291
42900.333333
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
27
19
0
1
0.703704
Number: #current entries {Cache - component caching}
1
8
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
27
1787299
1560
583073
66196.259259
Timer: search cache record structure [ns] {Cache - component caching}
27
5930
50
1110
219.629630
Timer: add cache record structure [ns] {Cache - component caching}
8
4560
180
1310
570.000000
Counter: #empty cache records / #cache records {Cache - component caching}
27
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
27
9244
8
3220
342.370370
Counter: formula size (positive hit) {Cache - component caching}
19
3060
8
1420
161.052632
Counter: formula size (negative hit) {Cache - component caching}
8
6184
8
3220
773.000000
Counter: #variables (cache record structure) {Cache - component caching}
27
1858
4
490
68.814815
Counter: #variables (positive hit) {Cache - component caching}
19
708
4
262
37.263158
Counter: #variables (negative hit) {Cache - component caching}
8
1150
4
490
143.750000
Counter: #clauses (cache record structure) {Cache - component caching}
27
1858
4
490
68.814815
Counter: #clauses (positive hit) {Cache - component caching}
19
708
4
262
37.263158
Counter: #clauses (negative hit) {Cache - component caching}
8
1150
4
490
143.750000
Counter: #removed clauses / #clauses {Cache - component caching}
27
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
19
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
8
510
30
130
63.750000
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
8
8
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
