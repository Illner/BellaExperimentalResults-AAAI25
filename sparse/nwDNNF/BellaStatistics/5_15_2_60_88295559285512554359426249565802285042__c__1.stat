Number: formula size {Formula representation}
1
1240
Number: #variables {Formula representation}
1
290
Number: #clauses {Formula representation}
1
260
Timer (reduced): initialize [ns] {Formula representation}
1
174780
Timer: compute connected components [ns] {Formula representation}
11
473540
3150
155430
43049.090909
Number: circuit size {Circuit}
1
1666
Number: #nodes {Circuit}
1
1087
Number: #edges {Circuit}
1
1666
Number: #variables {Circuit}
1
290
Timer: copy subcircuit [ns] {Circuit}
4
205540
11670
85110
51385.000000
Counter: formula size (copy subcircuit) {Circuit}
4
1504
104
752
376.000000
Counter: #variables (copy subcircuit) {Circuit}
4
506
52
206
126.500000
Counter: #clauses (copy subcircuit) {Circuit}
4
400
36
176
100.000000
Timer (reduced): initialize [ns] {Compiler}
1
7001136
Timer (reduced): compile [ns] {Compiler}
1
3510073
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
0
Number: #decisions {Compiler}
1
5
Counter: ratio of recomputed hypergraph cuts {Compiler}
9
3
0
1
0.333333
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
2
0
0
0
0.000000
Counter: #connected components {Compiler}
11
9
0
1
0.818182
Counter: #monotone residual formulae / #residual formulae {Compiler}
11
2
0
1
0.181818
Counter: monotone residual formula size {Compiler}
2
64
32
32
32.000000
Counter: #pure clauses / #clauses {Compiler}
11
2.560000
0.000000
1.000000
0.232727
Counter: pure residual formula size / residual formula size {Compiler}
11
2.424242
0.000000
1.000000
0.220386
Timer: assign literal [ns] {Compiler}
20
63480
470
13800
3174.000000
Timer: unassign literal [ns] {Compiler}
20
24770
220
3970
1238.500000
Timer: get decision variable [ns] {Decision heuristic}
5
910
60
530
182.000000
Counter: #preselected variables {Decision heuristic}
5
11
1
4
2.200000
Counter: #restricted variables / #preselected variables {Decision heuristic}
0
0.000000
0.000000
0.000000
0.000000
Timer (reduced): initialize [ns] {SAT solver}
1
166170
Timer (reduced): initial simplification [ns] {SAT solver}
1
2370
Timer (reduced): initially implied literals [ns] {SAT solver}
1
160
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
11
100000
1980
22130
9090.909091
Timer: unit propagation [ns] {SAT solver}
11
3460
100
830
314.545455
Counter: #implied literals {SAT solver}
11
20
0
2
1.818182
Counter: #implied literals / #variables {SAT solver}
11
0.215061
0.000000
0.058824
0.019551
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
3
190390
18990
149750
63463.333333
Counter: #implicit implied literals / #variables {SAT solver}
3
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
3
0.055703
0.017241
0.019231
0.018568
Timer: compute cut [ns] {Partitioning hypergraph}
1
716948
716948
716948
716948.000000
Counter: cut size {Partitioning hypergraph}
1
4
4
4
4.000000
Counter: cut size / #variables {Partitioning hypergraph}
1
0.013793
0.013793
0.013793
0.013793
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
2
320310
9170
311140
160155.000000
Counter: #vertices {Partitioning hypergraph}
2
7
0
7
3.500000
Counter: #vertices / #clauses {Partitioning hypergraph}
2
0.026923
0.000000
0.026923
0.013462
Counter: #hyperedges {Partitioning hypergraph}
2
5
0
5
2.500000
Counter: #hyperedges / #variables {Partitioning hypergraph}
2
0.017241
0.000000
0.017241
0.008621
Counter: hypergraph size {Partitioning hypergraph}
2
21
0
21
10.500000
Counter: hypergraph size / formula size {Partitioning hypergraph}
2
0.016935
0.000000
0.016935
0.008468
Timer: create equivalence structure [ns] {Partitioning hypergraph}
2
34590
5010
29580
17295.000000
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
9
4
0
1
0.444444
Number: #current entries {Cache - component caching}
1
5
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
9
1137836
33290
331159
126426.222222
Timer: search cache record structure [ns] {Cache - component caching}
9
3900
90
920
433.333333
Timer: add cache record structure [ns] {Cache - component caching}
5
4940
270
3740
988.000000
Counter: #empty cache records / #cache records {Cache - component caching}
9
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
9
4248
104
1240
472.000000
Counter: formula size (positive hit) {Cache - component caching}
4
1504
104
752
376.000000
Counter: formula size (negative hit) {Cache - component caching}
5
2744
104
1240
548.800000
Counter: #variables (cache record structure) {Cache - component caching}
9
1302
52
290
144.666667
Counter: #variables (positive hit) {Cache - component caching}
4
506
52
206
126.500000
Counter: #variables (negative hit) {Cache - component caching}
5
796
52
290
159.200000
Counter: #clauses (cache record structure) {Cache - component caching}
9
1060
36
260
117.777778
Counter: #clauses (positive hit) {Cache - component caching}
4
400
36
176
100.000000
Counter: #clauses (negative hit) {Cache - component caching}
5
660
36
260
132.000000
Counter: #removed clauses / #clauses {Cache - component caching}
9
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
4
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
5
330
30
140
66.000000
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
5
5
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
