Number: formula size {Formula representation}
1
29860680
Number: #variables {Formula representation}
1
4977000
Number: #clauses {Formula representation}
1
4977035
Timer (reduced): initialize [ns] {Formula representation}
1
3370612026
Timer: compute connected components [ns] {Formula representation}
111
27251470590
37090
2454115691
245508744.054054
Number: circuit size {Circuit}
1
59830885
Number: #nodes {Circuit}
1
16489607
Number: #edges {Circuit}
1
59830885
Number: #variables {Circuit}
1
4977000
Timer: copy subcircuit [ns] {Circuit}
44
17575535178
3146379
1648589385
399443981.318182
Counter: formula size (copy subcircuit) {Circuit}
44
77461824
6648
6242208
1760496.000000
Counter: #variables (copy subcircuit) {Circuit}
44
13965996
2364
1099344
317409.000000
Counter: #clauses (copy subcircuit) {Circuit}
44
13962146
2239
1099324
317321.500000
Timer (reduced): initialize [ns] {Compiler}
1
4784150355
Timer (reduced): compile [ns] {Compiler}
1
4878523440035
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
0
Number: #splits {Compiler}
1
0
Number: #decisions {Compiler}
1
55
Counter: ratio of recomputed hypergraph cuts {Compiler}
99
97
0
1
0.979798
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
55
43
0
1
0.781818
Counter: #connected components {Compiler}
111
99
0
1
0.891892
Counter: #monotone residual formulae / #residual formulae {Compiler}
111
12
0
1
0.108108
Counter: monotone residual formula size {Compiler}
12
4320
360
360
360.000000
Counter: #pure clauses / #clauses {Compiler}
111
12.313180
0.000000
1.000000
0.110930
Counter: pure residual formula size / residual formula size {Compiler}
111
12.212766
0.000000
1.000000
0.110025
Timer: assign literal [ns] {Compiler}
170
4486425157756
3210
1052337332453
26390736222.094118
Timer: unassign literal [ns] {Compiler}
170
2848445801
700
351845323
16755563.535294
Timer: get decision variable [ns] {Decision heuristic}
55
1460692154
120
173239678
26558039.163636
Counter: #preselected variables {Decision heuristic}
55
43810546
1
4977000
796555.381818
Counter: #restricted variables / #preselected variables {Decision heuristic}
43
0.023009
0.000012
0.002732
0.000535
Timer (reduced): initialize [ns] {SAT solver}
1
1453542227
Timer (reduced): initial simplification [ns] {SAT solver}
1
1050
Timer (reduced): initially implied literals [ns] {SAT solver}
1
750
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
111
20903269823
36209
1367604150
188317746.153153
Timer: unit propagation [ns] {SAT solver}
111
875501
310
260298
7887.396396
Counter: #implied literals {SAT solver}
111
395
0
12
3.558559
Counter: #implied literals / #variables {SAT solver}
111
0.065293
0.000000
0.005525
0.000588
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
21
35819597
362607
6197831
1705695.095238
Counter: #implicit implied literals / #variables {SAT solver}
21
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
21
0.002089
0.000000
0.001838
0.000099
Timer: compute cut [ns] {Partitioning hypergraph}
1
1201638
1201638
1201638
1201638.000000
Counter: cut size {Partitioning hypergraph}
1
6
6
6
6.000000
Counter: cut size / #variables {Partitioning hypergraph}
1
0.001505
0.001505
0.001505
0.001505
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
12
3914212
73760
1339247
326184.333333
Counter: #vertices {Partitioning hypergraph}
12
13
0
13
1.083333
Counter: #vertices / #clauses {Partitioning hypergraph}
12
0.003418
0.000000
0.003418
0.000285
Counter: #hyperedges {Partitioning hypergraph}
12
13
0
13
1.083333
Counter: #hyperedges / #variables {Partitioning hypergraph}
12
0.003260
0.000000
0.003260
0.000272
Counter: hypergraph size {Partitioning hypergraph}
12
36
0
36
3.000000
Counter: hypergraph size / formula size {Partitioning hypergraph}
12
0.002532
0.000000
0.002532
0.000211
Timer: create equivalence structure [ns] {Partitioning hypergraph}
12
1829392
37839
425176
152449.333333
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
99
44
0
1
0.444444
Number: #current entries {Cache - component caching}
1
55
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
99
300347278994
424376
30482484304
3033810898.929293
Timer: search cache record structure [ns] {Cache - component caching}
99
163899218
190
23030727
1655547.656566
Timer: add cache record structure [ns] {Cache - component caching}
55
162177353
1180
20299194
2948679.145455
Counter: #empty cache records / #cache records {Cache - component caching}
99
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
99
336351103
1088
29860680
3397485.888889
Counter: formula size (positive hit) {Cache - component caching}
44
77461824
6648
6242208
1760496.000000
Counter: formula size (negative hit) {Cache - component caching}
55
258889279
1088
29860680
4707077.800000
Counter: #variables (cache record structure) {Cache - component caching}
99
57796442
544
4977000
583802.444444
Counter: #variables (positive hit) {Cache - component caching}
44
13965996
2364
1099344
317409.000000
Counter: #variables (negative hit) {Cache - component caching}
55
43830446
544
4977000
796917.200000
Counter: #clauses (cache record structure) {Cache - component caching}
99
57787202
364
4977035
583709.111111
Counter: #clauses (positive hit) {Cache - component caching}
44
13962146
2239
1099324
317321.500000
Counter: #clauses (negative hit) {Cache - component caching}
55
43825056
364
4977035
796819.200000
Counter: #removed clauses / #clauses {Cache - component caching}
99
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - component caching}
44
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
55
29979
50
1210
545.072727
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
55
55
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
